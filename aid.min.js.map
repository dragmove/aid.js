{"version":3,"sources":["aid.js"],"names":["global","self","this","_slice","Array","prototype","slice","_hasOwnProperty","Object","hasOwnProperty","aid","operator","platform","browser","string","math","date","array","object","element","file","clipboard","monad","F","existy","any","isDefined","isBoolean","constructor","Boolean","isNumber","isNaN","Number","isInteger","isFinite","Math","floor","isString","String","isArray","isObject","isFunction","Function","isRegExp","RegExp","isError","errorType","con","window","InternalError","Error","EvalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","isElement","nodeType","Node","extend","destination","source","key","inherit","ChildClass","ParentClass","super","namespace","parent","ns","split","forEach","part","memoize","func","hasher","memoized","_key","cache","apply","call","arguments","has","get","result","set","createDictionary","borrow","borrower","donor","funcName","args","bind","context","compose","func_a","func_b","not","each","iterable","_context","i","max","length","truthy","obj","falsy","nth","index","allOf","every","val","anyOf","some","constant","plucker","field","best","conditionFunc","reduce","previousValue","currentValue","iterateUntil","calculateFunc","initialValue","push","curry","arg","curry2","secondArg","firstArg","curryAll","curryArgsNum","arity","curried","rest","concat","reverseArgs","reverse","partial","partialRight","beginIndex","begin","pipeline","seed","restArgs","value","prev","current","lazyChain","calls","invoke","methodName","target","method","name","force","ret","thunk","eq","lhs","rhs","identity","tab","alt","result_a","seq","funcs","fork","join","Stack","_dataStore","_top","pop","peek","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","Date","now","getHead","find","node","findPrevious","insert","prevNodeData","prevNode","insertNode","remove","append","appendNode","getAllNodes","nodes","createLinkedList","HashTable","hashFunc","table","_hashFunc","_djb2Hash","Dictionary","items","put","position","undefined","linkedList","hash","charCodeAt","createHashTable","keys","values","size","getItems","BinarySearchTreeNode","left","right","BinarySearchTree","root","Graph","vertices","adjacencyList","_insertNode","newNode","_searchNode","_findMinNode","_removeNode","aux","_minNode","_maxNode","_inOrderTraverseNode","callback","_preOrderTraverseNode","_postOrderTraverseNode","getRoot","search","min","inOrderTraverse","preOrderTraverse","postOrderTraverse","createBinarySearchTree","addVertex","vertex","indexOf","addEdge","fromVertex","toVertex","bfs","neighbors","colors","distances","predecessors","queue","v","neighborVertices","nv","getBfsPaths","bfsPaths","datasFromBfs","filter","searchPath","edgesNum","path","dfs","datas","time","discovered","finished","_dfsVisit","_","createGraph","object_a","object_b","isWindow","userAgent","test","isMac","isIOS","MSStream","isIPhone","isIPad","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isChromePhone","isChromeTablet","isSafari","isSafariPhone","isSafariTablet","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie11","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","canUseDOM","getCookie","cookieArr","cookie","splitArr","keyStr","valueStr","decodeURIComponent","setCookie","expireSecond","domain","expires","pathStr","domainStr","setTime","getTime","toGMTString","encodeURIComponent","trim","str","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","email","exec","isIFrame","iframeHtml","getUriParam","uri","parameterName","tmpArr","params","param","eqIndex","getUriParams","getUriCombinedParams","parameters","hashStr","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","getElementPrefixedStyle","style","removeNoContentElements","html","withWhitespaceContent","regex","removeNoContentElementsRecursively","htmlRemovedNoContentElements","lastIndex","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","match","isPalindrome","isDecoded","decodeFunc","decodeFn","decodedStr","error","decodeRecursively","escapeRegExp","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","getSizeWidthFit","isEpsilonEqual","number_a","number_b","epsilon","EPSILON","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","getLoopedLastIndex","getReverseLoopedFirstIndex","factorial","getObjForPagination","totalPostNum","displayPostNumPerPage","displayPaginationBtnNum","pageIndex","totalPageNum","paginationBtnGroupIndex","firstPageIndex","lastPageIndex","nextPageIndex","prevPageIndex","degreeToRadian","degree","PI","radianToDegree","radian","getHeightOfRightTriangle","baseLineWidth","acuteAngleDegree","tan","getDistanceBetweenTwoPoints","point1","point2","sqrt","pow","getOrthogonalPointBetweenLineAndSomePoint","collinearPoint1","collinearPoint2","somePoint","diffX","diffY","lineSlope","somePointLineSlope","orthogonalPoint","getRandomPositiveNegative","round","random","getRandomFloat","getRandomInt","minInt","maxInt","remap","remapedMin","remapedMax","gt","lt","gte","lte","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","getIndexOfObjectHasProperty","overlappedConditionSortByProperty","sortConditions","conditionIndex","condition","sort","prevProperty","property","nextConditionIndex","nextCondition","memoObj","memoArr","len","acc","curVal","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","shallowEqual","objA","objB","isNotObject","isNull","keysA","keysB","bHasOwnProperty","isEntirelyInViewport","ele","jQuery","rect","getBoundingClientRect","eqZero","top","bottom","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","verticallyInView","horizontallyInView","appendScriptFile","fileUrl","targetElementToAppend","loadCompleteCallback","script","onreadystatechange","onload","readyState","src","appendChild","firstScript","getElementsByTagName","parentNode","insertBefore","copyText","successCallback","errorCallback","writeText","then","textArea","body","focus","select","execCommand","removeChild","Identity","_value","Empty","map","flatmap","Wrapper","of","Nothing","getOrElse","other","chain","Just","Maybe","fromNullable","just","nothing","Left","orElse","getOrElseThrow","errorMessage","Right","Either","IO","effect","from","run","exports","module","define","amd"],"mappings":"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","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.95\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2019 Hyun-Seok.Kim, dragmove@gmail.com\n */\n(function() {\r\n  'use strict';\r\n\r\n  // Establish the global object, `window` (`self`) in the browser, `global`\r\n  // on the server, or `this` in some virtual machines. We use `self`\r\n  // instead of `window` for `WebWorker` support.\r\n  var global =\r\n    (typeof self == 'object' && self.self === self && self) ||\r\n    (typeof global == 'object' && global.global === global && global) ||\r\n    this ||\r\n    {};\r\n\r\n  var _slice = Array.prototype.slice;\r\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n  var aid = {},\r\n    operator = {},\r\n    platform = {},\r\n    browser = {},\r\n    string = {},\r\n    math = {},\r\n    date = {},\r\n    array = {},\r\n    object = {},\r\n    element = {},\r\n    file = {},\r\n    clipboard = {},\r\n    monad = {}; // https://en.wikipedia.org/wiki/Monad_(functional_programming)\r\n\r\n  /**\r\n   * is null/undefined or other\r\n   *\r\n   * @static\r\n   * @method existy\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.existy(undefined) ); // false\r\n   * console.log( aid.existy(null) ); // false\r\n   * console.log( aid.existy('') ); // true\r\n   */\r\n  aid.existy = function existy(any) {\r\n    return any != null;\r\n  };\r\n\r\n  /**\r\n   * check defined\r\n   *\r\n   * @static\r\n   * @method isDefined\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isDefined(undefined) ); // false\r\n   * console.log( aid.isDefined(null) ); // false\r\n   * console.log( aid.isDefined(0) ); // true\r\n   */\r\n  aid.isDefined = function isDefined(any) {\r\n    if (any === null || typeof any === 'undefined') return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * check type is Boolean\r\n   *\r\n   * @static\r\n   * @method isBoolean\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isBoolean(false) ); // true\r\n   */\r\n  aid.isBoolean = function isBoolean(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === Boolean;\r\n  };\r\n\r\n  /**\r\n   * check type is Number\r\n   *\r\n   * @static\r\n   * @method isNumber\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isNumber(-1) ); // true\r\n   */\r\n  aid.isNumber = function isNumber(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return !isNaN(any) && any.constructor === Number;\r\n  };\r\n\r\n  /**\r\n   * check type is Integer Number\r\n   *\r\n   * @static\r\n   * @method isInteger\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isInteger(-1) ); // true\r\n   */\r\n  aid.isInteger = function isInteger(any) {\r\n    if (!aid.isNumber(any)) return false;\r\n\r\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n    return isFinite(any) && Math.floor(any) === any;\r\n  };\r\n\r\n  /**\r\n   * check type is String\r\n   *\r\n   * @static\r\n   * @method isString\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isString('') ); // true\r\n   */\r\n  aid.isString = function isString(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === String;\r\n  };\r\n\r\n  /**\r\n   * check type is Array\r\n   *\r\n   * @static\r\n   * @method isArray\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isArray([]) ); // true\r\n   */\r\n  aid.isArray = function isArray(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === Array;\r\n  };\r\n\r\n  /**\r\n   * check type is Object\r\n   *\r\n   * @static\r\n   * @method isObject\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isObject({}) ); // true\r\n   */\r\n  aid.isObject = function isObject(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === Object;\r\n  };\r\n\r\n  /**\r\n   * check type is Function\r\n   *\r\n   * @static\r\n   * @method isFunction\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isFunction(function(){}) ); // true\r\n   */\r\n  aid.isFunction = function isFunction(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === Function;\r\n  };\r\n\r\n  /**\r\n   * check type is RegExp\r\n   *\r\n   * @static\r\n   * @method isRegExp\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\r\n   * console.log( aid.isRegExp(/^aid/) ); // true\r\n   */\r\n  aid.isRegExp = function isRegExp(any) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    return any.constructor === RegExp;\r\n  };\r\n\r\n  /**\r\n   * check type is Error (can check Error, EvalError, InternalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError)\r\n   * refer to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n   *\r\n   * @static\r\n   * @method isError\r\n   * @param {*} any\r\n   * @param {Constructor} errorType (optional)\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isError(new Error('msg')) ); // true\r\n   * console.log( aid.isError(new TypeError('msg')) ); // true\r\n   * console.log( aid.isError(new RangeError('msg')) ); // true\r\n   * console.log( aid.isError(new TypeError('msg'), TypeError) ); // true\r\n   * console.log( aid.isError(new TypeError('msg'), Error) ); // false\r\n   * console.log( aid.isError(new TypeError('msg'), RangeError) ); // false\r\n   */\r\n  aid.isError = function isError(any, errorType) {\r\n    if (!aid.isDefined(any)) return false;\r\n\r\n    var con = any.constructor;\r\n\r\n    if (!aid.isDefined(errorType)) {\r\n      // Non-standard - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError\r\n      if (window.InternalError && con === window.InternalError) return true;\r\n\r\n      return (\r\n        con === Error ||\r\n        con === EvalError ||\r\n        con === RangeError ||\r\n        con === ReferenceError ||\r\n        con === SyntaxError ||\r\n        con === TypeError ||\r\n        con === URIError\r\n      );\r\n    }\r\n\r\n    return con === errorType;\r\n  };\r\n\r\n  /**\r\n   * check type is HTML element\r\n   * refer to https://developer.mozilla.org/en-US/docs/Web/API/Element\r\n   *\r\n   * @static\r\n   * @method isElement\r\n   * @param {*} any\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isElement(document.createElement('div')) ); // true\r\n   */\r\n  aid.isElement = function isElement(any) {\r\n    return aid.isDefined(any) && typeof any === 'object' && any.nodeType === 1 && any instanceof Node;\r\n  };\r\n\r\n  /**\r\n   * extend function\r\n   *\r\n   * @static\r\n   * @method extend\r\n   * @param {Object} prototype of class function, or object has variables or methods.\r\n   * @param {Object} object has variables or methods\r\n   * @example\r\n   * function Destination() {\r\n   *   this.name = 'destination';\r\n   *   this.type = 'json';\r\n   * };\r\n   *\r\n   * var source = {\r\n   *   getName: function() { return this.name; },\r\n   *   getType: function() { return this.type; }\r\n   * };\r\n   *\r\n   * aid.extend(Destination.prototype, source);\r\n   *\r\n   * var destination = new Destination();\r\n   * console.log( destination.getName() ); // 'destination'\r\n   * console.log( destination.getType() ); // 'json'\r\n   */\r\n  aid.extend = function extend(destination, source) {\r\n    if (!(destination instanceof Object) || !(typeof destination === 'object')) {\r\n      throw new TypeError('[aid.extend] Type of destination parameter must be instance of Object, and object.');\r\n    }\r\n\r\n    if (!(typeof source === 'object')) throw new TypeError('[aid.extend] Type of source parameter must be Object.');\r\n\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        destination[key] = source[key];\r\n      }\r\n    }\r\n\r\n    return destination;\r\n  };\r\n\r\n  /**\r\n   * inherit Class function\r\n   *\r\n   * @static\r\n   * @method inherit\r\n   * @param {class} ChildClass - child class function\r\n   * @param {class} ParentClass - parent class function\r\n   * @example\r\n   */\r\n  aid.inherit = (function() {\r\n    // use closure, protect gabarge collection.\r\n    var F = function() {};\r\n\r\n    return function inherit(ChildClass, ParentClass) {\r\n      F.prototype = ParentClass.prototype;\r\n\r\n      ChildClass.prototype = new F();\r\n      ChildClass.prototype.constructor = ChildClass;\r\n      ChildClass.super = ParentClass.prototype;\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * create namespace\r\n   *\r\n   * @static\r\n   * @method namespace\r\n   * @param {String} namespace\r\n   * @param {Object} parent\r\n   * @returns {Object} return object\r\n   * @example\r\n   * aid.namespace('first.second.third'); // create first.second.third object\r\n   */\r\n  aid.namespace = function(namespace, parent) {\r\n    if (!aid.isString(namespace)) throw new TypeError('[aid.namespace] Type of namespace parameter must be String.');\r\n\r\n    if (!(aid.isObject(parent) || !aid.isDefined(parent))) {\r\n      throw new TypeError('[aid.namespace] Type of parent parameter must be Object or null or undefined.');\r\n    }\r\n\r\n    var ns = parent || global;\r\n    if (namespace) {\r\n      var parts = namespace.split('.');\r\n\r\n      parts.forEach(function(part) {\r\n        if (!ns[part]) ns[part] = {};\r\n        ns = ns[part];\r\n      });\r\n    }\r\n\r\n    return ns;\r\n  };\r\n\r\n  /**\r\n   * return memoized function\r\n   *\r\n   * @static\r\n   * @method memoize\r\n   * @param {Function} func\r\n   * @param {Function} hasher (optional)\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var plus = function(a, b) { return a + b; };\r\n   * var memoized = aid.memoize(plus);\r\n   * console.log( memoized('aid', '.js') ); // aid.js\r\n   */\r\n  aid.memoize = function memoize(func, hasher) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.memoize] Type of func parameter must be Function.');\r\n\r\n    if (aid.isDefined(hasher) && !aid.isFunction(hasher))\r\n      throw new TypeError('[aid.memoize] Type of hasher parameter must be undefined or null or Function.');\r\n\r\n    var memoized = function(_key) {\r\n      var cache = memoized.cache;\r\n\r\n      var key = hasher ? hasher.apply(null, _slice.call(arguments)) : _key;\r\n      if (cache.has(key)) return cache.get(key);\r\n\r\n      var result = func.apply(null, _slice.call(arguments));\r\n      cache.set(key, result);\r\n\r\n      return result;\r\n    };\r\n\r\n    memoized.cache = aid.createDictionary();\r\n\r\n    return memoized;\r\n  };\r\n\r\n  /**\r\n   * borrow method from donor object\r\n   *\r\n   * @static\r\n   * @method borrow\r\n   * @param {Object} borrower\r\n   * @param {Object} donor\r\n   * @param {String} funcName\r\n   * @example\r\n   * var borrower = {}, donor = { say: function() { return 'hello, world'; } };\r\n   * aid.borrow(borrower, donor, 'say');\r\n   * console.log( borrower.say() ); // 'hello, world'\r\n   */\r\n  aid.borrow = function borrow(borrower, donor, funcName) {\r\n    if (!aid.isObject(borrower) || !aid.isObject(donor))\r\n      throw new TypeError('[aid.borrow] Type of borrower, donor parameters must be Object.');\r\n\r\n    if (!aid.isString(funcName)) throw new TypeError('[aid.borrow] Type of funcName parameter must be String.');\r\n\r\n    if (!aid.isDefined(donor[funcName]))\r\n      throw new Error('[aid.borrow] donor object parameter has not function with funcName parameter.');\r\n\r\n    if (aid.isDefined(borrower[funcName]))\r\n      throw new Error('[aid.borrow] borrower object parameter already has function with funcName parameter.');\r\n\r\n    borrower[funcName] = function() {\r\n      var args = _slice.call(arguments);\r\n      return donor[funcName].apply(this, args);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function bind context and parameters\r\n   *\r\n   * @static\r\n   * @method bind\r\n   * @param {Function} func\r\n   * @param {Object} context\r\n   * @returns {Function} return function\r\n   * @example\r\n   * this.title = 'global - aid.js';\r\n   * var obj = { title: 'obj - aid.js', getTitle: function() { return this.title; } };\r\n   * var getObjTitle = bind(obj.getTitle, obj), getGlobalTitle = bind(obj.getTitle, window);\r\n   * console.log( getObjTitle() ); // 'obj - aid.js';\r\n   * console.log( getGlobalTitle() ); // 'global - aid.js';\r\n   */\r\n  aid.bind = function bind(func, context) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.bind] Type of func parameter must be Function.');\r\n\r\n    return function() {\r\n      return func.apply(context, arguments);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function composed function_a and function_b\r\n   *\r\n   * @static\r\n   * @method compose\r\n   * @param {Function} func_a\r\n   * @param {Function} func_b\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  aid.compose = function compose(func_a, func_b) {\r\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\r\n      throw new TypeError('[aid.compose] Type of func_a, func_b parameters must be Function.');\r\n    }\r\n\r\n    return function() {\r\n      return func_a(func_b.apply(null, arguments));\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function negate object parameter\r\n   *\r\n   * @static\r\n   * @method not\r\n   * @param {Function} func\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var isNotNaN = aid.not(isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  aid.not = function not(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.not] Type of func parameter must be Function.');\r\n\r\n    return function() {\r\n      return !func.apply(null, arguments);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * each method for data can loop\r\n   *\r\n   * @static\r\n   * @method each\r\n   * @param {(Array|String)} iterable\r\n   * @param {Function} func\r\n   * @param {Object} context\r\n   * @example\r\n   * var result = [];\r\n   * aid.each('aid.js', function(v) { result.push(v); }, null);\r\n   * console.log( result.join('') ); // 'aid.js'\r\n   */\r\n  aid.each = function each(iterable, func, context) {\r\n    if (!(aid.isArray(iterable) || aid.isString(iterable))) {\r\n      throw new TypeError('[aid.each] Type of iterable parameter must be Array or String.');\r\n    }\r\n\r\n    var _context = aid.existy(context) ? context : null;\r\n\r\n    for (var i = 0, max = iterable.length; i < max; i++) {\r\n      func.call(_context, iterable[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * check object is truthy\r\n   *\r\n   * @static\r\n   * @method truthy\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.truthy(true) ); // true\r\n   * console.log( aid.truthy([]) ); // true\r\n   * console.log( aid.truthy(0) ); // false\r\n   * console.log( aid.truthy('') ); // false\r\n   */\r\n  aid.truthy = function truthy(obj) {\r\n    return !!obj;\r\n  };\r\n\r\n  /**\r\n   * check object is falsy\r\n   *\r\n   * @static\r\n   * @method falsy\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.falsy(true) ); // false\r\n   * console.log( aid.falsy([]) ); // false\r\n   * console.log( aid.falsy(0) ); // true\r\n   * console.log( aid.falsy('') ); // true\r\n   */\r\n  aid.falsy = function falsy(obj) {\r\n    return !!!obj;\r\n  };\r\n\r\n  /**\r\n   * get indexed value of array or string\r\n   *\r\n   * @static\r\n   * @method nth\r\n   * @param {Array|String} iterable\r\n   * @param {Number} index\r\n   * @example\r\n   * console.log( aid.nth('string', 1) ); // 't'\r\n   * console.log( aid.nth('string', -1) ); // null\r\n   * console.log( aid.nth([0, 'str', true], 2) ); // true\r\n   * console.log( aid.nth([0, 'str', true], 99) ); // null\r\n   */\r\n  aid.nth = function nth(iterable, index) {\r\n    if (!(aid.isArray(iterable) || aid.isString(iterable))) {\r\n      throw new TypeError('[aid.nth] Type of iterable parameter must be Array or String.');\r\n    }\r\n\r\n    if (!aid.isInteger(index)) throw new TypeError('[aid.nth] Type of index parameter must be Integer Number.');\r\n\r\n    return index < 0 || index > iterable.length - 1 ? null : iterable[index];\r\n  };\r\n\r\n  /**\r\n   * check all arguments are true\r\n   *\r\n   * @static\r\n   * @method allOf\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.allOf(true, true) ); // true\r\n   * console.log( aid.allOf(true, false) ); // false\r\n   */\r\n  aid.allOf = function allOf(/*args*/) {\r\n    var args = _slice.call(arguments);\r\n\r\n    return args.every(function(val) {\r\n      return val === true;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * check some argument is true\r\n   *\r\n   * @static\r\n   * @method anyOf\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( anyOf(true, false) ); // true\r\n   * console.log( anyOf(false, false) ); // false\r\n   */\r\n  aid.anyOf = function anyOf(/*args*/) {\r\n    var args = _slice.call(arguments);\r\n\r\n    return args.some(function(val) {\r\n      return val === true;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * return function always return constant value\r\n   * http://underscorejs.org/#constant\r\n   *\r\n   * @static\r\n   * @method constant\r\n   * @param {Object} obj\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var obj = {name: 'aid.js'};\r\n   * console.log( aid.constant(obj)() === obj ); // true\r\n   */\r\n  aid.constant = function constant(obj) {\r\n    return function() {\r\n      return obj;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function pluck field of object, array, string\r\n   *\r\n   * @static\r\n   * @method plucker\r\n   * @param {(String|Number)} field of object, array, string\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var getTitle = aid.plucker('title');\r\n   * var obj = {title: 'aid.js', description: 'A bundle of Javascript util Library for help developers. No dependency to other Libraries.'};\r\n   * console.log( getTitle(obj) ); // 'aid.js'\r\n   *\r\n   * var getFirst = aid.plucker(0);\r\n   * var str = 'aid.js';\r\n   * console.log( getFirst(str) ); // 'a'\r\n   *\r\n   * var getLength = aid.plucker('length');\r\n   * var arr = [1, 2, 3, 4, 5];\r\n   * console.log( getLength(arr) ); // 5\r\n   */\r\n  aid.plucker = function plucker(field) {\r\n    if (!(aid.isString(field) || aid.isNumber(field))) {\r\n      throw new TypeError('[aid.plucker] Type of field parameter must be String or Number.');\r\n    }\r\n\r\n    return function(obj) {\r\n      if (!(aid.isObject(obj) || aid.isArray(obj) || aid.isString(obj))) {\r\n        throw new TypeError('[aid.plucker] Type of obj parameter must be Object or Array or String.');\r\n      }\r\n\r\n      return obj[field];\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return best(optimized by condition function) value\r\n   *\r\n   * @static\r\n   * @method best\r\n   * @param {Function} condition function to find best value\r\n   * @param {Array} array\r\n   * @example\r\n   * console.log( aid.best(function(x, y) { return x > y; }, [2, 4, 1, 5, 3]) ); // 5\r\n   */\r\n  aid.best = function best(conditionFunc, array) {\r\n    if (!aid.isFunction(conditionFunc))\r\n      throw new TypeError('[aid.best] Type of conditionFunc parameter must be Function.');\r\n\r\n    if (!aid.isArray(array)) throw new TypeError('[aid.best] Type of array parameter must be Array.');\r\n\r\n    return array.reduce(function(previousValue, currentValue) {\r\n      return conditionFunc(previousValue, currentValue) ? previousValue : currentValue;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * return array has values filtered\r\n   *\r\n   * @static\r\n   * @method iterateUntil\r\n   * @param {Function} function return value\r\n   * @param {Function} function has condition\r\n   * @param {Object} initial value\r\n   * @returns {Array} return array has values filtered\r\n   * @example\r\n   * console.log( aid.iterateUntil(function(n) { return n + n; }, function(n) { return n <= 1042 }, 1) ); // [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\r\n   */\r\n  aid.iterateUntil = function iterateUntil(calculateFunc, conditionFunc, initialValue) {\r\n    if (!aid.isFunction(calculateFunc))\r\n      throw new TypeError('[aid.iterateUntil] Type of calculateFunc parameter must be Function.');\r\n\r\n    if (!aid.isFunction(conditionFunc))\r\n      throw new TypeError('[aid.iterateUntil] Type of conditionFunc parameter must be Function.');\r\n\r\n    var array = [],\r\n      result = calculateFunc(initialValue);\r\n\r\n    while (conditionFunc(result)) {\r\n      array.push(result);\r\n      result = calculateFunc(result);\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  /**\r\n   * curry function can use one parameter\r\n   *\r\n   * @static\r\n   * @method curry\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   */\r\n  aid.curry = function curry(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curry] Type of func parameter must be Function.');\r\n\r\n    return function(arg) {\r\n      return func(arg);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * curry function can use two parameter\r\n   *\r\n   * @static\r\n   * @method curry2\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var parseBinaryStr = aid.curry2(parseInt)(2);\r\n   * console.log( parseBinaryStr('111') ); // 7\r\n   */\r\n  aid.curry2 = function curry2(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curry2] Type of func parameter must be Function.');\r\n\r\n    return function(secondArg) {\r\n      return function(firstArg) {\r\n        return func(firstArg, secondArg);\r\n      };\r\n    };\r\n  };\r\n\r\n  /**\r\n   * curry function for variadic functions\r\n   *\r\n   * @static\r\n   * @method curryAll\r\n   * @param {Function} function\r\n   * @param {Number} minimum number of arguments to curry\r\n   * @returns {Function} return function\r\n   * @example\r\n   * console.log( curryAll(Math.max, 2)(1, 99) ); // 99\r\n   * console.log( curryAll(Math.max, 2)(1)(99) ); // 99\r\n   */\r\n  aid.curryAll = function curryAll(func, curryArgsNum) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curryAll] Type of func parameter must be Function.');\r\n\r\n    var arity = curryArgsNum || func.length;\r\n\r\n    return function curried() {\r\n      var args = _slice.call(arguments),\r\n        context = this;\r\n\r\n      return args.length >= arity\r\n        ? func.apply(context, args)\r\n        : function() {\r\n            var rest = _slice.call(arguments);\r\n            return curried.apply(context, args.concat(rest));\r\n          };\r\n    };\r\n  };\r\n\r\n  /**\r\n   * reverse arguments of function\r\n   * refer to https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch3.md/#reversing-arguments\r\n   *\r\n   * @static\r\n   * @method reverseArgs\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var getReverseArgs = aid.reverseArgs(function() { return Array.prototype.slice.call(arguments); });\r\n   * console.log( getReverseArgs(99, 'aid.js') ); // ['aid.js', 99]\r\n   */\r\n  aid.reverseArgs = function reverseArgs(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.reverseArgs] Type of func parameter must be Function.');\r\n\r\n    return function(/* args... */) {\r\n      var args = _slice.call(arguments);\r\n\r\n      return func.apply(null, args.concat().reverse());\r\n    };\r\n  };\r\n\r\n  /**\r\n   * partial application\r\n   *\r\n   * @static\r\n   * @method partial\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * function sum() {\r\n   *   var args = Array.prototype.slice.call(arguments);\r\n   *   return args.reduce(function(acc, cur) {\r\n   *     return acc + cur;\r\n   *   }, 0);\r\n   * }\r\n   * console.log( aid.partial(sum)() ); // 0\r\n   * console.log( aid.partial(sum, 1)() ); // 1\r\n   * console.log( aid.partial(sum, 1)(2) ); // 3\r\n   * console.log( aid.partial(sum)(1, 2, 3) ); // 6\r\n   */\r\n  aid.partial = function partial(func /*, args... */) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.partial] Type of func parameter must be Function.');\r\n\r\n    var args = aid.rest(_slice.call(arguments));\r\n\r\n    return function(/* args... */) {\r\n      return func.apply(func, args.concat(_slice.call(arguments)));\r\n    };\r\n  };\r\n\r\n  /**\r\n   * partial application for the right arguments\r\n   *\r\n   * @static\r\n   * @method partialRight\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * function three(str, num, arr) { return str + ' ' + num + ' ' + arr; }\r\n   * console.log( aid.partialRight(three, 99, [1, 2, 3])('aid.js') ); // 'aid.js 99 1,2,3'\r\n   * console.log( aid.partial( aid.partialRight(three, [1, 2, 3]), 'aid.js' )(99) ); // 'aid.js 99 1,2,3'\r\n   */\r\n  aid.partialRight = function partialRight(func /*, args... */) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.partialRight] Type of func parameter must be Function.');\r\n\r\n    var args = aid.rest(_slice.call(arguments));\r\n\r\n    return function(/* args... */) {\r\n      return func.apply(null, _slice.call(arguments).concat(args));\r\n    };\r\n  };\r\n\r\n  /**\r\n   * rest\r\n   * refer to _.rest function of underscore.js - https://github.com/jashkenas/underscore/blob/master/underscore.js\r\n   *\r\n   * @static\r\n   * @method rest\r\n   * @param {Array} array\r\n   * @param {Number} begin index to slice arguments.\r\n   * @returns {Array} return array\r\n   * @example\r\n   * var array = [1, 2, 3, 4, 5];\r\n   * console.log( aid.rest(array) ); // [2, 3, 4, 5]\r\n   * console.log( aid.rest(array, 2) ); // [3, 4, 5]\r\n   */\r\n  aid.rest = function rest(array, beginIndex) {\r\n    if (!aid.isArray(array)) throw new TypeError('[aid.rest] Type of array parameter must be Array.');\r\n\r\n    var begin = !aid.existy(beginIndex) ? 1 : beginIndex;\r\n\r\n    return _slice.call(array, begin);\r\n  };\r\n\r\n  /**\r\n   * pipeline\r\n   *\r\n   * @static\r\n   * @method pipeline\r\n   * @param {Object} seed\r\n   * @returns {Object} return value\r\n   * @example\r\n   * function negative(n) { return n * -1; }\r\n   * function half(n) { return n / 2; }\r\n   * function negativeHalf(n) { return aid.pipeline(n, negative, half); }\r\n   * console.log( aid.pipeline(80, negative) ); // -80\r\n   * console.log( negativeHalf(80) ); // 80 * -1 / 2\r\n   */\r\n  aid.pipeline = function pipeline(seed /* args */) {\r\n    var restArgs = aid.rest(_slice.call(arguments));\r\n\r\n    aid.each(\r\n      restArgs,\r\n      function(value) {\r\n        if (!aid.isFunction(value)) throw new TypeError('[aid.pipeline] Type of rest parameters must be Function.');\r\n      },\r\n      null\r\n    );\r\n\r\n    return restArgs.reduce(function(prev, current) {\r\n      return current(prev);\r\n    }, seed);\r\n  };\r\n\r\n  /**\r\n   * lazyChain\r\n   *\r\n   * @static\r\n   * @method lazyChain\r\n   * @param {Object} object\r\n   * @returns {Object} return {invoke, force}\r\n   * @example\r\n   * var lazy = aid.lazyChange([2, 1, 3]).invoke('concat', [7, 7, 8, 9, 0]).invoke('sort');\r\n   * console.log( lazy.force() ); // [0, 1, 2, 3, 7, 7, 8, 9]\r\n   *\r\n   * // with aid.pipeline\r\n   * function double(array) { return array.map(function(v) { return v * 2; }); }\r\n   * function lazyReverseAndNegative(array) { return aid.lazyChain(array).invoke('reverse').invoke('map', function(v) { return v * -1; }); }\r\n   * console.log( aid.pipeline([1, 2, 3], double, lazyReverseAndNegative).force() ); // [-6, -4, -2]\r\n   */\r\n  aid.lazyChain = function lazyChain(obj) {\r\n    var calls = [];\r\n\r\n    return {\r\n      invoke: function(methodName /*, args */) {\r\n        var args = aid.rest(_slice.call(arguments));\r\n\r\n        calls.push(function(target) {\r\n          var method = target[methodName];\r\n\r\n          if (!aid.isDefined(method)) {\r\n            throw Error('[aid.lazyChain] ' + target.constructor.name + ' has not ' + methodName + ' method.');\r\n          }\r\n\r\n          return method.apply(target, args);\r\n        });\r\n\r\n        return this;\r\n      },\r\n\r\n      force: function() {\r\n        return calls.reduce(function(ret, thunk) {\r\n          return thunk(ret);\r\n        }, obj);\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   * check two parameters are equal\r\n   *\r\n   * @static\r\n   * @method eq\r\n   * @param {Object} obj\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.eq(99)(99) ); // true\r\n   */\r\n  aid.eq = aid.curry2(function(lhs, rhs) {\r\n    return lhs === rhs;\r\n  });\r\n\r\n  /**\r\n   * identity combinator\r\n   *\r\n   * @static\r\n   * @method identity\r\n   * @param {Object} value\r\n   * @returns {Object} return value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  aid.identity = function identity(value) {\r\n    return value;\r\n  };\r\n\r\n  /**\r\n   * tab combinator\r\n   *\r\n   * @static\r\n   * @method tab\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * TODO:\r\n   */\r\n  aid.tab = function tab(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('[aid.tab] Type of func parameter must be Function.');\r\n\r\n    return function(value) {\r\n      func(value);\r\n\r\n      return value;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * alt combinator\r\n   *\r\n   * @static\r\n   * @method alt\r\n   * @param {Function} func_a\r\n   * @param {Function} func_b\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var alt = aid.alt(function(val) { return val; }, function(val) { return !val; });\r\n   * console.log( alt(false) ); // true\r\n   */\r\n  aid.alt = function alt(func_a, func_b) {\r\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\r\n      throw new TypeError('[aid.alt] Type of func_a, func_b parameters must be Function.');\r\n    }\r\n\r\n    return function(value) {\r\n      var result_a = func_a(value);\r\n\r\n      // undefined, null, false\r\n      if (!aid.isDefined(result_a) || result_a === false) return func_b(value);\r\n\r\n      return result_a;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * seq combinator\r\n   *\r\n   * @static\r\n   * @method seq\r\n   * @param {Function} functions\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var seq = aid.seq(function(val) { console.log(val); }, function(val) { console.log(val / -1) });\r\n   * seq(99); // 99, -99\r\n   */\r\n  aid.seq = function seq(/* functions */) {\r\n    var funcs = _slice.call(arguments);\r\n\r\n    funcs.forEach(function(func) {\r\n      if (!aid.isFunction(func)) throw new TypeError('[aid.seq] Requires function parameters.');\r\n    });\r\n\r\n    return function(value) {\r\n      funcs.forEach(function(func) {\r\n        func.call(null, value);\r\n      });\r\n    };\r\n  };\r\n\r\n  /**\r\n   * fork(join) combinator\r\n   *\r\n   * @static\r\n   * @method fork\r\n   * @param {Function} join\r\n   * @param {Function} func_a\r\n   * @param {Function} func_b\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var fork = aid.fork(function(val_a, val_b) { return [val_a, val_b]; }, function(val) { return val; }, function(val) { return !val; });\r\n   * console.log( fork(true) ); // [true, false]\r\n   */\r\n  aid.fork = function fork(join, func_a, func_b) {\r\n    if (!aid.isFunction(join) || !aid.isFunction(func_a) || !aid.isFunction(func_b)) {\r\n      throw new TypeError('[aid.fork] Type of join, func_a, func_b parameters must be Function.');\r\n    }\r\n\r\n    return function(value) {\r\n      return join.call(null, func_a.call(null, value), func_b.call(null, value));\r\n    };\r\n  };\r\n\r\n  /*\r\n   * Data Structure\r\n   */\r\n  // Stack\r\n  var Stack = function() {\r\n    this._dataStore = [];\r\n    this._top = 0;\r\n  };\r\n\r\n  Stack.prototype.push = function stack_push(element) {\r\n    if (this._top < 0) this._top = 0;\r\n    this._dataStore[this._top++] = element;\r\n  };\r\n\r\n  Stack.prototype.pop = function stack_pop() {\r\n    return this._dataStore[--this._top];\r\n  };\r\n\r\n  Stack.prototype.peek = function stack_peek() {\r\n    return this._dataStore[this._top - 1];\r\n  };\r\n\r\n  Stack.prototype.length = function stack_length() {\r\n    return this._top > 0 ? this._top : 0;\r\n  };\r\n\r\n  Stack.prototype.clear = function stack_clear() {\r\n    this._dataStore = [];\r\n    this._top = 0;\r\n  };\r\n\r\n  /**\r\n   * createStack\r\n   *\r\n   * @static\r\n   * @method createStack\r\n   * @returns {Stack} return stack instance\r\n   * @example\r\n   * var stack = aid.createStack(); // use push, pop, peek, length, clear methods\r\n   */\r\n  aid.createStack = function createStack() {\r\n    return new Stack();\r\n  };\r\n\r\n  // Queue\r\n  var Queue = function() {\r\n    this._dataStore = [];\r\n  };\r\n\r\n  Queue.prototype.enqueue = function queue_enqueue(element) {\r\n    this._dataStore.push(element);\r\n  };\r\n\r\n  Queue.prototype.dequeue = function queue_dequeue() {\r\n    return this._dataStore.shift();\r\n  };\r\n\r\n  Queue.prototype.front = function queue_front() {\r\n    return this._dataStore[0];\r\n  };\r\n\r\n  Queue.prototype.rear = function queue_rear() {\r\n    return this._dataStore[this._dataStore.length - 1];\r\n  };\r\n\r\n  Queue.prototype.length = function queue_length() {\r\n    return this._dataStore.length;\r\n  };\r\n\r\n  Queue.prototype.isEmpty = function queue_isEmpty() {\r\n    if (this._dataStore.length <= 0) return true;\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * createQueue\r\n   *\r\n   * @static\r\n   * @method createQueue\r\n   * @returns {Queue} return queue instance\r\n   * @example\r\n   * var queue = aid.createQueue(); // use enqueue, dequeue, front, rear, length, isEmpty methods\r\n   */\r\n  aid.createQueue = function createQueue() {\r\n    return new Queue();\r\n  };\r\n\r\n  // LinkedList node\r\n  var LinkedListNode = function(data) {\r\n    this.data = data;\r\n    this.next = null;\r\n  };\r\n\r\n  // LinkedList\r\n  var LinkedList = function() {\r\n    this.head = new LinkedListNode('LinkedListHead_' + Date.now());\r\n  };\r\n\r\n  LinkedList.prototype.getHead = function linkedList_getHead() {\r\n    return this.head;\r\n  };\r\n\r\n  LinkedList.prototype.isEmpty = function linkedList_isEmpty() {\r\n    return !this.head.next;\r\n  };\r\n\r\n  LinkedList.prototype.find = function linkedList_find(data) {\r\n    var node = this.head;\r\n\r\n    while (node.data !== data) {\r\n      node = node.next;\r\n      if (!node) return node;\r\n    }\r\n\r\n    return node;\r\n  };\r\n\r\n  LinkedList.prototype.findPrevious = function linkedList_findPrevious(data) {\r\n    if (this.head.data === data) return null;\r\n\r\n    var node = this.head;\r\n    while (node.next && node.next.data !== data) {\r\n      node = node.next;\r\n    }\r\n\r\n    return node;\r\n  };\r\n\r\n  LinkedList.prototype.insert = function linkedList_insert(data, prevNodeData) {\r\n    var prevNode = this.find(prevNodeData);\r\n    if (!prevNode) return false;\r\n\r\n    var insertNode = new LinkedListNode(data);\r\n    insertNode.next = prevNode.next;\r\n    prevNode.next = insertNode;\r\n\r\n    return true;\r\n  };\r\n\r\n  LinkedList.prototype.remove = function linkedList_remove(data) {\r\n    var prevNode = this.findPrevious(data);\r\n\r\n    if (prevNode && prevNode.next) {\r\n      prevNode.next = prevNode.next.next;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  LinkedList.prototype.append = function linkedList_append(data) {\r\n    var appendNode = new LinkedListNode(data);\r\n\r\n    var node = this.head;\r\n    while (node.next) {\r\n      node = node.next;\r\n    }\r\n\r\n    node.next = appendNode;\r\n  };\r\n\r\n  LinkedList.prototype.getAllNodes = function linkedList_getAllNodes() {\r\n    var nodes = [this.head],\r\n      node = this.head;\r\n\r\n    while (node.next) {\r\n      nodes.push(node.next);\r\n      node = node.next;\r\n    }\r\n\r\n    return nodes;\r\n  };\r\n\r\n  /**\r\n   * createLinkedList\r\n   *\r\n   * @static\r\n   * @method createLinkedList\r\n   * @returns {LinkedList} return linkedList instance\r\n   * @example\r\n   * var linkedList = aid.createLinkedList(); // use getHead, isEmpty, find, findPrevious, insert, remove, append, getAllNodes methods\r\n   */\r\n  aid.createLinkedList = function createLinkedList() {\r\n    return new LinkedList();\r\n  };\r\n\r\n  // HashTable\r\n  var HashTable = function(hashFunc) {\r\n    this.table = [];\r\n    this._hashFunc = aid.isFunction(hashFunc) ? hashFunc : this._djb2Hash;\r\n  };\r\n\r\n  HashTable.prototype.put = function hashTable_put(key, value) {\r\n    var position = this._hashFunc.call(null, key);\r\n\r\n    if (this.table[position] === undefined) this.table[position] = aid.createLinkedList();\r\n\r\n    var linkedList = this.table[position];\r\n    linkedList.append({ key: key, value: value });\r\n  };\r\n\r\n  HashTable.prototype.get = function hashTable_get(key) {\r\n    var position = this._hashFunc.call(null, key);\r\n\r\n    var linkedList = this.table[position];\r\n    if (linkedList) {\r\n      var head = linkedList.getHead();\r\n      if (!head.next) return undefined;\r\n\r\n      var node = head;\r\n      while (node && node.data && node.data.key !== key) {\r\n        node = node.next;\r\n      }\r\n\r\n      if (node && node.data) return node.data.value;\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  HashTable.prototype.remove = function hashTable_remove(key) {\r\n    var position = this._hashFunc.call(null, key);\r\n\r\n    var linkedList = this.table[position];\r\n    if (linkedList) {\r\n      var head = linkedList.getHead();\r\n      if (!head.next) return false;\r\n\r\n      // find previous node\r\n      var node = head;\r\n      while (node.next && node.next.data && node.next.data.key !== key) {\r\n        node = node.next;\r\n      }\r\n\r\n      // remove node\r\n      if (node && node.next) {\r\n        node.next = node.next.next;\r\n        if (linkedList.isEmpty()) this.table[position] = undefined;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  HashTable.prototype._djb2Hash = function hashTable_djb2Hash(key) {\r\n    var hash = 5381;\r\n\r\n    for (var i = 0, max = key.length; i < max; i++) {\r\n      hash = hash * 33 + key.charCodeAt(i);\r\n    }\r\n\r\n    return hash % 1013;\r\n  };\r\n\r\n  /**\r\n   * createHashTable\r\n   *\r\n   * @static\r\n   * @method createQueue\r\n   * @returns {Queue} return hashTable instance that use djb2 hash function.\r\n   * @example\r\n   * var HashTable = aid.createHashTable(); // use put, get, remove methods\r\n   */\r\n  aid.createHashTable = function createHashTable(hashFunc) {\r\n    return new HashTable(hashFunc);\r\n  };\r\n\r\n  // Dictionary\r\n  function Dictionary() {\r\n    this.items = {};\r\n  }\r\n\r\n  Dictionary.prototype.has = function(key) {\r\n    return _hasOwnProperty.call(this.items, key);\r\n  };\r\n\r\n  Dictionary.prototype.get = function(key) {\r\n    return this.has(key) ? this.items[key] : undefined;\r\n  };\r\n\r\n  Dictionary.prototype.set = function(key, value) {\r\n    this.items[key] = value;\r\n  };\r\n\r\n  Dictionary.prototype.remove = function(key) {\r\n    if (this.has(key)) {\r\n      delete this.items[key];\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  Dictionary.prototype.clear = function() {\r\n    this.items = {};\r\n  };\r\n\r\n  Dictionary.prototype.keys = function() {\r\n    return Object.keys(this.items);\r\n  };\r\n\r\n  Dictionary.prototype.values = function() {\r\n    var values = [];\r\n\r\n    for (var key in this.items) {\r\n      if (this.has(key)) values.push(this.items[key]);\r\n    }\r\n\r\n    return values;\r\n  };\r\n\r\n  Dictionary.prototype.size = function() {\r\n    return Object.keys(this.items).length;\r\n  };\r\n\r\n  Dictionary.prototype.getItems = function() {\r\n    return this.items;\r\n  };\r\n\r\n  /**\r\n   * createDictionary\r\n   *\r\n   * @static\r\n   * @method createDictionary\r\n   * @returns {Dictionary} return Dictionary instance\r\n   * @example\r\n   * var dictionary = aid.createDictionary(); // use has, get, set, remove, clear, keys, values, size, getItems methods\r\n   */\r\n  aid.createDictionary = function createDictionary() {\r\n    return new Dictionary();\r\n  };\r\n\r\n  // BinarySearchTree node\r\n  var BinarySearchTreeNode = function(data) {\r\n    this.data = data;\r\n    this.left = null;\r\n    this.right = null;\r\n  };\r\n\r\n  // BinarySearchTree node\r\n  var BinarySearchTree = function() {\r\n    this.root = null;\r\n  };\r\n\r\n  BinarySearchTree.prototype._insertNode = function(node, newNode) {\r\n    if (!aid.isDefined(node) || !aid.isDefined(newNode))\r\n      throw new TypeError('[BinarySearchTree.prototype._insertNode] node and newNode parameters must be defined.');\r\n\r\n    // duplicated value is not allowed in this BinarySearchTree\r\n    if (node.data === newNode.data) return;\r\n\r\n    if (newNode.data < node.data) {\r\n      aid.isDefined(node.left) ? this._insertNode(node.left, newNode) : (node.left = newNode);\r\n    } else {\r\n      aid.isDefined(node.right) ? this._insertNode(node.right, newNode) : (node.right = newNode);\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype._searchNode = function(node, data) {\r\n    if (!aid.isDefined(node)) return false;\r\n\r\n    if (!aid.isDefined(data))\r\n      throw new TypeError('[BinarySearchTree.prototype._searchNode] data parameters must be defined.');\r\n\r\n    if (data < node.data) {\r\n      return this._searchNode(node.left, data);\r\n    } else if (data > node.data) {\r\n      return this._searchNode(node.right, data);\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype._findMinNode = function(node) {\r\n    if (!aid.isDefined(node)) return null;\r\n\r\n    while (node && aid.isDefined(node.left)) {\r\n      node = node.left;\r\n    }\r\n\r\n    return node;\r\n  };\r\n\r\n  BinarySearchTree.prototype._removeNode = function(node, data) {\r\n    if (!aid.isDefined(data))\r\n      throw new TypeError('[BinarySearchTree.prototype._removeNode] data parameters must be defined.');\r\n\r\n    if (!aid.isDefined(node)) return null;\r\n\r\n    if (data < node.data) {\r\n      node.left = this._removeNode(node.left, data);\r\n      return node;\r\n    } else if (data > node.data) {\r\n      node.right = this._removeNode(node.right, data);\r\n      return node;\r\n    } else {\r\n      // case: remove leaf node\r\n      if (!aid.isDefined(node.left) && !aid.isDefined(node.right)) {\r\n        node = null;\r\n        return node;\r\n      }\r\n\r\n      // case: remove node has one child node\r\n      if (!aid.isDefined(node.left)) {\r\n        node = node.right;\r\n        return node;\r\n      } else if (!aid.isDefined(node.right)) {\r\n        node = node.left;\r\n        return node;\r\n      }\r\n\r\n      // case: remove node has two children nodes\r\n      var aux = this._findMinNode(node.right);\r\n      node.data = aux.data;\r\n      node.right = this._removeNode(node.right, aux.data);\r\n      return node;\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype._minNode = function(node) {\r\n    if (!aid.isDefined(node)) return null;\r\n\r\n    while (node && aid.isDefined(node.left)) node = node.left;\r\n\r\n    return node.data;\r\n  };\r\n\r\n  BinarySearchTree.prototype._maxNode = function(node) {\r\n    if (!aid.isDefined(node)) return null;\r\n\r\n    while (node && aid.isDefined(node.right)) node = node.right;\r\n\r\n    return node.data;\r\n  };\r\n\r\n  BinarySearchTree.prototype._inOrderTraverseNode = function(node, callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError(\r\n        '[BinarySearchTree.prototype._inOrderTraverseNode] Type of callback parameter must be Function.'\r\n      );\r\n\r\n    // visit node.left, node.data, node.right\r\n    if (aid.isDefined(node)) {\r\n      this._inOrderTraverseNode(node.left, callback);\r\n      callback(node.data);\r\n      this._inOrderTraverseNode(node.right, callback);\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype._preOrderTraverseNode = function(node, callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError(\r\n        '[BinarySearchTree.prototype._preOrderTraverseNode] Type of callback parameter must be Function.'\r\n      );\r\n\r\n    // visit node.data, node.left, node.right\r\n    if (aid.isDefined(node)) {\r\n      callback(node.data);\r\n      this._preOrderTraverseNode(node.left, callback);\r\n      this._preOrderTraverseNode(node.right, callback);\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype._postOrderTraverseNode = function(node, callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError(\r\n        '[BinarySearchTree.prototype._postOrderTraverseNode] Type of callback parameter must be Function.'\r\n      );\r\n\r\n    // visit node.left, node.right, node.data\r\n    if (aid.isDefined(node)) {\r\n      this._postOrderTraverseNode(node.left, callback);\r\n      this._postOrderTraverseNode(node.right, callback);\r\n      callback(node.data);\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype.getRoot = function binarySearchTree_getRoot() {\r\n    return this.root;\r\n  };\r\n\r\n  BinarySearchTree.prototype.insert = function binarySearchTree_insert(data) {\r\n    if (!aid.isDefined(data))\r\n      throw new TypeError('[BinarySearchTree.prototype.insert] data parameter must be defined.');\r\n\r\n    var newNode = new BinarySearchTreeNode(data);\r\n\r\n    if (aid.isDefined(this.root)) {\r\n      this._insertNode(this.root, newNode);\r\n    } else {\r\n      this.root = newNode;\r\n    }\r\n  };\r\n\r\n  BinarySearchTree.prototype.search = function binarySearchTree_search(data) {\r\n    if (!aid.isDefined(data))\r\n      throw new TypeError('[BinarySearchTree.prototype.search] data parameter must be defined.');\r\n\r\n    return this._searchNode(this.root, data);\r\n  };\r\n\r\n  BinarySearchTree.prototype.remove = function binarySearchTree_remove(data) {\r\n    if (!aid.isDefined(data))\r\n      throw new TypeError('[BinarySearchTree.prototype.remove] data parameter must be defined.');\r\n\r\n    this.root = this._removeNode(this.root, data);\r\n  };\r\n\r\n  BinarySearchTree.prototype.min = function binarySearchTree_min() {\r\n    return this._minNode(this.root);\r\n  };\r\n\r\n  BinarySearchTree.prototype.max = function binarySearchTree_max() {\r\n    return this._maxNode(this.root);\r\n  };\r\n\r\n  BinarySearchTree.prototype.inOrderTraverse = function binarySearchTree_inOrderTraverse(callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError('[BinarySearchTree.prototype.inOrderTraverse] Type of callback parameter must be Function.');\r\n\r\n    this._inOrderTraverseNode(this.root, callback);\r\n  };\r\n\r\n  BinarySearchTree.prototype.preOrderTraverse = function binarySearchTree_preOrderTraverse(callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError('[BinarySearchTree.prototype.preOrderTraverse] Type of callback parameter must be Function.');\r\n\r\n    this._preOrderTraverseNode(this.root, callback);\r\n  };\r\n\r\n  BinarySearchTree.prototype.postOrderTraverse = function binarySearchTree_postOrderTraverse(callback) {\r\n    if (!aid.isFunction(callback))\r\n      throw new TypeError(\r\n        '[BinarySearchTree.prototype.postOrderTraverse] Type of callback parameter must be Function.'\r\n      );\r\n\r\n    this._postOrderTraverseNode(this.root, callback);\r\n  };\r\n\r\n  /**\r\n   * createBinarySearchTree\r\n   *\r\n   * @static\r\n   * @method createBinarySearchTree\r\n   * @returns {BinarySearchTree} return BinarySearchTree instance\r\n   * @example\r\n   * var binarySearchTree = aid.createBinarySearchTree(); // use getRoot, insert, search, remove, min, max, inOrderTraverse, preOrderTraverse, postOrderTraverse methods\r\n   */\r\n  aid.createBinarySearchTree = function createBinarySearchTree() {\r\n    return new BinarySearchTree();\r\n  };\r\n\r\n  // Graph\r\n  function Graph() {\r\n    this.vertices = [];\r\n    this.adjacencyList = aid.createDictionary();\r\n  }\r\n\r\n  Graph.prototype.addVertex = function(vertex) {\r\n    if (array.indexOf(this.vertices, vertex) >= 0)\r\n      throw new Error('[Graph.prototype.addVertex] this.vertices already has the same vertex.');\r\n\r\n    this.vertices.push(vertex);\r\n    this.adjacencyList.set(vertex, []);\r\n  };\r\n\r\n  Graph.prototype.addEdge = function(fromVertex, toVertex) {\r\n    if (array.indexOf(this.vertices, fromVertex) < 0)\r\n      throw new Error('[Graph.prototype.addEdge] this.vertices has not fromVertex.');\r\n\r\n    if (array.indexOf(this.vertices, toVertex) < 0)\r\n      throw new Error('[Graph.prototype.addEdge] this.vertices has not toVertex.');\r\n\r\n    this.adjacencyList.get(fromVertex).push(toVertex);\r\n    this.adjacencyList.get(toVertex).push(fromVertex);\r\n  };\r\n\r\n  Graph.prototype.bfs = function(fromVertex, callback) {\r\n    // breadth-first serach\r\n    if (array.indexOf(this.vertices, fromVertex) < 0)\r\n      throw new Error('[Graph.prototype.bfs] this.vertices has not fromVertex.');\r\n\r\n    var neighbors = this.adjacencyList.get(fromVertex);\r\n    if (!neighbors || neighbors.length <= 0)\r\n      throw new Error('[Graph.prototype.bfs] fromVertex is not connected to any vertices.');\r\n\r\n    if (aid.isDefined(callback) && !aid.isFunction(callback))\r\n      throw new TypeError('[Graph.prototype.bfs] Type of callback parameter must be undefined or null or Function.');\r\n\r\n    // colors has 3 types of vertex color\r\n    // 'white' : vertex is not visited\r\n    // 'grey' : vertex is visited but hasn't been explored\r\n    // 'black' : vertex is visited and has been explored\r\n    var colors = {}, // this.initializeVerticesColor(),\r\n      distances = {},\r\n      predecessors = {},\r\n      queue = new aid.createQueue();\r\n\r\n    this.vertices.forEach(function(v) {\r\n      colors[v] = 'white';\r\n      distances[v] = 0;\r\n      predecessors[v] = null;\r\n    });\r\n\r\n    queue.enqueue(fromVertex);\r\n\r\n    while (!queue.isEmpty()) {\r\n      var v = queue.dequeue(),\r\n        neighborVertices = this.adjacencyList.get(v);\r\n\r\n      colors[v] = 'grey';\r\n\r\n      neighborVertices.forEach(function(nv) {\r\n        if (colors[nv] === 'white') {\r\n          colors[nv] = 'grey';\r\n          distances[nv] = distances[v] + 1;\r\n          predecessors[nv] = v;\r\n\r\n          queue.enqueue(nv);\r\n        }\r\n      });\r\n\r\n      colors[v] = 'black';\r\n\r\n      if (callback) callback.call(null, v);\r\n    }\r\n\r\n    return {\r\n      distances: distances,\r\n      predecessors: predecessors,\r\n    };\r\n  };\r\n\r\n  Graph.prototype.getBfsPaths = function(fromVertex) {\r\n    var neighbors = this.adjacencyList.get(fromVertex);\r\n    if (!neighbors || neighbors.length <= 0)\r\n      throw new Error('[Graph.prototype.getBfsPaths] fromVertex is not connected to any vertices.');\r\n\r\n    var bfsPaths = [];\r\n\r\n    var datasFromBfs = this.bfs(fromVertex);\r\n\r\n    var toVertices = this.vertices.filter(function(v) {\r\n      return v !== fromVertex;\r\n    });\r\n\r\n    toVertices.forEach(function(toVertex) {\r\n      var searchPath = aid.createStack();\r\n\r\n      for (var v = toVertex; v !== fromVertex; v = datasFromBfs.predecessors[v]) {\r\n        searchPath.push(v);\r\n      }\r\n      searchPath.push(fromVertex);\r\n\r\n      var edgesNum = searchPath.length() - 1;\r\n\r\n      var path = searchPath.pop();\r\n      while (searchPath.length()) {\r\n        path += ' - ' + searchPath.pop();\r\n      }\r\n\r\n      bfsPaths.push({\r\n        path: path,\r\n        edgesNum: edgesNum,\r\n      });\r\n    });\r\n\r\n    return bfsPaths;\r\n  };\r\n\r\n  Graph.prototype.dfs = function(fromVertex, callback) {\r\n    // depth-first serach\r\n    if (array.indexOf(this.vertices, fromVertex) < 0)\r\n      throw new Error('[Graph.prototype.dfs] this.vertices has not fromVertex.');\r\n\r\n    if (aid.isDefined(callback) && !aid.isFunction(callback))\r\n      throw new TypeError('[Graph.prototype.dfs] Type of callback parameter must be undefined or null or Function.');\r\n\r\n    var datas = {\r\n      time: 0,\r\n      colors: {},\r\n      discovered: {},\r\n      finished: {},\r\n      predecessors: {},\r\n    };\r\n\r\n    this.vertices.forEach(function(v) {\r\n      // colors has 3 types of vertex color\r\n      // 'white' : vertex is not visited\r\n      // 'grey' : vertex is visited but hasn't been explored\r\n      // 'black' : vertex is visited and has been explored\r\n      datas.colors[v] = 'white';\r\n      datas.discovered[v] = 0;\r\n      datas.finished[v] = 0;\r\n      datas.predecessors[v] = null;\r\n    });\r\n\r\n    // update datas recursively\r\n    this._dfsVisit(fromVertex, datas, callback);\r\n\r\n    return datas;\r\n  };\r\n\r\n  Graph.prototype._dfsVisit = function(vertex, datas, callback) {\r\n    var _ = this,\r\n      colors = datas.colors,\r\n      discovered = datas.discovered,\r\n      finished = datas.finished,\r\n      predecessors = datas.predecessors;\r\n\r\n    colors[vertex] = 'grey';\r\n    discovered[vertex] = ++datas.time;\r\n\r\n    if (callback) callback.call(null, vertex);\r\n\r\n    var neighborVertices = this.adjacencyList.get(vertex);\r\n    neighborVertices.forEach(function(nv) {\r\n      if (colors[nv] === 'white') {\r\n        predecessors[nv] = vertex;\r\n\r\n        _._dfsVisit(nv, datas, callback);\r\n      }\r\n    });\r\n\r\n    colors[vertex] = 'black';\r\n    finished[vertex] = ++datas.time;\r\n  };\r\n\r\n  /**\r\n   * createGraph\r\n   *\r\n   * @static\r\n   * @method createGraph\r\n   * @returns {Graph} return Graph instance\r\n   * @example\r\n   * var vertices = ['A', 'B', 'C', 'D'];\r\n   * var graph = aid.createGraph(); // use addVertex, addEdge, bfs, getBfsPaths, dfs methods\r\n   * vertices.forEach(function(v) { graph.addVertex(v); });\r\n   * graph.addEdge('A', 'B');\r\n   * graph.addEdge('A', 'C');\r\n   * graph.addEdge('A', 'D');\r\n   * graph.addEdge('B', 'D');\r\n   * graph.addEdge('C', 'D');\r\n   * console.log(  graph.dfs('A') );\r\n   */\r\n  aid.createGraph = function createGraph() {\r\n    return new Graph();\r\n  };\r\n\r\n  /**\r\n   * plus(+) operator\r\n   *\r\n   * @static\r\n   * @method +\r\n   * @param {Object} object_a\r\n   * @param {Object} object_b\r\n   * @returns {Object} return object\r\n   * @example\r\n   * var plus = aid.operator['+'];\r\n   * console.log( plus(1, 2) ); // 3\r\n   */\r\n  operator['+'] = function plus(object_a, object_b) {\r\n    return object_a + object_b;\r\n  };\r\n\r\n  /**\r\n   * identity(===) operator\r\n   *\r\n   * @static\r\n   * @method ===\r\n   * @param {Object} object_a\r\n   * @param {Object} object_b\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * var identity = aid.operator['==='];\r\n   * console.log( identity(1, 1) ); // true\r\n   */\r\n  operator['==='] = function identity(object_a, object_b) {\r\n    return object_a === object_b;\r\n  };\r\n\r\n  /**\r\n   * logical not(!) operator\r\n   *\r\n   * @static\r\n   * @method !\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  operator['!'] = function(obj) {\r\n    return !obj;\r\n  };\r\n\r\n  /**\r\n   * is window platform\r\n   *\r\n   * @static\r\n   * @method isWindow\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\r\n   */\r\n  platform.isWindow = function isWindow(userAgent) {\r\n    return /Windows/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Macintosh platform\r\n   *\r\n   * @static\r\n   * @method isMac\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\r\n   */\r\n  platform.isMac = function isMac(userAgent) {\r\n    return /Macintosh/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is iOS platform\r\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\r\n   *\r\n   * @static\r\n   * @method isIOS\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\r\n   */\r\n  platform.isIOS = function isIOS(userAgent) {\r\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\r\n  };\r\n\r\n  /**\r\n   * is iPhone\r\n   *\r\n   * @static\r\n   * @method isIPhone\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isIPhone(window.navigator.userAgent) );\r\n   */\r\n  platform.isIPhone = function isIPhone(userAgent) {\r\n    if (!platform.isIOS(userAgent)) return false;\r\n\r\n    return /iPhone/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is iPad\r\n   *\r\n   * @static\r\n   * @method isIPad\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isIPad(window.navigator.userAgent) );\r\n   */\r\n  platform.isIPad = function isIPad(userAgent) {\r\n    if (!platform.isIOS(userAgent)) return false;\r\n\r\n    return /iPad/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Android platform\r\n   *\r\n   * @static\r\n   * @method isAndroid\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\r\n   */\r\n  platform.isAndroid = function isAndroid(userAgent) {\r\n    return /Android/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is IE browser\r\n   *\r\n   * @static\r\n   * @method isIE\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\r\n   */\r\n  browser.isIE = function isIE(userAgent) {\r\n    return /msie/.test(userAgent) || /trident/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Edge browser\r\n   *\r\n   * @static\r\n   * @method isEdge\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\r\n   */\r\n  browser.isEdge = function isEdge(userAgent) {\r\n    return /Gecko/.test(userAgent) && /Edge/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Firefox browser\r\n   *\r\n   * @static\r\n   * @method isFF\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\r\n   */\r\n  browser.isFF = function isFF(userAgent) {\r\n    return /Firefox/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Opera browser\r\n   *\r\n   * @static\r\n   * @method isOpera\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\r\n   */\r\n  browser.isOpera = function isOpera(userAgent) {\r\n    return /Opera/.test(userAgent) || /OPR\\//.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Chrome browser (desktop)\r\n   *\r\n   * @static\r\n   * @method isChrome\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\r\n   */\r\n  browser.isChrome = function isChrome(userAgent) {\r\n    if (platform.isAndroid(userAgent) || platform.isIOS(userAgent)) return false;\r\n\r\n    return !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is mobile Chrome browser (phone)\r\n   *\r\n   * @static\r\n   * @method isChromePhone\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChromePhone(window.navigator.userAgent) );\r\n   */\r\n  browser.isChromePhone = function isChromePhone(userAgent) {\r\n    if (platform.isIPhone(userAgent))\r\n      return (\r\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && /CriOS/.test(userAgent) && /Mobile/.test(userAgent)\r\n      );\r\n\r\n    // https://developer.chrome.com/multidevice/user-agent\r\n    if (platform.isAndroid(userAgent)) return /Chrome\\/[.0-9]* Mobile/.test(userAgent) && /Safari/i.test(userAgent);\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * is mobile Chrome browser (tablet)\r\n   *\r\n   * @static\r\n   * @method isChromeTablet\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChromeTablet(window.navigator.userAgent) );\r\n   */\r\n  browser.isChromeTablet = function isChromeTablet(userAgent) {\r\n    if (platform.isIPad(userAgent))\r\n      return (\r\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && /CriOS/.test(userAgent) && /Mobile/.test(userAgent)\r\n      );\r\n\r\n    // https://developer.chrome.com/multidevice/user-agent\r\n    if (platform.isAndroid(userAgent)) {\r\n      return /Chrome\\/[.0-9]* (?!Mobile)/.test(userAgent) && /Safari/i.test(userAgent);\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * is Safari browser (desktop)\r\n   *\r\n   * @static\r\n   * @method isSafari\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\r\n   */\r\n  browser.isSafari = function isSafari(userAgent) {\r\n    if (platform.isIOS(userAgent)) return false;\r\n\r\n    return (\r\n      !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && !/Mobile/.test(userAgent)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * is mobile Safari browser (phone)\r\n   *\r\n   * @static\r\n   * @method isSafariPhone\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  browser.isSafariPhone = function isSafariPhone(userAgent) {\r\n    if (platform.isIPhone(userAgent))\r\n      return (\r\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && /Mobile/.test(userAgent)\r\n      );\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * is mobile Safari browser (tablet)\r\n   *\r\n   * @static\r\n   * @method isSafariTablet\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  browser.isSafariTablet = function isSafariTablet(userAgent) {\r\n    if (platform.isIPad(userAgent))\r\n      return (\r\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && /Mobile/.test(userAgent)\r\n      );\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * get IE version\r\n   *\r\n   * @static\r\n   * @method getIEVersion\r\n   * @param {string} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getIEVersion = function getIEVersion(userAgent) {\r\n    if (browser.isIE(userAgent)) {\r\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Firefox version\r\n   *\r\n   * @static\r\n   * @method getFFVersion\r\n   * @param {string} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getFFVersion = function getFFVersion(userAgent) {\r\n    if (browser.isFF(userAgent)) {\r\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Opera version\r\n   *\r\n   * @static\r\n   * @method getOperaVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getOperaVersion = function getOperaVersion(userAgent) {\r\n    if (browser.isOpera(userAgent)) {\r\n      if (/Opera/i.test(userAgent)) {\r\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n      }\r\n\r\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Chrome version\r\n   *\r\n   * @static\r\n   * @method getChromeVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getChromeVersion = function getChromeVersion(userAgent) {\r\n    if (browser.isChrome(userAgent)) {\r\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Safari version\r\n   *\r\n   * @static\r\n   * @method getSafariVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getSafariVersion = function getSafariVersion(userAgent) {\r\n    if (browser.isSafari(userAgent)) {\r\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get IE browser Compatibility info object\r\n   *\r\n   * @static\r\n   * @method getIECompatibility\r\n   * @param {String} userAgent (optional)\r\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\r\n   * @example\r\n   * console.log( aid.browser.getIECompatibility() );\r\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\r\n   */\r\n  browser.getIECompatibility = function getIECompatibility(optionUserAgent) {\r\n    var ua = optionUserAgent ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\r\n      regex_msie = /msie/i,\r\n      regex_msie7 = /msie 7/i,\r\n      regex_msie8 = /msie 8/i,\r\n      regex_msie9 = /msie 9/i,\r\n      regex_msie10 = /msie 10/i,\r\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\r\n      regex_trident = /trident/i,\r\n      regex_trident7 = /trident\\/7/;\r\n\r\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\r\n      // not IE\r\n      return {\r\n        isIE: false,\r\n        isCompatibilityMode: false,\r\n        compatibilityVersion: -1,\r\n      };\r\n    }\r\n\r\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\r\n      // IE11 standard\r\n      return {\r\n        isIE: true,\r\n        isCompatibilityMode: false,\r\n        compatibilityVersion: -1,\r\n      };\r\n    }\r\n\r\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\r\n      // IE11 compatibility mode\r\n      if (regex_msie7.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 7,\r\n        };\r\n\r\n      if (regex_msie8.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 8,\r\n        };\r\n\r\n      if (regex_msie9.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 9,\r\n        };\r\n\r\n      if (regex_msie10.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 10,\r\n        };\r\n    }\r\n\r\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\r\n      // IE8 ~ 10 compatibility mode\r\n      return {\r\n        isIE: true,\r\n        isCompatibilityMode: true,\r\n        compatibilityVersion: 7,\r\n      };\r\n    }\r\n\r\n    // IE8 ~ 10 standard\r\n    return {\r\n      isIE: true,\r\n      isCompatibilityMode: false,\r\n      compatibilityVersion: -1,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * is browser support draggable attribute of element\r\n   *\r\n   * @static\r\n   * @method isSupportDraggable\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportDraggable() );\r\n   */\r\n  browser.isSupportDraggable = function isSupportDraggable() {\r\n    var div = document.createElement('div');\r\n\r\n    return 'draggable' in div;\r\n  };\r\n\r\n  /**\r\n   * is browser support element methods related drag(ondragstart, ondrop, etc...)\r\n   *\r\n   * @static\r\n   * @method isSupportDragAndDrop\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportDragAndDrop() );\r\n   */\r\n  browser.isSupportDragAndDrop = function isSupportDragAndDrop() {\r\n    var div = document.createElement('div');\r\n\r\n    return 'ondragstart' in div && 'ondrop' in div;\r\n  };\r\n\r\n  /**\r\n   * is browser support html5 File API\r\n   *\r\n   * @static\r\n   * @method isSupportFileApi\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportFileApi() );\r\n   */\r\n  browser.isSupportFileApi = function isSupportFileApi() {\r\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\r\n  };\r\n\r\n  /**\r\n   * is chrome extension\r\n   *\r\n   * @static\r\n   * @method isChromeExtension\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\r\n   */\r\n  browser.isChromeExtension = function isChromeExtension(userAgent) {\r\n    if (browser.isChrome(userAgent) && global.chrome) {\r\n      if (!global.chrome.cookies) {\r\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\r\n      }\r\n\r\n      if (global.chrome.cookies) return true;\r\n\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * can use DOM\r\n   *\r\n   * @static\r\n   * @method canUseDOM\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.canUseDOM() );\r\n   */\r\n  browser.canUseDOM = function canUseDOM() {\r\n    return aid.truthy(typeof window !== 'undefined' && window.document && window.document.createElement);\r\n  };\r\n\r\n  /**\r\n   * get cookie\r\n   *\r\n   * @static\r\n   * @method getCookie\r\n   * @param {String} key\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\r\n   */\r\n  browser.getCookie = function getCookie(key) {\r\n    var cookieArr = document.cookie.split('; '),\r\n      splitArr = [],\r\n      keyStr = '',\r\n      valueStr = '';\r\n\r\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\r\n      splitArr = cookieArr[i].split('=');\r\n      keyStr = splitArr[0];\r\n      valueStr = global.decodeURIComponent(splitArr[1]);\r\n\r\n      if (keyStr === key) return valueStr;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * set cookie\r\n   *\r\n   * @static\r\n   * @method setCookie\r\n   * @param {String} key\r\n   * @param {String} value\r\n   * @param {Number} expireSecond\r\n   * @param {String} path\r\n   * @param {String} domain\r\n   * @example\r\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\r\n   */\r\n  browser.setCookie = function setCookie(key, value, expireSecond, path, domain) {\r\n    var expires = '',\r\n      pathStr = '; path=' + (path ? path : '/'),\r\n      domainStr = domain ? '; domain=' + domain : '';\r\n\r\n    if (expireSecond) {\r\n      var date = new Date();\r\n      date.setTime(date.getTime() + expireSecond * 1000);\r\n\r\n      expires = '; expires=' + date.toGMTString();\r\n    }\r\n\r\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\r\n  };\r\n\r\n  /**\r\n   * trim string\r\n   *\r\n   * @static\r\n   * @method trim\r\n   * @param {String} str\r\n   * @returns {String} return trimmed string\r\n   * @example\r\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\r\n   */\r\n  string.trim = function trim(str) {\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.trim] Type of str parameter must be String.');\r\n\r\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n  };\r\n\r\n  /**\r\n   * check string has unique characters\r\n   *\r\n   * @static\r\n   * @method hasUniqueChars\r\n   * @param {String} str\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\r\n   */\r\n  string.hasUniqueChars = function hasUniqueChars(str) {\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.hasUniqueChars] Type of str parameter must be String.');\r\n\r\n    if (!str.length) return true;\r\n\r\n    var obj = {},\r\n      char = '';\r\n    for (var i = 0, max = str.length; i < max; i++) {\r\n      char = str.charAt(i);\r\n\r\n      if (obj[char] === true) return false;\r\n      obj[char] = true;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * get extension(png, jpg ...) string\r\n   *\r\n   * @static\r\n   * @method getFileExtension\r\n   * @param {String} fileName\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\r\n   */\r\n  string.getFileExtension = function getFileExtension(fileName) {\r\n    if (!aid.isString(fileName))\r\n      throw new TypeError('[aid.string.getFileExtension] Type of fileName parameter must be String.');\r\n\r\n    if (fileName.length <= 0) return '';\r\n\r\n    var lastDotIndex = fileName.lastIndexOf('.'),\r\n      extension = fileName.substr(lastDotIndex + 1);\r\n\r\n    return extension;\r\n  };\r\n\r\n  /**\r\n   * check email string\r\n   *\r\n   * @static\r\n   * @method isEmail\r\n   * @param {String} email\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\r\n   */\r\n  string.isEmail = function isEmail(email) {\r\n    if (!aid.isString(email)) throw new TypeError('[aid.string.isEmail] Type of email parameter must be String.');\r\n\r\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\r\n    var emailRegex = new RegExp(\r\n      \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\r\n    );\r\n    return emailRegex.exec(email) ? true : false;\r\n  };\r\n\r\n  /**\r\n   * check iframe string\r\n   *\r\n   * @static\r\n   * @method isIFrame\r\n   * @param {String} iframeHtml\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\r\n   */\r\n  string.isIFrame = function isIFrame(iframeHtml) {\r\n    if (!aid.isString(iframeHtml))\r\n      throw new TypeError('[aid.string.isIFrame] Type of iframeHtml parameter must be String.');\r\n\r\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeHtml);\r\n  };\r\n\r\n  /**\r\n   * get param value from uri\r\n   *\r\n   * @static\r\n   * @method getUriParam\r\n   * @param {String} uri\r\n   * @param {String} parameterName\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\r\n   */\r\n  string.getUriParam = function getUriParam(uri, parameterName) {\r\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\r\n      throw new TypeError('[aid.string.getUriParam] Type of uri, parameterName parameters must be String.');\r\n    }\r\n\r\n    if (uri.length < 1) return '';\r\n    uri = uri.split('#')[0];\r\n\r\n    var tmpArr = uri.split('?');\r\n    if (tmpArr.length < 2) return '';\r\n\r\n    var paramStr = tmpArr[1],\r\n      params = paramStr.split('&');\r\n\r\n    for (var param = '', eqIndex = -1, keyStr = '', valueStr = '', i = 0, max = params.length; i < max; ++i) {\r\n      param = params[i];\r\n\r\n      eqIndex = param.indexOf('=');\r\n      if (eqIndex >= 0) {\r\n        keyStr = param.substr(0, eqIndex);\r\n        valueStr = param.substr(eqIndex + 1);\r\n\r\n        if (keyStr === parameterName) return valueStr;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * get param values from uri\r\n   *\r\n   * @static\r\n   * @method getUriParams\r\n   * @param {String} uri\r\n   * @returns {Object} return object\r\n   * @example\r\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\r\n   */\r\n  string.getUriParams = function getUriParams(uri) {\r\n    if (!aid.isString(uri)) throw new TypeError('[aid.string.getUriParam] Type of uri parameter must be String.');\r\n\r\n    if (uri.length < 1) return null;\r\n    uri = uri.split('#')[0];\r\n\r\n    var tmpArr = uri.split('?');\r\n    if (tmpArr.length < 2) return null;\r\n\r\n    var paramStr = tmpArr[1],\r\n      params = paramStr.split('&');\r\n\r\n    if (params.length <= 0) return null;\r\n\r\n    var obj = {};\r\n    for (var param = '', eqIndex = -1, keyStr = '', valueStr = '', i = 0, max = params.length; i < max; ++i) {\r\n      param = params[i];\r\n\r\n      eqIndex = param.indexOf('=');\r\n      if (eqIndex >= 0) {\r\n        keyStr = param.substr(0, eqIndex);\r\n        valueStr = param.substr(eqIndex + 1);\r\n\r\n        if (keyStr) obj[keyStr] = valueStr;\r\n      }\r\n    }\r\n\r\n    if (aid.object.isEmpty(obj)) return null;\r\n\r\n    return obj;\r\n  };\r\n\r\n  /**\r\n   * get uri combined parameters\r\n   *\r\n   * @static\r\n   * @method getUriCombinedParams\r\n   * @param {String} uri\r\n   * @param {Object} parameters\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\r\n   */\r\n  string.getUriCombinedParams = function getUriCombinedParams(uri, parameters) {\r\n    if (!aid.isString(uri))\r\n      throw new TypeError('[aid.string.getUriCombinedParams] Type of uri parameter must be String.');\r\n\r\n    if (!aid.isObject(parameters))\r\n      throw new TypeError('[aid.string.getUriCombinedParams] Type of parameters parameter must be Object.');\r\n\r\n    if (!uri) return '';\r\n    if (!parameters) return uri;\r\n\r\n    var str = '';\r\n    for (var key in parameters) {\r\n      if (_hasOwnProperty.call(parameters, key)) str += '&' + key + '=' + String(parameters[key]);\r\n    }\r\n\r\n    if (str === '') return uri;\r\n\r\n    var tmpArr = uri.split('#'),\r\n      hashStr = aid.isDefined(tmpArr[1]) && tmpArr[1].length ? '#' + tmpArr[1] : '';\r\n\r\n    uri = tmpArr[0];\r\n    uri = (uri.indexOf('?') >= 0 ? uri + str : uri + '?' + str.substr(1)) + hashStr;\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * check youtube video id\r\n   *\r\n   * @static\r\n   * @method isValidYoutubeVideoId\r\n   * @param {String} youtubeId\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\r\n   */\r\n  string.isValidYoutubeVideoId = function isValidYoutubeVideoId(youtubeId) {\r\n    if (!aid.isString(youtubeId))\r\n      throw new TypeError('[aid.string.isValidYoutubeVideoId] Type of youtubeId parameter must be String.');\r\n\r\n    var regex = /^(\\w|-|_){11}$/;\r\n    return regex.exec(youtubeId) ? true : false;\r\n  };\r\n\r\n  /**\r\n   * check youtube uri is valid\r\n   *\r\n   * @static\r\n   * @method getObjCheckYoutubeURI\r\n   * @param {String} uri\r\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\r\n   * @example\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   */\r\n  string.getObjCheckYoutubeURI = function getObjCheckYoutubeURI(uri) {\r\n    if (!aid.isString(uri))\r\n      throw new TypeError('[aid.string.getObjCheckYoutubeURI] Type of uri parameter must be String.');\r\n\r\n    var YOUTUBE_REGEXES = {\r\n      watch: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\r\n      embed: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\r\n      v: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\r\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/,\r\n    };\r\n\r\n    var uriType = null;\r\n    for (var key in YOUTUBE_REGEXES) {\r\n      var val = YOUTUBE_REGEXES[key];\r\n      if (!val) continue;\r\n\r\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\r\n      if (flag) {\r\n        uriType = key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var youtubeId = '',\r\n      tmpArr = [];\r\n    switch (uriType) {\r\n      case 'watch':\r\n        youtubeId = string.getUriParam(uri, 'v') || '';\r\n        break;\r\n\r\n      case 'embed':\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      case 'v':\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      case 'youtu.be':\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      default:\r\n    }\r\n\r\n    var isValidURI = youtubeId !== '' && string.isValidYoutubeVideoId(youtubeId);\r\n\r\n    return {\r\n      type: 'youtube',\r\n      uri: uri,\r\n      youtubeId: youtubeId,\r\n      isValidURI: isValidURI,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * check twitch uri is valid\r\n   *\r\n   * @static\r\n   * @method getObjCheckTwitchURI\r\n   * @param {String} uri\r\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\r\n   * @example\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\r\n   */\r\n  string.getObjCheckTwitchURI = function getObjCheckTwitchURI(uri) {\r\n    /*\r\n     + Live Video\r\n     https://www.twitch.tv/surrenderhs // channel link\r\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\r\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\r\n\r\n     + Past Video\r\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\r\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\r\n\r\n     + URI TEST\r\n     https://www.twitch.tv/surrenderhs\r\n     www.twitch.tv/surrenderhs\r\n     twitch.tv/surrenderhs\r\n     https://player.twitch.tv/?channel=surrenderhs\r\n     player.twitch.tv/?channel=surrenderhs\r\n     https://www.twitch.tv/surrenderhs/v/56097351\r\n     www.twitch.tv/surrenderhs/v/56097351\r\n     https://player.twitch.tv/?video=v56097351\r\n     player.twitch.tv/?video=v56097351\r\n     */\r\n\r\n    if (!aid.isString(uri))\r\n      throw new TypeError('[aid.string.getObjCheckTwitchURI] Type of uri parameter must be String.');\r\n\r\n    var TWITCH_REGEXES = {\r\n      liveChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\r\n      liveVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\r\n      chatting: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\r\n      pastChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\r\n      pastVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/,\r\n    };\r\n\r\n    var channelName = '',\r\n      videoId = '',\r\n      isChatting = false,\r\n      isValidURI = false;\r\n\r\n    var uriType = null;\r\n    for (var key in TWITCH_REGEXES) {\r\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\r\n      if (!val) continue;\r\n\r\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\r\n      if (flag) {\r\n        uriType = key;\r\n        isValidURI = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var tmpArr = [];\r\n    switch (uriType) {\r\n      // https://www.twitch.tv/surrenderhs\r\n      case 'liveChannel':\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        break;\r\n\r\n      // https://player.twitch.tv/?channel=surrenderhs\r\n      case 'liveVideo':\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        break;\r\n\r\n      // https://www.twitch.tv/surrenderhs/chat?popout=\r\n      case 'chatting':\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        isChatting = true;\r\n        break;\r\n\r\n      // https://www.twitch.tv/surrenderhs/v/56097351\r\n      case 'pastChannel':\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        videoId = tmpArr[2];\r\n        break;\r\n\r\n      // https://player.twitch.tv/?video=v56097351\r\n      case 'pastVideo':\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        videoId = tmpArr[1];\r\n        break;\r\n\r\n      default:\r\n    }\r\n\r\n    isValidURI = channelName || videoId ? true : false;\r\n\r\n    return {\r\n      type: 'twitch',\r\n      uri: uri,\r\n      channelName: channelName,\r\n      videoId: videoId,\r\n      isChatting: isChatting,\r\n      isValidURI: isValidURI,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get prefixed document property string\r\n   *\r\n   * @static\r\n   * @method getDocumentPrefixedProperty\r\n   * @param {String} propertyName\r\n   * @param {Boolean} isPropertyFirstCharToUpperCase\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\r\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\r\n   */\r\n  string.getDocumentPrefixedProperty = function getDocumentPrefixedProperty(\r\n    propertyName,\r\n    isPropertyFirstCharToUpperCase\r\n  ) {\r\n    if (!aid.isString(propertyName))\r\n      throw new TypeError('[aid.string.getDocumentPrefixedProperty] Type of propertyName parameter must be String.');\r\n\r\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\r\n      throw new TypeError(\r\n        '[aid.string.getDocumentPrefixedProperty] Type of isPropertyFirstCharToUpperCase parameter must be Boolean.'\r\n      );\r\n\r\n    if (propertyName in global.document) return propertyName;\r\n\r\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\r\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\r\n\r\n    var prop = '';\r\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\r\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\r\n\r\n      prop = PREFIXES[i] + prop;\r\n      if (prop in document) return prop;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * get prefixed element style property string\r\n   *\r\n   * @static\r\n   * @method getElementPrefixedStyle\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\r\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\r\n   */\r\n  string.getElementPrefixedStyle = function getElementPrefixedStyle(propertyName, isPropertyFirstCharToUpperCase) {\r\n    if (!aid.isString(propertyName))\r\n      throw new TypeError('[aid.string.getElementPrefixedStyle] Type of propertyName parameter must be String.');\r\n\r\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\r\n      throw new TypeError(\r\n        '[aid.string.getElementPrefixedStyle] Type of isPropertyFirstCharToUpperCase parameter must be Boolean.'\r\n      );\r\n\r\n    var style = global.document.createElement('div').style;\r\n    if (propertyName in style) return propertyName;\r\n\r\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\r\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\r\n\r\n    var prop = '';\r\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\r\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\r\n\r\n      prop = PREFIXES[i] + prop;\r\n      if (prop in style) return prop;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * get string removed no content elements from html\r\n   *\r\n   * @static\r\n   * @method removeNoContentElements\r\n   * @param {String} html\r\n   * @param (Boolean) withWhitespaceContent (optional)\r\n   * @returns {String} return html string\r\n   * @example\r\n   * console.log( aid.string.removeNoContentElements('<div><span>foo</span><p></p><em> </em></div>') ); // '<div><span>foo</span><em> </em></div>'\r\n   * console.log( aid.string.removeNoContentElements('<div><span>foo</span><p></p><em> </em></div>', true) ); // '<div><span>foo</span></div>'\r\n   */\r\n  string.removeNoContentElements = function removeNoContentElements(html, withWhitespaceContent) {\r\n    if (!aid.isString(html))\r\n      throw new TypeError('[aid.string.removeNoContentElements] Type of html parameter must be String.');\r\n\r\n    if (aid.isDefined(withWhitespaceContent)) {\r\n      // withWhitespaceContent parameter is defined\r\n      if (!aid.isBoolean(withWhitespaceContent))\r\n        throw new TypeError(\r\n          '[aid.string.removeNoContentElements] Type of withWhitespaceContent parameter must be Boolean.'\r\n        );\r\n    }\r\n\r\n    if (!html) return '';\r\n\r\n    var regex = withWhitespaceContent ? /<([^>]+)>\\s*<\\/\\1>/g : /<([^>]+)><\\/\\1>/g;\r\n    return html.replace(regex, '');\r\n  };\r\n\r\n  /**\r\n   * get string removed no content elements recursively from html\r\n   *\r\n   * @static\r\n   * @method removeNoContentElementsRecursively\r\n   * @param {String} html\r\n   * @param (Boolean) withWhitespaceContent (optional)\r\n   * @returns {String} return html string\r\n   * @example\r\n   * console.log( aid.string.removeNoContentElementsRecursively('<div><span>foo</span><p><span><strong><em></em></strong></span></p></div>') ); // '<div><span>foo</span></div>'\r\n   * console.log( aid.string.removeNoContentElementsRecursively('<div>foo<span><strong> <em> </em> </strong></span>bar<p> <strong> </strong> </p>baz</div>', true) ); // '<div>foobarbaz</div>'\r\n   */\r\n  string.removeNoContentElementsRecursively = function removeNoContentElementsRecursively(html, withWhitespaceContent) {\r\n    if (!aid.isString(html))\r\n      throw new TypeError('[aid.string.removeNoContentElementsRecursively] Type of html parameter must be String.');\r\n\r\n    if (aid.isDefined(withWhitespaceContent)) {\r\n      // withWhitespaceContent parameter is defined\r\n      if (!aid.isBoolean(withWhitespaceContent))\r\n        throw new TypeError(\r\n          '[aid.string.removeNoContentElementsRecursively] Type of withWhitespaceContent parameter must be Boolean.'\r\n        );\r\n    }\r\n\r\n    if (!html) return '';\r\n\r\n    var regex = withWhitespaceContent ? /<([^>]+)>\\s*<\\/\\1>/g : /<([^>]+)><\\/\\1>/g;\r\n\r\n    var htmlRemovedNoContentElements = html,\r\n      match = null;\r\n    while ((match = regex.exec(htmlRemovedNoContentElements))) {\r\n      htmlRemovedNoContentElements = string.removeNoContentElements(\r\n        htmlRemovedNoContentElements,\r\n        withWhitespaceContent\r\n      );\r\n\r\n      regex.lastIndex = 0;\r\n    }\r\n\r\n    return htmlRemovedNoContentElements;\r\n  };\r\n\r\n  /**\r\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\r\n   *\r\n   * @static\r\n   * @method absentToEmpty\r\n   * @param {String} absentableStr\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\r\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\r\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\r\n   */\r\n  string.absentToEmpty = function absentToEmpty(absentableStr) {\r\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\r\n\r\n    return absentableStr;\r\n  };\r\n\r\n  /**\r\n   * convert number to string type with commas\r\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n   *\r\n   * @static\r\n   * @method numberWithCommas\r\n   * @param {Number} number\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.numberWithCommas(1000000) ); // '1,000,000'\r\n   */\r\n  string.numberWithCommas = function numberWithCommas(number) {\r\n    if (!aid.isInteger(number))\r\n      throw new TypeError('[aid.string.numberWithCommas] Type of number parameter must be Integer Number.');\r\n\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n\r\n  /**\r\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }\r\n   *\r\n   * @static\r\n   * @method getPositionFromTranslateStr\r\n   * @param {String} str\r\n   * @returns {Object} return object\r\n   * @example\r\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px)') ); // {x: 99, y: 0}\r\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px, 999px)') ); // {x: 99, y: 999}\r\n   * console.log( aid.string.getPositionFromTranslateStr('translateX(99px)') ); // {x: 99, y: 0}\r\n   * console.log( aid.string.getPositionFromTranslateStr('translateY(99px)') ); // {x: 0, y: 99}\r\n   */\r\n  string.getPositionFromTranslateStr = function getPositionFromTranslateStr(str) {\r\n    if (!aid.isString(str))\r\n      throw new TypeError('[aid.string.getPositionFromTranslateStr] Type of str parameter must be String.');\r\n\r\n    var obj = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    if (!aid.isDefined(str)) return obj;\r\n\r\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\r\n    if (values.length <= 0) return obj;\r\n\r\n    if (/translateX/g.test(str)) {\r\n      obj.x = parseFloat(values[0], 10);\r\n      return obj;\r\n    }\r\n\r\n    if (/translateY/g.test(str)) {\r\n      obj.y = parseFloat(values[0], 10);\r\n      return obj;\r\n    }\r\n\r\n    obj.x = parseFloat(values[0], 10);\r\n    if (values.length > 1) obj.y = parseFloat(values[1], 10);\r\n\r\n    return obj;\r\n  };\r\n\r\n  /**\r\n   * get flag string is palindrome\r\n   *\r\n   * @static\r\n   * @method isPalindrome\r\n   * @param {String} str\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\r\n   * console.log( aid.string.isPalindrome('motor') ); // false\r\n   */\r\n  string.isPalindrome = function isPalindrome(str) {\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.isPalindrome] Type of str parameter must be String.');\r\n\r\n    if (str.length <= 1) return true;\r\n\r\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\r\n\r\n    return aid.string.isPalindrome(str.slice(-1, 1));\r\n  };\r\n\r\n  /**\r\n   * get flag string is decoded\r\n   *\r\n   * @static\r\n   * @method isDecoded\r\n   * @param {String} str\r\n   * @param {Function} decodeFunc (optional)\r\n   * @returns {(Boolean|Error)} return boolean\r\n   * @example\r\n   * console.log( aid.isError(aid.string.isDecoded('%%%%%%%%%')) ); // true\r\n   * console.log( aid.string.isDecoded('エイド') ); // true\r\n   * console.log( aid.string.isDecoded(encodeURIComponent('エイド')) ); // false\r\n   */\r\n  string.isDecoded = function isDecoded(str, decodeFunc) {\r\n    var decodeFn = global.decodeURIComponent;\r\n\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.isDecoded] Type of str parameter must be String.');\r\n\r\n    if (aid.isDefined(decodeFunc)) {\r\n      // decodeFunc parameter is defined\r\n      if (!aid.isFunction(decodeFunc)) {\r\n        throw new TypeError('[aid.string.isDecoded] Type of decodeFunc parameter must be Function.');\r\n      }\r\n\r\n      decodeFn = decodeFunc;\r\n    } else {\r\n      if (!aid.isFunction(decodeFn)) {\r\n        // no decodeURIComponent function and no decodeFunc parameter\r\n        throw new TypeError('[aid.string.isDecoded] Type of decodeFunc parameter must be defined.');\r\n      }\r\n    }\r\n\r\n    var decodedStr = '';\r\n    try {\r\n      decodedStr = decodeFn.call(null, str);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    if (decodedStr === str) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * get decoded string\r\n   *\r\n   * @static\r\n   * @method decodeRecursively\r\n   * @param {String} str\r\n   * @param {Function} decodeFunc (optional)\r\n   * @returns {(String|Error)} return string\r\n   * @example\r\n   * console.log( aid.string.decodeRecursively(encodeURIComponent(encodeURIComponent('エイド'))) ); // 'エイド'\r\n   */\r\n  string.decodeRecursively = function decodeRecursively(str, decodeFunc) {\r\n    var decodeFn = global.decodeURIComponent;\r\n\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.decodeRecursively] Type of str parameter must be String.');\r\n\r\n    if (aid.isDefined(decodeFunc)) {\r\n      // decodeFunc parameter is defined\r\n      if (!aid.isFunction(decodeFunc)) {\r\n        throw new TypeError('[aid.string.decodeRecursively] Type of decodeFunc parameter must be Function.');\r\n      }\r\n\r\n      decodeFn = decodeFunc;\r\n    } else {\r\n      if (!aid.isFunction(decodeFn)) {\r\n        // no decodeURIComponent function and no decodeFunc parameter\r\n        throw new TypeError('[aid.string.decodeRecursively] Type of decodeFunc parameter must be defined.');\r\n      }\r\n    }\r\n\r\n    var decodedStr = '';\r\n    try {\r\n      decodedStr = decodeFn.call(null, str);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    if (decodedStr !== str) {\r\n      return decodeRecursively(decodedStr, decodeFn);\r\n    }\r\n\r\n    return decodedStr;\r\n  };\r\n\r\n  /**\r\n   * get escaped string to use in RegExp constructor\r\n   * refer to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\r\n   *\r\n   * @static\r\n   * @method escapeRegExp\r\n   * @param {String} str\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.escapeRegExp('meta characters: .*+?^${}()|[]\\/') );\r\n   */\r\n  string.escapeRegExp = function escapeRegExp(str) {\r\n    if (!aid.isString(str)) throw new TypeError('[aid.string.escapeRegExp] Type of str parameter must be String.');\r\n\r\n    // escape RegExp meta characters: ., *, +, ?, ^, $, {, }, (, ), |, [, ], \\\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  };\r\n\r\n  /**\r\n   * get aspectFill content size\r\n   *\r\n   * @static\r\n   * @method getSizeAspectFill\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fillWidth\r\n   * @param {Number} fillHeight\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\r\n   */\r\n  math.getSizeAspectFill = function getSizeAspectFill(srcWidth, srcHeight, fillWidth, fillHeight) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fillWidth) || !isNumber(fillHeight)) {\r\n      throw new TypeError('[aid.math.getSizeAspectFill] Type of parameters must be Number.');\r\n    }\r\n\r\n    var modifiedSizeW = fillWidth,\r\n      modifiedSizeH = Math.ceil((fillWidth / srcWidth) * srcHeight);\r\n\r\n    if (modifiedSizeH < fillHeight) {\r\n      modifiedSizeW = Math.ceil((fillHeight / srcHeight) * srcWidth);\r\n      modifiedSizeH = fillHeight;\r\n    }\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get aspectFit content size\r\n   *\r\n   * @static\r\n   * @method getSizeAspectFit\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fitWidth\r\n   * @param {Number} fitHeight\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\r\n   */\r\n  math.getSizeAspectFit = function getSizeAspectFit(srcWidth, srcHeight, fitWidth, fitHeight) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth) || !isNumber(fitHeight)) {\r\n      throw new TypeError('[aid.math.getSizeAspectFit] Type of parameters must be Number.');\r\n    }\r\n\r\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\r\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\r\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get widthFit content size\r\n   *\r\n   * @static\r\n   * @method getSizeWidthFit\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fitWidth\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\r\n   */\r\n  math.getSizeWidthFit = function getSizeWidthFit(srcWidth, srcHeight, fitWidth) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth)) {\r\n      throw new TypeError('[aid.math.getSizeWidthFit] Type of parameters must be Number.');\r\n    }\r\n\r\n    var modifiedSizeW = fitWidth,\r\n      modifiedSizeH = Math.ceil((fitWidth / srcWidth) * srcHeight);\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get flag whether 2 numbers are equal by Number.EPSILON (2.220446049250313e-16)\r\n   *\r\n   * @static\r\n   * @method isEpsilonEqual\r\n   * @param {Number} number_a\r\n   * @param {Number} number_b\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\r\n   */\r\n  math.isEpsilonEqual = function isEpsilonEqual(number_a, number_b) {\r\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\r\n      throw new TypeError('[aid.math.isEpsilonEqual] Type of parameters must be Number.');\r\n    }\r\n\r\n    var epsilon = aid.isDefined(Number.EPSILON) ? Number.EPSILON : 2.220446049250313e-16;\r\n\r\n    return Math.abs(number_a - number_b) < epsilon;\r\n  };\r\n\r\n  /**\r\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\r\n   * value increases from startIndex to (firstIndex + loopGap - 1).\r\n   * if value is bigger than totalLength, change value to 1.\r\n   * if searchIndex in values, return true.\r\n   * otherwise, return false.\r\n   *\r\n   * @static\r\n   * @method isIndexInLoop\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @param {Number} searchIndex\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\r\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\r\n   */\r\n  math.isIndexInLoop = function isIndexInLoop(totalLength, loopGap, firstIndex, searchIndex) {\r\n    if (arguments.length < 4) throw new Error('[aid.math.isIndexInLoop] Requires 4 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex) || !isInteger(searchIndex)) {\r\n      throw new TypeError('[aid.math.isIndexInLoop] Type of parameters must be Number.');\r\n    }\r\n\r\n    if (totalLength < 1 || firstIndex < 1) {\r\n      throw new Error('[aid.math.isIndexInLoop] totalLength, firstIndex parameters cannot smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength) {\r\n      throw new Error('[aid.math.isIndexInLoop] loopGap parameter cannot bigger than totalLength parameter.');\r\n    }\r\n\r\n    var index = firstIndex;\r\n    for (var i = 0; i < loopGap; i++) {\r\n      if (index === searchIndex) return true;\r\n      index = index + 1 > totalLength ? 1 : index + 1;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * get looped index from firstIndex in 1 ~ totalLength.\r\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\r\n   * if value is bigger than totalLength, change value to 1. and, return value.\r\n   *\r\n   * @static\r\n   * @method getLoopedLastIndex\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\r\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\r\n   */\r\n  math.getLoopedLastIndex = function getLoopedLastIndex(totalLength, loopGap, firstIndex) {\r\n    if (arguments.length < 3) throw new Error('[aid.math.getLoopedLastIndex] Requires 3 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex)) {\r\n      throw new TypeError('[aid.math.getLoopedLastIndex] Type of parameters must be Integer Number.');\r\n    }\r\n\r\n    if (totalLength < 1 || firstIndex < 1) {\r\n      throw new Error('[aid.math.getLoopedLastIndex] totalLength, firstIndex parameters cannot smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength || firstIndex > totalLength) {\r\n      throw new Error(\r\n        '[aid.math.getLoopedLastIndex] loopGap, firstIndex parameters cannot bigger than totalLength parameter.'\r\n      );\r\n    }\r\n\r\n    var index = firstIndex;\r\n    for (var i = 0; i < loopGap - 1; i++) {\r\n      index = index + 1 > totalLength ? 1 : index + 1;\r\n    }\r\n\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\r\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\r\n   * if value is smaller than 0, change value to totalLength. and return value.\r\n   *\r\n   * @static\r\n   * @method getReverseLoopedFirstIndex\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\r\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\r\n   */\r\n  math.getReverseLoopedFirstIndex = function getReverseLoopedFirstIndex(totalLength, loopGap, lastIndex) {\r\n    if (arguments.length < 3) throw new Error('[aid.math.getReverseLoopedFirstIndex] Requires 3 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(lastIndex)) {\r\n      throw new TypeError('[aid.math.getReverseLoopedFirstIndex] Type of parameters must be Integer Number.');\r\n    }\r\n\r\n    if (totalLength < 1 || lastIndex < 1) {\r\n      throw new Error('[aid.math.getReverseLoopedFirstIndex] totalLength, lastIndex parameters cannot smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength || lastIndex > totalLength) {\r\n      throw new Error(\r\n        '[aid.math.getReverseLoopedFirstIndex] loopGap, lastIndex parameters cannot bigger than totalLength parameter.'\r\n      );\r\n    }\r\n\r\n    var index = lastIndex;\r\n    for (var i = 0; i < loopGap - 1; i++) {\r\n      index = index - 1 < 1 ? totalLength : index - 1;\r\n    }\r\n\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * get factorial value\r\n   *\r\n   * @static\r\n   * @method factorial\r\n   * @param {Number} Int number\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.factorial(-99) ); // 1\r\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\r\n   */\r\n  math.factorial = function factorial(number) {\r\n    if (!aid.isInteger(number)) throw new TypeError('[aid.math.factorial] Type of parameters must be Integer Number.');\r\n\r\n    if (number < 1) return 1;\r\n    return number * aid.math.factorial(number - 1);\r\n  };\r\n\r\n  /**\r\n   * get board pagination info object\r\n   *\r\n   * @static\r\n   * @method getObjForPagination\r\n   * @param {Number} totalPostNum\r\n   * @param {Number} displayPostNumPerPage\r\n   * @param {Number} displayPaginationBtnNum\r\n   * @param {Number} pageIndex\r\n   * @returns {Object} return object\r\n   * @example\r\n   * console.log( aid.math.getObjForPagination(39, 10, 5, 1) ); // {totalPostNum: 39, displayPostNumPerPage: 10, displayPaginationBtnNum: 5, pageIndex: 1, totalPageNum: 4, prevPageIndex: 0, firstPageIndex: 1, lastPageIndex: 4, nextPageIndex: 0}\r\n   */\r\n  math.getObjForPagination = function getObjForPagination(\r\n    totalPostNum,\r\n    displayPostNumPerPage,\r\n    displayPaginationBtnNum,\r\n    pageIndex\r\n  ) {\r\n    if (arguments.length < 4) throw new Error('[aid.math.getObjForPagination] Requires 4 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (\r\n      !isInteger(totalPostNum) ||\r\n      !isInteger(displayPostNumPerPage) ||\r\n      !isInteger(displayPaginationBtnNum) ||\r\n      !isInteger(pageIndex)\r\n    ) {\r\n      throw new TypeError('[aid.math.getObjForPagination] Type of parameters must be Integer Number.');\r\n    }\r\n\r\n    if (totalPostNum <= 0 || displayPostNumPerPage <= 0 || displayPaginationBtnNum <= 0 || pageIndex <= 0) {\r\n      throw new TypeError('[aid.math.getObjForPagination] Type of parameters must be positive Integer Number.');\r\n    }\r\n\r\n    var totalPageNum = Math.ceil(totalPostNum / displayPostNumPerPage);\r\n    if (pageIndex < 1) pageIndex = 1;\r\n    if (pageIndex > totalPageNum) pageIndex = totalPageNum;\r\n\r\n    var paginationBtnGroupIndex = Math.floor((pageIndex - 1) / displayPaginationBtnNum),\r\n      prevPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum,\r\n      firstPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum + 1,\r\n      lastPageIndex = firstPageIndex + displayPaginationBtnNum - 1,\r\n      nextPageIndex = lastPageIndex + 1;\r\n\r\n    if (lastPageIndex > totalPageNum) lastPageIndex = totalPageNum;\r\n    if (nextPageIndex > totalPageNum) nextPageIndex = 0;\r\n\r\n    return {\r\n      totalPostNum: totalPostNum,\r\n      displayPostNumPerPage: displayPostNumPerPage,\r\n      displayPaginationBtnNum: displayPaginationBtnNum,\r\n      pageIndex: pageIndex,\r\n\r\n      totalPageNum: totalPageNum,\r\n      prevPageIndex: prevPageIndex,\r\n      firstPageIndex: firstPageIndex,\r\n      lastPageIndex: lastPageIndex,\r\n      nextPageIndex: nextPageIndex,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * convert degree to radian\r\n   *\r\n   * @static\r\n   * @method degreeToRadian\r\n   * @param {Number} degree\r\n   * @returns {Number} return number\r\n   * @example\r\n   * console.log( aid.math.degreeToRadian(90) ); // 1.5707963267948966\r\n   */\r\n  math.degreeToRadian = function degreeToRadian(degree) {\r\n    if (!aid.isNumber(degree))\r\n      throw new TypeError('[aid.math.degreeToRadian] Type of degree parameter must be Number.');\r\n\r\n    return (degree * Math.PI) / 180;\r\n  };\r\n\r\n  /**\r\n   * convert radian to radian\r\n   *\r\n   * @static\r\n   * @method radianToDegree\r\n   * @param {Number} radian\r\n   * @returns {Number} return number\r\n   * @example\r\n   * console.log( aid.math.radianToDegree(1.5707963267948966) ); // 90\r\n   */\r\n  math.radianToDegree = function radianToDegree(radian) {\r\n    if (!aid.isNumber(radian))\r\n      throw new TypeError('[aid.math.radianToDegree] Type of degree parameter must be Number.');\r\n\r\n    return (radian * 180) / Math.PI;\r\n  };\r\n\r\n  /**\r\n   * get height of right triangle from base line width, acute angle\r\n   *\r\n   * @static\r\n   * @method getHeightOfRightTriangle\r\n   * @param {Number} baseLineWidth\r\n   * @param {Number} acuteAngleDegree\r\n   * @returns {Number} return number\r\n   * @example\r\n   * console.log( aid.math.getHeightOfRightTriangle(100, 30) ); // 57.73502691896256\r\n   */\r\n  math.getHeightOfRightTriangle = function getHeightOfRightTriangle(baseLineWidth, acuteAngleDegree) {\r\n    if (!aid.isNumber(baseLineWidth) || !aid.isNumber(acuteAngleDegree)) {\r\n      throw new TypeError('[aid.math.getHeightOfRightTriangle] Type of parameters must be Number.');\r\n    }\r\n\r\n    if (acuteAngleDegree >= 90)\r\n      throw new Error(\r\n        '[aid.math.getHeightOfRightTriangle] acuteAngleDegree parameter cannot greater than or equal to 90.'\r\n      );\r\n\r\n    return baseLineWidth * Math.tan(math.degreeToRadian(acuteAngleDegree));\r\n  };\r\n\r\n  /**\r\n   * get distance between two points\r\n   *\r\n   * @static\r\n   * @method getDistanceBetweenTwoPoints\r\n   * @param {Object} point1\r\n   * @param {Object} point2\r\n   * @returns {Number} return number\r\n   * @example\r\n   * var point1 = {x: 0, y: 0}\r\n   * var point2 = {x: 100, y: 100};\r\n   * console.log( aid.math.getDistanceBetweenTwoPoints(point1, point2) ); // 141.4213562373095\r\n   */\r\n  math.getDistanceBetweenTwoPoints = function getDistanceBetweenTwoPoints(point1, point2) {\r\n    if (!aid.isObject(point1) || !aid.isObject(point2)) {\r\n      throw new TypeError('[aid.math.getDistanceBetweenTwoPoints] Type of parameters must be Object.');\r\n    }\r\n\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(point1.x) || !isNumber(point1.y) || !isNumber(point2.x) || !isNumber(point2.y)) {\r\n      throw new TypeError(\r\n        '[aid.math.getDistanceBetweenTwoPoints] Type of parameters must be Object that has x, y properties.'\r\n      );\r\n    }\r\n\r\n    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\r\n\r\n    return distance;\r\n  };\r\n\r\n  /**\r\n   * get orthogonal point between line and some point\r\n   *\r\n   * @static\r\n   * @method getOrthogonalPointBetweenLineAndSomePoint\r\n   * @param {Object} collinearPoint1\r\n   * @param {Object} collinearPoint2\r\n   * @param {Object} somePoint\r\n   * @returns {Object} return object\r\n   * @example\r\n   * var collinearPoint1 = {x: 0, y: 0};\r\n   * var collinearPoint2 = {x: 100, y: 100};\r\n   * var somePoint = {x: 50, y: 100};\r\n   * console.log( aid.math.getOrthogonalPointBetweenLineAndSomePoint(collinearPoint1, collinearPoint2, somePoint) ); // {x: 75, y: 75}\r\n   */\r\n  math.getOrthogonalPointBetweenLineAndSomePoint = function getOrthogonalPointBetweenLineAndSomePoint(\r\n    collinearPoint1,\r\n    collinearPoint2,\r\n    somePoint\r\n  ) {\r\n    var isObject = aid.isObject;\r\n    if (!isObject(collinearPoint1) || !isObject(collinearPoint2) || !isObject(somePoint)) {\r\n      throw new TypeError('[aid.math.getOrthogonalPointBetweenLineAndSomePoint] Type of parameters must be Object.');\r\n    }\r\n\r\n    var isNumber = aid.isNumber;\r\n    if (\r\n      !isNumber(collinearPoint1.x) ||\r\n      !isNumber(collinearPoint1.y) ||\r\n      !isNumber(collinearPoint2.x) ||\r\n      !isNumber(collinearPoint2.y) ||\r\n      !isNumber(somePoint.x) ||\r\n      !isNumber(somePoint.y)\r\n    ) {\r\n      throw new TypeError(\r\n        '[aid.math.getOrthogonalPointBetweenLineAndSomePoint] Type of parameters must be Object that has x, y properties.'\r\n      );\r\n    }\r\n\r\n    if (collinearPoint1.x === collinearPoint2.x && collinearPoint1.y === collinearPoint2.y) {\r\n      // collinearPoint1 is equal to collinearPoint2. no line.\r\n      return null;\r\n    }\r\n\r\n    var diffX = collinearPoint2.x - collinearPoint1.x,\r\n      diffY = collinearPoint2.y - collinearPoint1.y;\r\n\r\n    if (diffX === 0)\r\n      return {\r\n        x: collinearPoint1.x,\r\n        y: somePoint.y,\r\n      };\r\n\r\n    if (diffY === 0)\r\n      return {\r\n        x: somePoint.x,\r\n        y: collinearPoint1.y,\r\n      };\r\n\r\n    var lineSlope = diffY / diffX,\r\n      somePointLineSlope = -1 / lineSlope;\r\n\r\n    var orthogonalPoint = {};\r\n    orthogonalPoint.x =\r\n      (somePointLineSlope * somePoint.x - lineSlope * collinearPoint1.x + collinearPoint1.y - somePoint.y) /\r\n      (somePointLineSlope - lineSlope);\r\n    orthogonalPoint.y = somePointLineSlope * (orthogonalPoint.x - somePoint.x) + somePoint.y;\r\n\r\n    return orthogonalPoint;\r\n  };\r\n\r\n  /**\r\n   * getRandomPositiveNegative\r\n   *\r\n   * @static\r\n   * @method getRandomPositiveNegative\r\n   * @returns {Number} return Number\r\n   * @example\r\n   * console.log( aid.math.getRandomPositiveNegative() ); // -1 or 1\r\n   */\r\n  math.getRandomPositiveNegative = function getRandomPositiveNegative() {\r\n    return Math.round(Math.random()) > 0 ? 1 : -1;\r\n  };\r\n\r\n  /**\r\n   * getRandomFloat\r\n   *\r\n   * @static\r\n   * @method getRandomFloat\r\n   * @param {Number} min\r\n   * @param {Number} max\r\n   * @returns {Number} return Number\r\n   * @example\r\n   * console.log( aid.math.getRandomFloat(-99.999, 99.999) ); // -99.999 <= aid.math.getRandomFloat(-99.999, 99.999) < 99.999\r\n   */\r\n  math.getRandomFloat = function getRandomFloat(min, max) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(min) || !isNumber(max)) {\r\n      throw new TypeError('[aid.math.getRandomFloat] Type of parameters must be Number.');\r\n    }\r\n\r\n    return min + Math.random() * (max - min);\r\n  };\r\n\r\n  /**\r\n   * getRandomInt\r\n   *\r\n   * @static\r\n   * @method getRandomInt\r\n   * @param {Number} minInt\r\n   * @param {Number} maxInt\r\n   * @returns {Number} return Number\r\n   * @example\r\n   * console.log( aid.math.getRandomInt(-99, 99) ); // -99 ~ 99\r\n   */\r\n  math.getRandomInt = function getRandomInt(minInt, maxInt) {\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(minInt) || !isInteger(maxInt)) {\r\n      throw new TypeError('[aid.math.getRandomInt] Type of parameters must be Integer Number.');\r\n    }\r\n\r\n    return minInt + Math.floor(Math.random() * (maxInt - minInt + 1));\r\n  };\r\n\r\n  /**\r\n   * remap\r\n   *\r\n   * @static\r\n   * @method remap\r\n   * @param {Number} target\r\n   * @param {Number} min\r\n   * @param {Number} max\r\n   * @param {Number} remapedMin\r\n   * @param {Number} remapedMax\r\n   * @returns {Number} return Number\r\n   * @example\r\n   * console.log( aid.math.remap(0.5, 0, 1, 0, 100) ); // 50\r\n   */\r\n  math.remap = function remap(target, min, max, remapedMin, remapedMax) {\r\n    var isNumber = aid.isNumber;\r\n\r\n    if (!isNumber(target) || !isNumber(min) || !isNumber(max) || !isNumber(remapedMin) || !isNumber(remapedMax)) {\r\n      throw new TypeError('[aid.math.remap] Type of parameters must be Number.');\r\n    }\r\n\r\n    return ((target - min) / (max - min)) * (remapedMax - remapedMin) + remapedMin;\r\n  };\r\n\r\n  /**\r\n   * greater than\r\n   *\r\n   * @static\r\n   * @method gt\r\n   * @param {Number} number\r\n   * @param {Number} number\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.gt(1)(9) ); // true\r\n   */\r\n  math.gt = aid.curry2(function(lhs, rhs) {\r\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\r\n      throw new TypeError('[aid.math.gt] Type of parameters must be Number.');\r\n\r\n    return lhs > rhs;\r\n  });\r\n\r\n  /**\r\n   * less than\r\n   *\r\n   * @static\r\n   * @method lt\r\n   * @param {Number} number\r\n   * @param {Number} number\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.lt(9)(1) ); // true\r\n   */\r\n  math.lt = aid.curry2(function(lhs, rhs) {\r\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\r\n      throw new TypeError('[aid.math.lt] Type of parameters must be Number.');\r\n\r\n    return lhs < rhs;\r\n  });\r\n\r\n  /**\r\n   * greater than equal\r\n   *\r\n   * @static\r\n   * @method gte\r\n   * @param {Number} number\r\n   * @param {Number} number\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.gte(1)(1) ); // true\r\n   * console.log( aid.math.gte(1)(9) ); // true\r\n   */\r\n  math.gte = aid.curry2(function(lhs, rhs) {\r\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\r\n      throw new TypeError('[aid.math.gte] Type of parameters must be Number.');\r\n\r\n    return lhs >= rhs;\r\n  });\r\n\r\n  /**\r\n   * less than equal\r\n   *\r\n   * @static\r\n   * @method lte\r\n   * @param {Number} number\r\n   * @param {Number} number\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.lte(1)(1) ); // true\r\n   * console.log( aid.math.lte(9)(1) ); // true\r\n   */\r\n  math.lte = aid.curry2(function(lhs, rhs) {\r\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\r\n      throw new TypeError('[aid.math.lte] Type of parameters must be Number.');\r\n\r\n    return lhs <= rhs;\r\n  });\r\n\r\n  /**\r\n   * days name\r\n   *\r\n   * @static\r\n   * @property date.DAYS\r\n   * @returns {Array} return array\r\n   * @example\r\n   */\r\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n  /**\r\n   * months name\r\n   *\r\n   * @static\r\n   * @property date.MONTHS\r\n   * @returns {Array} return array\r\n   * @example\r\n   */\r\n  date.MONTHS = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  /**\r\n   * 1 minutes to second unit (60 sec)\r\n   *\r\n   * @static\r\n   * @property date.MIN_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.MIN_TO_SEC = 60;\r\n\r\n  /**\r\n   * 1 hour to second unit (60 * 60 = 3600 sec)\r\n   *\r\n   * @static\r\n   * @property date.HOUR_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.HOUR_TO_SEC = 3600;\r\n\r\n  /**\r\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\r\n   *\r\n   * @static\r\n   * @property date.DAY_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.DAY_TO_SEC = 86400;\r\n\r\n  /**\r\n   * equal to Array.indexOf\r\n   *\r\n   * @static\r\n   * @method indexOf\r\n   * @param {Array} arr\r\n   * @param {Object} target\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\r\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\r\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\r\n   */\r\n  array.indexOf = function indexOf(arr, target) {\r\n    if (!aid.isArray(arr)) throw new TypeError('[aid.math.indexOf] Type of arr parameters must be Array.');\r\n\r\n    for (var i = 0, max = arr.length; i < max; ++i) {\r\n      if (arr[i] === target) return i;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get index of minimum number in Array\r\n   *\r\n   * @static\r\n   * @method indexOfMin\r\n   * @param {Array} arr\r\n   * @param {Number} startSearchIndex\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\r\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\r\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\r\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\r\n   */\r\n  array.indexOfMin = function indexOfMin(arr, startSearchIndex) {\r\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\r\n\r\n    var startIndex = startSearchIndex > 0 ? startSearchIndex : 0;\r\n    if (arr.length <= startIndex) return -1;\r\n\r\n    var minVal = arr[startIndex],\r\n      minIndex = startIndex;\r\n\r\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\r\n      if (arr[i] < minVal) {\r\n        minVal = arr[i];\r\n        minIndex = i;\r\n      }\r\n    }\r\n\r\n    return minIndex;\r\n  };\r\n\r\n  /**\r\n   * swap two elements in Array\r\n   *\r\n   * @static\r\n   * @method swap\r\n   * @param {Array} arr\r\n   * @param {Number} firstIndex\r\n   * @param {Number} secondIndex\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\r\n   */\r\n  array.swap = function swap(arr, firstIndex, secondIndex) {\r\n    if (arguments.length !== 3) return null;\r\n\r\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\r\n\r\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\r\n\r\n    var tmp = arr[firstIndex];\r\n    arr[firstIndex] = arr[secondIndex];\r\n    arr[secondIndex] = tmp;\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply selection sort in Array\r\n   *\r\n   * @static\r\n   * @method selectionSort\r\n   * @param {Array} arr\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.selectionSort = function selectionSort(arr) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    var minIndex = 0;\r\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\r\n      minIndex = array.indexOfMin(arr, i);\r\n      array.swap(arr, i, minIndex);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply insertion sort in Array\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\r\n   *\r\n   * @static\r\n   * @method insertionSort\r\n   * @param {Array} arr\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.insertionSort = function insertionSort(arr) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    var value;\r\n    for (var i = 1, max = arr.length; i < max; i++) {\r\n      value = arr[i];\r\n\r\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\r\n        arr[j + 1] = arr[j];\r\n      }\r\n      arr[j + 1] = value;\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\r\n   * this function is only used by aid.array.mergeSort function.\r\n   *\r\n   * @static\r\n   * @method merge\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} middleIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   */\r\n  array.merge = function merge(arr, startIndex, middleIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\r\n\r\n    var i = startIndex,\r\n      j = middleIndex + 1,\r\n      k = startIndex,\r\n      tmpArr = [];\r\n\r\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\r\n    while (i <= middleIndex && j <= endIndex) {\r\n      if (arr[i] <= arr[j]) {\r\n        tmpArr[k++] = arr[i++];\r\n      } else {\r\n        tmpArr[k++] = arr[j++];\r\n      }\r\n    }\r\n\r\n    if (i > middleIndex) {\r\n      // set rest right array\r\n      for (var r = j; r <= endIndex; r++) {\r\n        tmpArr[k] = arr[r];\r\n        k++;\r\n      }\r\n    } else {\r\n      // set rest left array\r\n      for (var l = i; l <= middleIndex; l++) {\r\n        tmpArr[k] = arr[l];\r\n        k++;\r\n      }\r\n    }\r\n\r\n    // set sorted values to arr.\r\n    for (var n = startIndex; n <= endIndex; n++) {\r\n      arr[n] = tmpArr[n];\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply merge sort in Array\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\r\n   *\r\n   * @static\r\n   * @method mergeSort\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.mergeSort = function mergeSort(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (arr.length <= 1 || startIndex === endIndex) return null;\r\n\r\n    if (startIndex + 1 === endIndex) {\r\n      if (arr[startIndex] > arr[endIndex]) {\r\n        aid.array.swap(arr, startIndex, endIndex);\r\n      }\r\n\r\n      return arr;\r\n    }\r\n\r\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\r\n\r\n    aid.array.mergeSort(arr, startIndex, middleIndex);\r\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\r\n\r\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * quick sort with use pivot value.\r\n   * this function is only used by aid.array.quickSort function.\r\n   *\r\n   * @static\r\n   * @method getPivotIndexAfterPartition\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\r\n   */\r\n  array.getPivotIndexAfterPartition = function getPivotIndexAfterPartition(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\r\n\r\n    if (startIndex > endIndex) return -1;\r\n\r\n    if (arr.length <= 1) return 0;\r\n\r\n    var pivot = arr[endIndex],\r\n      swapIndex = startIndex;\r\n\r\n    for (var i = startIndex; i < endIndex; i++) {\r\n      if (arr[i] <= pivot) {\r\n        aid.array.swap(arr, i, swapIndex);\r\n        swapIndex++;\r\n      }\r\n    }\r\n\r\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\r\n\r\n    return swapIndex;\r\n  };\r\n\r\n  /**\r\n   * apply quick sort in Array\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\r\n   *\r\n   * @static\r\n   * @method quickSort\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.quickSort = function quickSort(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (arr.length <= 1 || startIndex === endIndex) return null;\r\n\r\n    if (startIndex < endIndex) {\r\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\r\n\r\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\r\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * remove element in Array, and return cloned Array\r\n   *\r\n   * @static\r\n   * @method remove\r\n   * @param {Array} arr\r\n   * @param {Object} target\r\n   * @returns {Array} return array\r\n   * @example\r\n   * var arr = [1, 2, 3, 4, 5, 99];\r\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\r\n   */\r\n  array.remove = function remove(arr, target) {\r\n    if (!aid.isArray(arr)) throw new TypeError('[aid.array.remove] Type of arr parameter must be Array.');\r\n\r\n    var clonedArr = arr.slice(0),\r\n      index = array.indexOf(clonedArr, target);\r\n    if (index >= 0) clonedArr.splice(index, 1);\r\n\r\n    return clonedArr;\r\n  };\r\n\r\n  /**\r\n   * get 2 x 2 Matrix Array\r\n   *\r\n   * @static\r\n   * @method getMatrixArr\r\n   * @param {Number} rowNum\r\n   * @param {Number} columnNum\r\n   * @param {Object} initialVal\r\n   * @returns {Array} return array\r\n   * @example\r\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\r\n   */\r\n  array.getMatrixArr = function getMatrixArr(rowNum, columnNum, initialVal) {\r\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\r\n      throw new TypeError('[aid.array.getMatrixArr] Type of rowNum, columnNum parameters must be Integer Number.');\r\n    }\r\n\r\n    if (arguments.length !== 3) throw Error('[aid.array.getMatrixArr] Requires 3 parameters.');\r\n\r\n    var arr = [],\r\n      columns = [];\r\n    for (var i = 0; i < rowNum; ++i) {\r\n      columns = [];\r\n\r\n      for (var j = 0; j < columnNum; ++j) {\r\n        columns[j] = initialVal;\r\n      }\r\n\r\n      arr[i] = columns;\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * binary search version of Array.indexOf\r\n   *\r\n   * @static\r\n   * @method binaryIndexOf\r\n   * @param {Array} sortedArray\r\n   * @param {Object} target\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\r\n   */\r\n  array.binaryIndexOf = function binaryIndexOf(sortedArray, target) {\r\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\r\n\r\n    var first = 0,\r\n      last = sortedArray.length - 1,\r\n      middle;\r\n\r\n    while (first <= last) {\r\n      middle = Math.floor((first + last) / 2);\r\n\r\n      if (target === sortedArray[middle]) {\r\n        return middle;\r\n      } else {\r\n        if (target < sortedArray[middle]) {\r\n          last = middle - 1;\r\n        } else {\r\n          first = middle + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get object has property in array.\r\n   * this object is first matched element in array by value or regex.\r\n   *\r\n   * @static\r\n   * @method getFirstObjectHasProperty\r\n   * @param {Array} arrayHasObjects\r\n   * @param {String} propertyKey\r\n   * @param {Object} findPropertyValueOrRegex\r\n   * @returns {Object} return object\r\n   * @example\r\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\r\n   */\r\n  array.getFirstObjectHasProperty = function getFirstObjectHasProperty(\r\n    arrayHasObjects,\r\n    propertyKey,\r\n    findPropertyValueOrRegex\r\n  ) {\r\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\r\n\r\n    if (!aid.isString(propertyKey)) return null;\r\n\r\n    var obj,\r\n      result = null;\r\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\r\n      obj = arrayHasObjects[i];\r\n      if (!obj.hasOwnProperty(propertyKey)) continue;\r\n\r\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\r\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\r\n          result = obj;\r\n          break;\r\n        }\r\n      } else {\r\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\r\n          result = obj;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * get index of object has property in array.\r\n   * this object is first matched element in array by value or regex.\r\n   *\r\n   * @static\r\n   * @method getIndexOfObjectHasProperty\r\n   * @param {Array} arrayHasObjects\r\n   * @param {String} propertyKey\r\n   * @param {Object} findPropertyValueOrRegex\r\n   * @returns {Object} return object\r\n   * @example\r\n   * TODO:\r\n   */\r\n  array.getIndexOfObjectHasProperty = function getIndexOfObjectHasProperty(\r\n    arrayHasObjects,\r\n    propertyKey,\r\n    findPropertyValueOrRegex\r\n  ) {\r\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\r\n\r\n    if (!aid.isString(propertyKey)) return null;\r\n\r\n    var obj,\r\n      result = null,\r\n      i = 0;\r\n    for (var max = arrayHasObjects.length; i < max; ++i) {\r\n      obj = arrayHasObjects[i];\r\n      if (!obj.hasOwnProperty(propertyKey)) continue;\r\n\r\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\r\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\r\n          result = obj;\r\n          break;\r\n        }\r\n      } else {\r\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\r\n          result = obj;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (result) return i;\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * apply overlapped condition sort in array\r\n   *\r\n   * @static\r\n   * @method overlappedConditionSortByProperty\r\n   * @param {Array} arrayHasObjects\r\n   * @param {Array} sortConditions. condition is object has property, func property\r\n   * @returns {Array} return array\r\n   * @example\r\n   * var arrayHasObjects = [{group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}];\r\n   * var result = array.overlappedConditionSortByProperty(arr, [\r\n   * { property: 'group', func: function (a, b) { return a.group - b.group; } },\r\n   * { property: 'level', func: function (a, b) { return a.level - b.level; } },\r\n   * { property: 'date', func: function (a, b) { return new Date(a.date).getTime() - new Date(b.date).getTime(); } }\r\n   * ]);\r\n   * console.log(result); // [{group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}]\r\n   */\r\n  array.overlappedConditionSortByProperty = function overlappedConditionSortByProperty(\r\n    arrayHasObjects,\r\n    sortConditions\r\n  ) {\r\n    if (!aid.isArray(arrayHasObjects)) return null;\r\n\r\n    var datas = _slice.call(arrayHasObjects);\r\n\r\n    if (datas.length <= 1) return datas;\r\n    if (!aid.isDefined(sortConditions) || !aid.isArray(sortConditions) || sortConditions.length <= 0) return datas;\r\n\r\n    var restArgs = aid.rest(_slice.call(arguments), 2),\r\n      conditionIndex = restArgs.length >= 1 ? restArgs[0] : 0,\r\n      condition = sortConditions[conditionIndex];\r\n\r\n    if (conditionIndex <= 0) datas.sort(condition.func);\r\n\r\n    if (sortConditions.length <= 1) return datas;\r\n\r\n    // overlapped conditional sort\r\n    if (conditionIndex < sortConditions.length - 1) {\r\n      var prevProperty = condition.property,\r\n        nextConditionIndex = conditionIndex + 1,\r\n        nextCondition = sortConditions[nextConditionIndex];\r\n\r\n      var memoObj = {},\r\n        memoArr = [],\r\n        arr;\r\n\r\n      var obj, prop;\r\n      for (var i = 0, max = datas.length; i < max; i++) {\r\n        obj = datas[i];\r\n        prop = String(obj[prevProperty]);\r\n\r\n        if (!memoObj[prop]) {\r\n          memoObj[prop] = [];\r\n          memoArr.push(memoObj[prop]);\r\n        }\r\n\r\n        arr = memoObj[prop];\r\n        arr.push(obj);\r\n      }\r\n\r\n      for (var j = 0, len = memoArr.length; j < len; j++) {\r\n        arr = memoArr[j];\r\n        arr.sort(nextCondition.func);\r\n\r\n        memoArr[j] = array.overlappedConditionSortByProperty(arr, sortConditions, nextConditionIndex);\r\n      }\r\n\r\n      return memoArr.reduce(function(acc, curVal) {\r\n        return acc.concat(curVal);\r\n      });\r\n    }\r\n\r\n    return datas;\r\n  };\r\n\r\n  /**\r\n   * check object has properties\r\n   *\r\n   * @static\r\n   * @method isEmpty\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  object.isEmpty = function isEmpty(obj) {\r\n    if (!aid.isObject(obj)) throw new TypeError('[aid.object.isEmpty] Type of obj parameter must be Object.');\r\n\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Object.keys polyfill\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys#Polyfill\r\n   *\r\n   * @static\r\n   * @method keys\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * var obj = {name: 'foo', job: 'programmer', works: [{id: 1, year: 1999}]};\r\n   * console.log( aid.object.keys(obj) ); // ['name', 'job', 'works']\r\n   */\r\n  object.keys = function keys(obj) {\r\n    // var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n    var hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString'),\r\n      dontEnums = [\r\n        'toString',\r\n        'toLocaleString',\r\n        'valueOf',\r\n        'hasOwnProperty',\r\n        'isPrototypeOf',\r\n        'propertyIsEnumerable',\r\n        'constructor',\r\n      ],\r\n      dontEnumsLength = dontEnums.length;\r\n\r\n    if (aid.not(aid.isFunction)(obj) && (aid.not(aid.isObject)(obj) || obj === null)) {\r\n      throw new TypeError('[aid.object.keys] Called on non-object.');\r\n    }\r\n\r\n    var result = [];\r\n\r\n    for (var prop in obj) {\r\n      if (_hasOwnProperty.call(obj, prop)) result.push(prop);\r\n    }\r\n\r\n    if (hasDontEnumBug) {\r\n      for (var i = 0; i < dontEnumsLength; i++) {\r\n        if (_hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Object.shallowEqual\r\n   * // https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html\r\n   *\r\n   * @static\r\n   * @method keys\r\n   * @param {Object} objA\r\n   * @param {Object} objB\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  object.shallowEqual = function shallowEqual(objA, objB) {\r\n    var not = aid.not,\r\n      eq = aid.eq,\r\n      isObject = aid.isObject,\r\n      isNotObject = not(isObject),\r\n      isNull = eq(null);\r\n\r\n    if (eq(objA)(objB)) return true;\r\n\r\n    if (isNotObject(objA) || isNull(objA) || isNotObject(objB) || isNull(objB)) return false;\r\n\r\n    var keysA = object.keys(objA),\r\n      keysB = object.keys(objB);\r\n\r\n    if (not(eq(keysA.length))(keysB.length)) return false;\r\n\r\n    // Test for A's keys different from B.\r\n    var bHasOwnProperty = _hasOwnProperty.bind(objB);\r\n\r\n    for (var i = 0, max = keysA.length; i < max; i++) {\r\n      if (!bHasOwnProperty(keysA[i]) || not(eq(objA[keysA[i]]))(objB[keysA[i]])) return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * check element is in viewport entirely\r\n   *\r\n   * @static\r\n   * @method isEntirelyInViewport\r\n   * @param {Element} ele\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  element.isEntirelyInViewport = function isEntirelyInViewport(ele) {\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (!ele) return false;\r\n\r\n    var rect = ele.getBoundingClientRect();\r\n\r\n    // if parent element is invisible, left, top, right, bottom, width, height, x, y properties are zero.\r\n    var eqZero = aid.eq(0);\r\n    if (\r\n      aid.allOf(\r\n        eqZero(rect.top),\r\n        eqZero(rect.left),\r\n        eqZero(rect.bottom),\r\n        eqZero(rect.right),\r\n        eqZero(rect.width),\r\n        eqZero(rect.height),\r\n        eqZero(rect.x),\r\n        eqZero(rect.y)\r\n      )\r\n    )\r\n      return false;\r\n\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <= (global.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (global.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * check element is in viewport partially\r\n   *\r\n   * @static\r\n   * @method isPartiallyInViewport\r\n   * @param {Element} ele\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  element.isPartiallyInViewport = function isPartiallyInViewport(ele) {\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (!ele) return false;\r\n\r\n    var rect = ele.getBoundingClientRect();\r\n\r\n    // if parent element is invisible, left, top, right, bottom, width, height, x, y properties are zero.\r\n    var eqZero = aid.eq(0);\r\n    if (\r\n      aid.allOf(\r\n        eqZero(rect.top),\r\n        eqZero(rect.left),\r\n        eqZero(rect.bottom),\r\n        eqZero(rect.right),\r\n        eqZero(rect.width),\r\n        eqZero(rect.height),\r\n        eqZero(rect.x),\r\n        eqZero(rect.y)\r\n      )\r\n    )\r\n      return false;\r\n\r\n    var windowHeight = global.innerHeight || document.documentElement.clientHeight,\r\n      windowWidth = global.innerWidth || document.documentElement.clientWidth;\r\n\r\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\r\n    var verticallyInView = rect.top <= windowHeight && rect.top + rect.height >= 0,\r\n      horizontallyInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\r\n\r\n    return verticallyInView && horizontallyInView;\r\n  };\r\n\r\n  /**\r\n   * create script file, and append to target element\r\n   *\r\n   * @static\r\n   * @method appendScriptFile\r\n   * @param {String} fileUrl\r\n   * @param {Element} targetElementToAppendFile\r\n   * @param {Function} loadCompleteCallback\r\n   * @example\r\n   * aid.file.appendScriptFile('https://apis.google.com/js/client.js', document.head, function() { console.log('load script file completely'); });\r\n   */\r\n  file.appendScriptFile = function appendScriptFile(fileUrl, targetElementToAppend, loadCompleteCallback) {\r\n    // document.head, document.body\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n\r\n    if (typeof loadCompleteCallback === 'function') {\r\n      if (typeof script.onreadystatechange === 'undefined') {\r\n        script.onload = loadCompleteCallback;\r\n      } else {\r\n        script.onreadystatechange = function() {\r\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n            script.onreadystatechange = null;\r\n            loadCompleteCallback();\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    script.src = fileUrl;\r\n\r\n    var ele = targetElementToAppend;\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (ele) {\r\n      ele.appendChild(script);\r\n    } else {\r\n      var firstScript = document.getElementsByTagName('script')[0];\r\n      firstScript.parentNode.insertBefore(script, firstScript);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * writes text to the system clipboard\r\n   *\r\n   * @static\r\n   * @method copyText\r\n   * @param {String} str\r\n   * @param {Function} successCallback\r\n   * @param {Function} errorCallback\r\n   * @example\r\n   * aid.clipboard.copyText('aid.js', function(str) { console.log(str); // 'aid.js' }, function(error) { console.log(error); });\r\n   */\r\n  clipboard.copyText = function copyText(str, successCallback, errorCallback) {\r\n    if (!aid.isString(str)) throw new TypeError('[aid.clipboard.copyText] Type of str parameter must be String.');\r\n\r\n    if (aid.isDefined(successCallback) && !aid.isFunction(successCallback))\r\n      throw new TypeError(\r\n        '[aid.clipboard.copyText] Type of successCallback parameter must be undefined or null or Function.'\r\n      );\r\n\r\n    if (aid.isDefined(errorCallback) && !aid.isFunction(errorCallback))\r\n      throw new TypeError(\r\n        '[aid.clipboard.copyText] Type of errorCallback parameter must be undefined or null or Function.'\r\n      );\r\n\r\n    if (!navigator.clipboard) {\r\n      // fallback. no support Clipboard API\r\n      var textArea = document.createElement('textarea');\r\n      textArea.style.position = 'fixed';\r\n      textArea.style.top = '-9999px';\r\n      textArea.style.left = '-9999px';\r\n      textArea.style.width = '2em'; // setting to 1px / 1em doesn't work as this gives a negative w/h on some browsers.\r\n      textArea.style.height = '2em';\r\n      textArea.value = str;\r\n      document.body.appendChild(textArea);\r\n\r\n      textArea.focus();\r\n      textArea.select();\r\n\r\n      try {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\r\n        var isSuccessCopy = document.execCommand('copy');\r\n        if (isSuccessCopy) {\r\n          if (successCallback) successCallback.call(null, str);\r\n          return;\r\n        }\r\n\r\n        if (errorCallback)\r\n          errorCallback.call(\r\n            null,\r\n            new Error('[aid.clipboard.copyText] Cannot copy string with using document.execCommand(\"copy\").')\r\n          );\r\n      } catch (error) {\r\n        if (errorCallback) errorCallback.call(null, error);\r\n      }\r\n\r\n      document.body.removeChild(textArea);\r\n    } else {\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\r\n      navigator.clipboard.writeText(str).then(\r\n        function() {\r\n          if (successCallback) successCallback.call(null, str);\r\n        },\r\n        function(error) {\r\n          if (errorCallback) errorCallback.call(null, error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Identity monad\r\n   *\r\n   * @static\r\n   * @class Identity\r\n   * @param {Object} value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Identity = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Identity.prototype.bind = function(func) {\r\n    return func(this._value);\r\n  };\r\n\r\n  Identity.prototype.toString = function() {\r\n    return 'Identity (' + this._value + ')';\r\n  };\r\n\r\n  monad.Identity = Identity;\r\n\r\n  /**\r\n   * Empty monad\r\n   *\r\n   * @class Empty\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Empty = function() {};\r\n\r\n  Empty.prototype.map = function(/*func*/) {\r\n    return this;\r\n  };\r\n\r\n  Empty.prototype.flatmap = function(/*_*/) {\r\n    return new Empty();\r\n  };\r\n\r\n  Empty.prototype.toString = function() {\r\n    return 'Empty ()';\r\n  };\r\n\r\n  monad.Empty = Empty;\r\n\r\n  /**\r\n   * Wrapper monad\r\n   *\r\n   * @class Wrapper\r\n   * @param {Object} value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Wrapper = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Wrapper.of = function(value) {\r\n    return new Wrapper(value);\r\n  };\r\n\r\n  Wrapper.prototype.map = function(func) {\r\n    return Wrapper.of(func(this._value));\r\n  };\r\n\r\n  Wrapper.prototype.join = function() {\r\n    if (!(this._value instanceof Wrapper)) return this;\r\n\r\n    return this._value.join();\r\n  };\r\n\r\n  Wrapper.prototype.get = function() {\r\n    return this._value;\r\n  };\r\n\r\n  Wrapper.prototype.toString = function() {\r\n    return 'Wrapper (' + this._value + ')';\r\n  };\r\n\r\n  monad.Wrapper = Wrapper;\r\n\r\n  /**\r\n   * Nothing monad\r\n   *\r\n   * @class Nothing\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Nothing = function() {};\r\n\r\n  Nothing.prototype.value = function(/*value*/) {\r\n    throw new TypeError('[aid.monad.Nothing] Cannot extract the value.');\r\n  };\r\n\r\n  Nothing.prototype.map = function(/*func*/) {\r\n    return this;\r\n  };\r\n\r\n  Nothing.prototype.getOrElse = function(other) {\r\n    return other;\r\n  };\r\n\r\n  Nothing.prototype.filter = function(/*func*/) {\r\n    return this._value;\r\n  };\r\n\r\n  Nothing.prototype.chain = function(/*func*/) {\r\n    return this;\r\n  };\r\n\r\n  Nothing.prototype.toString = function() {\r\n    return 'Maybe.Nothing';\r\n  };\r\n\r\n  monad.Nothing = Nothing;\r\n\r\n  /**\r\n   * Just monad\r\n   *\r\n   * @class Just\r\n   * @param {Object} value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Just = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Just.prototype.value = function(/*value*/) {\r\n    throw this._value;\r\n  };\r\n\r\n  Just.prototype.map = function(func) {\r\n    return Maybe.fromNullable(func(this._value));\r\n  };\r\n\r\n  Just.prototype.getOrElse = function() {\r\n    return this._value;\r\n  };\r\n\r\n  Just.prototype.filter = function(func) {\r\n    Maybe.fromNullable(func(this._value) ? this._value : null);\r\n  };\r\n\r\n  Just.prototype.chain = function(func) {\r\n    return func(this._value);\r\n  };\r\n\r\n  Just.prototype.toString = function() {\r\n    return 'Maybe.Just (' + this._value + ')';\r\n  };\r\n\r\n  monad.Just = Just;\r\n\r\n  /**\r\n   * Maybe monad\r\n   *\r\n   * @static\r\n   * @method Maybe\r\n   * @example\r\n   * var uri = 'http://www.google.com'; // this uri has no parameters\r\n   * var safeUriParams = aid.curry(function(uri) { return aid.monad.Maybe.fromNullable(aid.string.getUriParams(uri)); });\r\n   * var safeName = safeUriParams(uri).map(function(params) { return params.name; });\r\n   * var name = safeName.getOrElse('no parameter'); // 'no parameter'\r\n   */\r\n  var Maybe = function() {};\r\n\r\n  Maybe.just = function(value) {\r\n    return new Just(value);\r\n  };\r\n\r\n  Maybe.nothing = function() {\r\n    return new Nothing();\r\n  };\r\n\r\n  Maybe.of = function(value) {\r\n    return Maybe.just(value);\r\n  };\r\n\r\n  Maybe.fromNullable = function(value) {\r\n    return aid.isDefined(value) ? Maybe.just(value) : Maybe.nothing();\r\n  };\r\n\r\n  monad.Maybe = Maybe;\r\n\r\n  /**\r\n   * Left monad\r\n   *\r\n   * @class Left\r\n   * @param {Object} value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Left = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Left.prototype.map = function(/*_*/) {\r\n    return this;\r\n  };\r\n\r\n  Left.prototype.value = function() {\r\n    throw new TypeError('[aid.monad.Left] Cannot extract the value.');\r\n  };\r\n\r\n  Left.prototype.getOrElse = function(other) {\r\n    return other;\r\n  };\r\n\r\n  Left.prototype.orElse = function(func) {\r\n    return func(this._value);\r\n  };\r\n\r\n  Left.prototype.chain = function(/*func*/) {\r\n    return this;\r\n  };\r\n\r\n  Left.prototype.getOrElseThrow = function(errorMessage) {\r\n    throw new Error(errorMessage);\r\n  };\r\n\r\n  Left.prototype.filter = function(/*func*/) {\r\n    return this;\r\n  };\r\n\r\n  Left.prototype.toString = function() {\r\n    return 'Either.Left (' + this._value + ')';\r\n  };\r\n\r\n  monad.Left = Left;\r\n\r\n  /**\r\n   * Right monad\r\n   *\r\n   * @class Right\r\n   * @param {Object} value\r\n   * @example\r\n   * TODO:\r\n   */\r\n  var Right = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Right.prototype.map = function(func) {\r\n    return Either.of(func(this._value));\r\n  };\r\n\r\n  Right.prototype.getOrElse = function(/*other*/) {\r\n    return this._value;\r\n  };\r\n\r\n  Right.prototype.orElse = function() {\r\n    return this;\r\n  };\r\n\r\n  Right.prototype.chain = function(func) {\r\n    return func(this._value);\r\n  };\r\n\r\n  Right.prototype.getOrElseThrow = function(/*_*/) {\r\n    return this._value;\r\n  };\r\n\r\n  Right.prototype.filter = function(func) {\r\n    return Either.fromNullable(func(this._value) ? this._value : null);\r\n  };\r\n\r\n  Right.prototype.toString = function() {\r\n    return 'Either.Right (' + this._value + ')';\r\n  };\r\n\r\n  monad.Right = Right;\r\n\r\n  /**\r\n   * Either monad\r\n   *\r\n   * @class Either\r\n   * @param {Object} value\r\n   * @example\r\n   * var decode = function(url) {\r\n   *   try {\r\n   *     var result = window.decodeURIComponent(url);\r\n   *     return Either.of(result);\r\n   *   } catch (error) {\r\n   *     return Either.left(error);\r\n   *   }\r\n   * };\r\n   * var trim = function(str) { return str.trim(); };\r\n   * var split = function(str) { return str.split(''); };\r\n   * var debug = aid.tab(function(value) { console.log('[debug] :', value)});\r\n   *\r\n   * var splitDecodedStr = function(str) {\r\n   *   var result = Maybe.fromNullable(str)\r\n   *\r\n   *     // change Maybe(Just, Nothing) monad to Either(Left, Right) monad.\r\n   *     .map(trim).map(debug)\r\n   *     .chain(decode).map(debug).map(split)\r\n   *\r\n   *     // get success result or else value\r\n   *     .getOrElse([]); // get successed value or replacement value // useful to get some value.\r\n   *     // .orElse(func) // if fail, func(value of Either.left) // useful to do something.\r\n   *\r\n   *   return result;\r\n   * };\r\n   *\r\n   * console.log(splitDecodedStrUseMonad(' % '));\r\n   * console.log(splitDecodedStrUseMonad(' https%3A%2F%2Fgithub.com%2F '));\r\n   */\r\n  var Either = function(value) {\r\n    this._value = value;\r\n  };\r\n\r\n  Either.left = function(value) {\r\n    return new monad.Left(value);\r\n  };\r\n\r\n  Either.right = function(value) {\r\n    return new monad.Right(value);\r\n  };\r\n\r\n  Either.fromNullable = function(value) {\r\n    return aid.isDefined(value) ? Either.right(value) : Either.left(value);\r\n  };\r\n\r\n  Either.of = function(value) {\r\n    return Either.right(value);\r\n  };\r\n\r\n  Either.prototype.value = function() {\r\n    return this._value;\r\n  };\r\n\r\n  monad.Either = Either;\r\n\r\n  /**\r\n   * IO monad\r\n   *\r\n   * @class IO\r\n   * @param {Function} effect\r\n   * @example\r\n   * var read = function(document, selector) {\r\n   *   return function() {\r\n   *     return 'aid.js'; // return document.querySelector(selector).innerHTML;\r\n   *   };\r\n   * };\r\n   * var write = function(document, selector) {\r\n   *   return function(value) {\r\n   *     console.log('write :', value); // document.querySelector(selector).innerHTML = value;\r\n   *     return value;\r\n   *   };\r\n   * };\r\n   * var uppercase = function(str) { return str.toUpperCase(); };\r\n   * var readDOM = aid.partial(read, document),\r\n   *   writeDOM = aid.partial(write, document);\r\n   *\r\n   * var readAndWriteUppercase = IO.from(readDOM('#dummy')).map(uppercase).map(writeDOM('#dummy'));\r\n   * readAndWriteUppercase.run();\r\n   */\r\n  var IO = function(effect) {\r\n    if (!aid.isFunction(effect)) throw new TypeError('[aid.monad.IO] Type of effect parameter must be Function.');\r\n\r\n    this.effect = effect;\r\n  };\r\n\r\n  IO.of = function(value) {\r\n    return new IO(function() {\r\n      return value;\r\n    });\r\n  };\r\n\r\n  IO.from = function(func) {\r\n    return new IO(func);\r\n  };\r\n\r\n  IO.prototype.map = function(func) {\r\n    var self = this;\r\n\r\n    return new IO(function() {\r\n      return func(self.effect());\r\n    });\r\n  };\r\n\r\n  IO.prototype.chain = function(func) {\r\n    return func(this.effect());\r\n  };\r\n\r\n  IO.prototype.run = function() {\r\n    return this.effect();\r\n  };\r\n\r\n  monad.IO = IO;\r\n\r\n  /*\r\n   * export\r\n   */\r\n  aid.operator = operator;\r\n  aid.platform = platform;\r\n  aid.browser = browser;\r\n  aid.string = string;\r\n  aid.math = math;\r\n  aid.date = date;\r\n  aid.array = array;\r\n  aid.object = object;\r\n  aid.element = element;\r\n  aid.file = file;\r\n  aid.clipboard = clipboard;\r\n  aid.monad = monad;\r\n\r\n  if (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n      exports = module.exports = aid;\r\n    }\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    define('aid', [], function() {\r\n      return aid;\r\n    });\r\n  } else {\r\n    global.aid = aid;\r\n  }\r\n})();\r\n"]}