{"version":3,"sources":["aid.js"],"names":["global","self","this","_slice","Array","prototype","slice","_hasOwnProperty","Object","hasOwnProperty","aid","operator","platform","browser","string","math","date","array","object","element","file","clipboard","monad","F","existy","any","isDefined","isBoolean","constructor","Boolean","isNumber","isNaN","Number","isInteger","isFinite","Math","floor","isString","String","isArray","isObject","isFunction","Function","isRegExp","RegExp","isError","errorType","con","window","InternalError","Error","EvalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","isElement","nodeType","Node","extend","destination","source","key","inherit","ChildClass","ParentClass","super","namespace","parent","ns","split","forEach","part","borrow","borrower","donor","funcName","args","call","arguments","apply","bind","func","context","compose","func_a","func_b","not","each","iterable","_context","i","max","length","truthy","obj","falsy","nth","index","allOf","every","val","anyOf","some","constant","plucker","field","best","conditionFunc","reduce","previousValue","currentValue","iterateUntil","calculateFunc","initialValue","result","push","curry","arg","curry2","secondArg","firstArg","curryAll","curryArgsNum","arity","curried","rest","concat","reverseArgs","reverse","partial","partialRight","beginIndex","begin","pipeline","seed","restArgs","value","prev","current","lazyChain","calls","invoke","methodName","target","method","name","force","ret","thunk","eq","lhs","rhs","identity","tab","alt","result_a","seq","funcs","fork","join","Stack","_dataStore","_top","pop","peek","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","find","node","findPrevious","insert","prevNodeData","insertNode","prevNode","remove","getAllNodes","nodes","createLinkedList","object_a","object_b","isWindow","userAgent","test","isMac","isIOS","MSStream","isIPhone","isIPad","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isChromePhone","isChromeTablet","isSafari","isSafariPhone","isSafariTablet","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie11","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","canUseDOM","getCookie","cookieArr","cookie","splitArr","keyStr","valueStr","decodeURIComponent","setCookie","expireSecond","path","domain","expires","pathStr","domainStr","Date","setTime","getTime","toGMTString","encodeURIComponent","trim","str","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","email","exec","isIFrame","iframeHtml","getUriParam","uri","parameterName","tmpArr","params","param","eqIndex","indexOf","getUriParams","getUriCombinedParams","parameters","hashStr","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","v","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","getElementPrefixedStyle","style","removeNoContentElements","html","withWhitespaceContent","regex","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","values","match","isPalindrome","isDecoded","decodeFunc","decodeFn","decodedStr","error","decodeRecursively","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","min","getSizeWidthFit","isEpsilonEqual","number_a","number_b","epsilon","EPSILON","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","getLoopedLastIndex","getReverseLoopedFirstIndex","lastIndex","factorial","getObjForPagination","totalPostNum","displayPostNumPerPage","displayPaginationBtnNum","pageIndex","totalPageNum","paginationBtnGroupIndex","firstPageIndex","lastPageIndex","nextPageIndex","prevPageIndex","degreeToRadian","degree","PI","radianToDegree","radian","getHeightOfRightTriangle","baseLineWidth","acuteAngleDegree","tan","getDistanceBetweenTwoPoints","point1","point2","sqrt","pow","getOrthogonalPointBetweenLineAndSomePoint","collinearPoint1","collinearPoint2","somePoint","diffX","diffY","lineSlope","somePointLineSlope","orthogonalPoint","getRandomPositiveNegative","round","random","getRandomFloat","getRandomInt","minInt","maxInt","remap","remapedMin","remapedMax","gt","lt","gte","lte","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","getIndexOfObjectHasProperty","overlappedConditionSortByProperty","sortConditions","datas","conditionIndex","condition","sort","prevProperty","property","nextConditionIndex","nextCondition","memoObj","memoArr","len","acc","curVal","keys","hasDontEnumBug","propertyIsEnumerable","dontEnums","dontEnumsLength","shallowEqual","objA","objB","isNotObject","isNull","keysA","keysB","bHasOwnProperty","isEntirelyInViewport","ele","jQuery","get","rect","getBoundingClientRect","eqZero","top","left","bottom","right","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","verticallyInView","horizontallyInView","appendScriptFile","fileUrl","targetElementToAppend","loadCompleteCallback","script","onreadystatechange","onload","readyState","src","appendChild","firstScript","getElementsByTagName","parentNode","insertBefore","copyText","successCallback","errorCallback","writeText","then","textArea","position","body","focus","select","execCommand","removeChild","Identity","_value","Empty","map","flatmap","Wrapper","of","Nothing","getOrElse","other","filter","chain","Just","Maybe","fromNullable","just","nothing","Left","orElse","getOrElseThrow","errorMessage","Right","Either","IO","effect","from","run","exports","module","define","amd"],"mappings":"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","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.89\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2019 Hyun-Seok.Kim, dragmove@gmail.com\n */\n(function() {\n  'use strict';\n\n  // Establish the global object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var global =\n    (typeof self == 'object' && self.self === self && self) ||\n    (typeof global == 'object' && global.global === global && global) ||\n    this ||\n    {};\n\n  var _slice = Array.prototype.slice;\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var aid = {},\n    operator = {},\n    platform = {},\n    browser = {},\n    string = {},\n    math = {},\n    date = {},\n    array = {},\n    object = {},\n    element = {},\n    file = {},\n    clipboard = {},\n    monad = {}; // https://en.wikipedia.org/wiki/Monad_(functional_programming)\n\n  /**\n   * is null/undefined or other\n   *\n   * @static\n   * @method existy\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.existy(undefined) ); // false\n   * console.log( aid.existy(null) ); // false\n   * console.log( aid.existy('') ); // true\n   */\n  aid.existy = function existy(any) {\n    return any != null;\n  };\n\n  /**\n   * check defined\n   *\n   * @static\n   * @method isDefined\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isDefined(undefined) ); // false\n   * console.log( aid.isDefined(null) ); // false\n   * console.log( aid.isDefined(0) ); // true\n   */\n  aid.isDefined = function isDefined(any) {\n    if (any === null || typeof any === 'undefined') return false;\n\n    return true;\n  };\n\n  /**\n   * check type is Boolean\n   *\n   * @static\n   * @method isBoolean\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isBoolean(false) ); // true\n   */\n  aid.isBoolean = function isBoolean(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === Boolean;\n  };\n\n  /**\n   * check type is Number\n   *\n   * @static\n   * @method isNumber\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isNumber(-1) ); // true\n   */\n  aid.isNumber = function isNumber(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return !isNaN(any) && any.constructor === Number;\n  };\n\n  /**\n   * check type is Integer Number\n   *\n   * @static\n   * @method isInteger\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isInteger(-1) ); // true\n   */\n  aid.isInteger = function isInteger(any) {\n    if (!aid.isNumber(any)) return false;\n\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    return isFinite(any) && Math.floor(any) === any;\n  };\n\n  /**\n   * check type is String\n   *\n   * @static\n   * @method isString\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isString('') ); // true\n   */\n  aid.isString = function isString(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === String;\n  };\n\n  /**\n   * check type is Array\n   *\n   * @static\n   * @method isArray\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isArray([]) ); // true\n   */\n  aid.isArray = function isArray(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === Array;\n  };\n\n  /**\n   * check type is Object\n   *\n   * @static\n   * @method isObject\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isObject({}) ); // true\n   */\n  aid.isObject = function isObject(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === Object;\n  };\n\n  /**\n   * check type is Function\n   *\n   * @static\n   * @method isFunction\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isFunction(function(){}) ); // true\n   */\n  aid.isFunction = function isFunction(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === Function;\n  };\n\n  /**\n   * check type is RegExp\n   *\n   * @static\n   * @method isRegExp\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\n   * console.log( aid.isRegExp(/^aid/) ); // true\n   */\n  aid.isRegExp = function isRegExp(any) {\n    if (!aid.isDefined(any)) return false;\n\n    return any.constructor === RegExp;\n  };\n\n  /**\n   * check type is Error (can check Error, EvalError, InternalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError)\n   * // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\n   *\n   * @static\n   * @method isError\n   * @param {*} any\n   * @param {Constructor} errorType (optional)\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isError(new Error('msg')) ); // true\n   * console.log( aid.isError(new TypeError('msg')) ); // true\n   * console.log( aid.isError(new RangeError('msg')) ); // true\n   * console.log( aid.isError(new TypeError('msg'), TypeError) ); // true\n   * console.log( aid.isError(new TypeError('msg'), Error) ); // false\n   * console.log( aid.isError(new TypeError('msg'), RangeError) ); // false\n   */\n  aid.isError = function isError(any, errorType) {\n    if (!aid.isDefined(any)) return false;\n\n    var con = any.constructor;\n\n    if (!aid.isDefined(errorType)) {\n      // Non-standard - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError\n      if (window.InternalError && con === window.InternalError) return true;\n\n      return (\n        con === Error ||\n        con === EvalError ||\n        con === RangeError ||\n        con === ReferenceError ||\n        con === SyntaxError ||\n        con === TypeError ||\n        con === URIError\n      );\n    }\n\n    return con === errorType;\n  };\n\n  /**\n   * check type is HTML element\n   * // https://developer.mozilla.org/en-US/docs/Web/API/Element\n   *\n   * @static\n   * @method isElement\n   * @param {*} any\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isElement(document.createElement('div')) ); // true\n   */\n  aid.isElement = function isElement(any) {\n    return aid.isDefined(any) && typeof any === 'object' && any.nodeType === 1 && any instanceof Node;\n  };\n\n  /**\n   * extend function\n   *\n   * @static\n   * @method extend\n   * @param {Object} prototype of class function, or object has variables or methods.\n   * @param {Object} object has variables or methods\n   * @example\n   * function Destination() {\n   *   this.name = 'destination';\n   *   this.type = 'json';\n   * };\n   *\n   * var source = {\n   *   getName: function() { return this.name; },\n   *   getType: function() { return this.type; }\n   * };\n   *\n   * aid.extend(Destination.prototype, source);\n   *\n   * var destination = new Destination();\n   * console.log( destination.getName() ); // 'destination'\n   * console.log( destination.getType() ); // 'json'\n   */\n  aid.extend = function extend(destination, source) {\n    if (!(destination instanceof Object) || !(typeof destination === 'object')) {\n      throw new TypeError('[aid.extend] Type of destination parameter must be instance of Object, and object.');\n    }\n\n    if (!(typeof source === 'object')) throw new TypeError('[aid.extend] Type of source parameter must be Object.');\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n\n    return destination;\n  };\n\n  /**\n   * inherit Class function\n   *\n   * @static\n   * @method inherit\n   * @param {class} ChildClass - child class function\n   * @param {class} ParentClass - parent class function\n   * @example\n   */\n  aid.inherit = (function() {\n    // use closure, protect gabarge collection.\n    var F = function() {};\n\n    return function inherit(ChildClass, ParentClass) {\n      F.prototype = ParentClass.prototype;\n\n      ChildClass.prototype = new F();\n      ChildClass.prototype.constructor = ChildClass;\n      ChildClass.super = ParentClass.prototype;\n    };\n  })();\n\n  /**\n   * create namespace\n   *\n   * @static\n   * @method namespace\n   * @param {String} namespace\n   * @param {Object} parent\n   * @returns {Object} return object\n   * @example\n   * aid.namespace('first.second.third'); // create first.second.third object\n   */\n  aid.namespace = function(namespace, parent) {\n    if (!aid.isString(namespace)) throw new TypeError('[aid.namespace] Type of namespace parameter must be String.');\n\n    if (!(aid.isObject(parent) || !aid.isDefined(parent))) {\n      throw new TypeError('[aid.namespace] Type of parent parameter must be Object or null or undefined.');\n    }\n\n    var ns = parent || global;\n    if (namespace) {\n      var parts = namespace.split('.');\n\n      parts.forEach(function(part) {\n        if (!ns[part]) ns[part] = {};\n        ns = ns[part];\n      });\n    }\n\n    return ns;\n  };\n\n  /**\n   * borrow method from donor object\n   *\n   * @static\n   * @method borrow\n   * @param {Object} borrower\n   * @param {Object} donor\n   * @param {String} funcName\n   * @example\n   * var borrower = {}, donor = { say: function() { return 'hello, world'; } };\n   * aid.borrow(borrower, donor, 'say');\n   * console.log( borrower.say() ); // 'hello, world'\n   */\n  aid.borrow = function borrow(borrower, donor, funcName) {\n    if (!aid.isObject(borrower) || !aid.isObject(donor))\n      throw new TypeError('[aid.borrow] Type of borrower, donor parameters must be Object.');\n\n    if (!aid.isString(funcName)) throw new TypeError('[aid.borrow] Type of funcName parameter must be String.');\n\n    if (!aid.isDefined(donor[funcName]))\n      throw new Error('[aid.borrow] donor object parameter has not function with funcName parameter.');\n\n    if (aid.isDefined(borrower[funcName]))\n      throw new Error('[aid.borrow] borrower object parameter already has function with funcName parameter.');\n\n    borrower[funcName] = function() {\n      var args = _slice.call(arguments);\n      return donor[funcName].apply(this, args);\n    };\n  };\n\n  /**\n   * return function bind context and parameters\n   *\n   * @static\n   * @method bind\n   * @param {Function} func\n   * @param {Object} context\n   * @returns {Function} return function\n   * @example\n   * this.title = 'global - aid.js';\n   * var obj = { title: 'obj - aid.js', getTitle: function() { return this.title; } };\n   * var getObjTitle = bind(obj.getTitle, obj), getGlobalTitle = bind(obj.getTitle, window);\n   * console.log( getObjTitle() ); // 'obj - aid.js';\n   * console.log( getGlobalTitle() ); // 'global - aid.js';\n   */\n  aid.bind = function bind(func, context) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.bind] Type of func parameter must be Function.');\n\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  /**\n   * return function composed function_a and function_b\n   *\n   * @static\n   * @method compose\n   * @param {Function} func_a\n   * @param {Function} func_b\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.compose = function compose(func_a, func_b) {\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\n      throw new TypeError('[aid.compose] Type of func_a, func_b parameters must be Function.');\n    }\n\n    return function() {\n      return func_a(func_b.apply(null, arguments));\n    };\n  };\n\n  /**\n   * return function negate object parameter\n   *\n   * @static\n   * @method not\n   * @param {Function} func\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.not(isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.not = function not(func) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.not] Type of func parameter must be Function.');\n\n    return function() {\n      return !func.apply(null, arguments);\n    };\n  };\n\n  /**\n   * each method for data can loop\n   *\n   * @static\n   * @method each\n   * @param {(Array|String)} iterable\n   * @param {Function} func\n   * @param {Object} context\n   * @example\n   * var result = [];\n   * aid.each('aid.js', function(v) { result.push(v); }, null);\n   * console.log( result.join('') ); // 'aid.js'\n   */\n  aid.each = function each(iterable, func, context) {\n    if (!(aid.isArray(iterable) || aid.isString(iterable))) {\n      throw new TypeError('[aid.each] Type of iterable parameter must be Array or String.');\n    }\n\n    var _context = aid.existy(context) ? context : null;\n\n    for (var i = 0, max = iterable.length; i < max; i++) {\n      func.call(_context, iterable[i]);\n    }\n  };\n\n  /**\n   * check object is truthy\n   *\n   * @static\n   * @method truthy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.truthy(true) ); // true\n   * console.log( aid.truthy([]) ); // true\n   * console.log( aid.truthy(0) ); // false\n   * console.log( aid.truthy('') ); // false\n   */\n  aid.truthy = function truthy(obj) {\n    return !!obj;\n  };\n\n  /**\n   * check object is falsy\n   *\n   * @static\n   * @method falsy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.falsy(true) ); // false\n   * console.log( aid.falsy([]) ); // false\n   * console.log( aid.falsy(0) ); // true\n   * console.log( aid.falsy('') ); // true\n   */\n  aid.falsy = function falsy(obj) {\n    return !!!obj;\n  };\n\n  /**\n   * get indexed value of array or string\n   *\n   * @static\n   * @method nth\n   * @param {Array|String} iterable\n   * @param {Number} index\n   * @example\n   * console.log( aid.nth('string', 1) ); // 't'\n   * console.log( aid.nth('string', -1) ); // null\n   * console.log( aid.nth([0, 'str', true], 2) ); // true\n   * console.log( aid.nth([0, 'str', true], 99) ); // null\n   */\n  aid.nth = function nth(iterable, index) {\n    if (!(aid.isArray(iterable) || aid.isString(iterable))) {\n      throw new TypeError('[aid.nth] Type of iterable parameter must be Array or String.');\n    }\n\n    if (!aid.isInteger(index)) throw new TypeError('[aid.nth] Type of index parameter must be Integer Number.');\n\n    return index < 0 || index > iterable.length - 1 ? null : iterable[index];\n  };\n\n  /**\n   * check all arguments are true\n   *\n   * @static\n   * @method allOf\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.allOf(true, true) ); // true\n   * console.log( aid.allOf(true, false) ); // false\n   */\n  aid.allOf = function allOf(/*args*/) {\n    var args = _slice.call(arguments);\n\n    return args.every(function(val) {\n      return val === true;\n    });\n  };\n\n  /**\n   * check some argument is true\n   *\n   * @static\n   * @method anyOf\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( anyOf(true, false) ); // true\n   * console.log( anyOf(false, false) ); // false\n   */\n  aid.anyOf = function anyOf(/*args*/) {\n    var args = _slice.call(arguments);\n\n    return args.some(function(val) {\n      return val === true;\n    });\n  };\n\n  /**\n   * return function always return constant value\n   * http://underscorejs.org/#constant\n   *\n   * @static\n   * @method constant\n   * @param {Object} obj\n   * @returns {Function} return function\n   * @example\n   * var obj = {name: 'aid.js'};\n   * console.log( aid.constant(obj)() === obj ); // true\n   */\n  aid.constant = function constant(obj) {\n    return function() {\n      return obj;\n    };\n  };\n\n  /**\n   * return function pluck field of object, array, string\n   *\n   * @static\n   * @method plucker\n   * @param {(String|Number)} field of object, array, string\n   * @returns {Function} return function\n   * @example\n   * var getTitle = aid.plucker('title');\n   * var obj = {title: 'aid.js', description: 'A bundle of Javascript util Library for help developers. No dependency to other Libraries.'};\n   * console.log( getTitle(obj) ); // 'aid.js'\n   *\n   * var getFirst = aid.plucker(0);\n   * var str = 'aid.js';\n   * console.log( getFirst(str) ); // 'a'\n   *\n   * var getLength = aid.plucker('length');\n   * var arr = [1, 2, 3, 4, 5];\n   * console.log( getLength(arr) ); // 5\n   */\n  aid.plucker = function plucker(field) {\n    if (!(aid.isString(field) || aid.isNumber(field))) {\n      throw new TypeError('[aid.plucker] Type of field parameter must be String or Number.');\n    }\n\n    return function(obj) {\n      if (!(aid.isObject(obj) || aid.isArray(obj) || aid.isString(obj))) {\n        throw new TypeError('[aid.plucker] Type of obj parameter must be Object or Array or String.');\n      }\n\n      return obj[field];\n    };\n  };\n\n  /**\n   * return best(optimized by condition function) value\n   *\n   * @static\n   * @method best\n   * @param {Function} condition function to find best value\n   * @param {Array} array\n   * @example\n   * console.log( aid.best(function(x, y) { return x > y; }, [2, 4, 1, 5, 3]) ); // 5\n   */\n  aid.best = function best(conditionFunc, array) {\n    if (!aid.isFunction(conditionFunc))\n      throw new TypeError('[aid.best] Type of conditionFunc parameter must be Function.');\n\n    if (!aid.isArray(array)) throw new TypeError('[aid.best] Type of array parameter must be Array.');\n\n    return array.reduce(function(previousValue, currentValue) {\n      return conditionFunc(previousValue, currentValue) ? previousValue : currentValue;\n    });\n  };\n\n  /**\n   * return array has values filtered\n   *\n   * @static\n   * @method iterateUntil\n   * @param {Function} function return value\n   * @param {Function} function has condition\n   * @param {Object} initial value\n   * @returns {Array} return array has values filtered\n   * @example\n   * console.log( aid.iterateUntil(function(n) { return n + n; }, function(n) { return n <= 1042 }, 1) ); // [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\n   */\n  aid.iterateUntil = function iterateUntil(calculateFunc, conditionFunc, initialValue) {\n    if (!aid.isFunction(calculateFunc))\n      throw new TypeError('[aid.iterateUntil] Type of calculateFunc parameter must be Function.');\n\n    if (!aid.isFunction(conditionFunc))\n      throw new TypeError('[aid.iterateUntil] Type of conditionFunc parameter must be Function.');\n\n    var array = [],\n      result = calculateFunc(initialValue);\n\n    while (conditionFunc(result)) {\n      array.push(result);\n      result = calculateFunc(result);\n    }\n\n    return array;\n  };\n\n  /**\n   * curry function can use one parameter\n   *\n   * @static\n   * @method curry\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   */\n  aid.curry = function curry(func) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curry] Type of func parameter must be Function.');\n\n    return function(arg) {\n      return func(arg);\n    };\n  };\n\n  /**\n   * curry function can use two parameter\n   *\n   * @static\n   * @method curry2\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * var parseBinaryStr = aid.curry2(parseInt)(2);\n   * console.log( parseBinaryStr('111') ); // 7\n   */\n  aid.curry2 = function curry2(func) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curry2] Type of func parameter must be Function.');\n\n    return function(secondArg) {\n      return function(firstArg) {\n        return func(firstArg, secondArg);\n      };\n    };\n  };\n\n  /**\n   * curry function for variadic functions\n   *\n   * @static\n   * @method curryAll\n   * @param {Function} function\n   * @param {Number} minimum number of arguments to curry\n   * @returns {Function} return function\n   * @example\n   * console.log( curryAll(Math.max, 2)(1, 99) ); // 99\n   * console.log( curryAll(Math.max, 2)(1)(99) ); // 99\n   */\n  aid.curryAll = function curryAll(func, curryArgsNum) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.curryAll] Type of func parameter must be Function.');\n\n    var arity = curryArgsNum || func.length;\n\n    return function curried() {\n      var args = _slice.call(arguments),\n        context = this;\n\n      return args.length >= arity\n        ? func.apply(context, args)\n        : function() {\n            var rest = _slice.call(arguments);\n            return curried.apply(context, args.concat(rest));\n          };\n    };\n  };\n\n  /**\n   * reverse arguments of function\n   * refer to https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch3.md/#reversing-arguments\n   *\n   * @static\n   * @method reverseArgs\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * var getReverseArgs = aid.reverseArgs(function() { return Array.prototype.slice.call(arguments); });\n   * console.log( getReverseArgs(99, 'aid.js') ); // ['aid.js', 99]\n   */\n  aid.reverseArgs = function reverseArgs(func) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.reverseArgs] Type of func parameter must be Function.');\n\n    return function(/* args... */) {\n      var args = _slice.call(arguments);\n\n      return func.apply(null, args.concat().reverse());\n    };\n  };\n\n  /**\n   * partial application\n   *\n   * @static\n   * @method partial\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * function sum() {\n   *   var args = Array.prototype.slice.call(arguments);\n   *   return args.reduce(function(acc, cur) {\n   *     return acc + cur;\n   *   }, 0);\n   * }\n   * console.log( aid.partial(sum)() ); // 0\n   * console.log( aid.partial(sum, 1)() ); // 1\n   * console.log( aid.partial(sum, 1)(2) ); // 3\n   * console.log( aid.partial(sum)(1, 2, 3) ); // 6\n   */\n  aid.partial = function partial(func /*, args... */) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.partial] Type of func parameter must be Function.');\n\n    var args = aid.rest(_slice.call(arguments));\n\n    return function(/* args... */) {\n      return func.apply(func, args.concat(_slice.call(arguments)));\n    };\n  };\n\n  /**\n   * partial application for the right arguments\n   *\n   * @static\n   * @method partialRight\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * function three(str, num, arr) { return str + ' ' + num + ' ' + arr; }\n   * console.log( aid.partialRight(three, 99, [1, 2, 3])('aid.js') ); // 'aid.js 99 1,2,3'\n   * console.log( aid.partial( aid.partialRight(three, [1, 2, 3]), 'aid.js' )(99) ); // 'aid.js 99 1,2,3'\n   */\n  aid.partialRight = function partialRight(func /*, args... */) {\n    if (!aid.isFunction(func)) throw new TypeError('[aid.partialRight] Type of func parameter must be Function.');\n\n    var args = aid.rest(_slice.call(arguments));\n\n    return function(/* args... */) {\n      return func.apply(null, _slice.call(arguments).concat(args));\n    };\n  };\n\n  /**\n   * rest\n   * refer to _.rest function of underscore.js - https://github.com/jashkenas/underscore/blob/master/underscore.js\n   *\n   * @static\n   * @method rest\n   * @param {Array} array\n   * @param {Number} begin index to slice arguments.\n   * @returns {Array} return array\n   * @example\n   * var array = [1, 2, 3, 4, 5];\n   * console.log( aid.rest(array) ); // [2, 3, 4, 5]\n   * console.log( aid.rest(array, 2) ); // [3, 4, 5]\n   */\n  aid.rest = function rest(array, beginIndex) {\n    if (!aid.isArray(array)) throw new TypeError('[aid.rest] Type of array parameter must be Array.');\n\n    var begin = !aid.existy(beginIndex) ? 1 : beginIndex;\n\n    return _slice.call(array, begin);\n  };\n\n  /**\n   * pipeline\n   *\n   * @static\n   * @method pipeline\n   * @param {Object} seed\n   * @returns {Object} return value\n   * @example\n   * function negative(n) { return n * -1; }\n   * function half(n) { return n / 2; }\n   * function negativeHalf(n) { return aid.pipeline(n, negative, half); }\n   * console.log( aid.pipeline(80, negative) ); // -80\n   * console.log( negativeHalf(80) ); // 80 * -1 / 2\n   */\n  aid.pipeline = function pipeline(seed /* args */) {\n    var restArgs = aid.rest(_slice.call(arguments));\n\n    aid.each(\n      restArgs,\n      function(value) {\n        if (!aid.isFunction(value)) throw new TypeError('[aid.pipeline] Type of rest parameters must be Function.');\n      },\n      null\n    );\n\n    return restArgs.reduce(function(prev, current) {\n      return current(prev);\n    }, seed);\n  };\n\n  /**\n   * lazyChain\n   *\n   * @static\n   * @method lazyChain\n   * @param {Object} object\n   * @returns {Object} return {invoke, force}\n   * @example\n   * var lazy = aid.lazyChange([2, 1, 3]).invoke('concat', [7, 7, 8, 9, 0]).invoke('sort');\n   * console.log( lazy.force() ); // [0, 1, 2, 3, 7, 7, 8, 9]\n   *\n   * // with aid.pipeline\n   * function double(array) { return array.map(function(v) { return v * 2; }); }\n   * function lazyReverseAndNegative(array) { return aid.lazyChain(array).invoke('reverse').invoke('map', function(v) { return v * -1; }); }\n   * console.log( aid.pipeline([1, 2, 3], double, lazyReverseAndNegative).force() ); // [-6, -4, -2]\n   */\n  aid.lazyChain = function lazyChain(obj) {\n    var calls = [];\n\n    return {\n      invoke: function(methodName /*, args */) {\n        var args = aid.rest(_slice.call(arguments));\n\n        calls.push(function(target) {\n          var method = target[methodName];\n\n          if (!aid.isDefined(method)) {\n            throw Error('[aid.lazyChain] ' + target.constructor.name + ' has not ' + methodName + ' method.');\n          }\n\n          return method.apply(target, args);\n        });\n\n        return this;\n      },\n\n      force: function() {\n        return calls.reduce(function(ret, thunk) {\n          return thunk(ret);\n        }, obj);\n      },\n    };\n  };\n\n  /**\n   * check two parameters are equal\n   *\n   * @static\n   * @method eq\n   * @param {Object} obj\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.eq(99)(99) ); // true\n   */\n  aid.eq = aid.curry2(function(lhs, rhs) {\n    return lhs === rhs;\n  });\n\n  /**\n   * identity combinator\n   *\n   * @static\n   * @method identity\n   * @param {Object} value\n   * @returns {Object} return value\n   * @example\n   * TODO:\n   */\n  aid.identity = function identity(value) {\n    return value;\n  };\n\n  /**\n   * tab combinator\n   *\n   * @static\n   * @method tab\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * TODO:\n   */\n  aid.tab = function tab(func) {\n    if (!aid.isFunction(func)) {\n      throw new TypeError('[aid.tab] Type of func parameter must be Function.');\n    }\n\n    return function(value) {\n      func(value);\n\n      return value;\n    };\n  };\n\n  /**\n   * alt combinator\n   *\n   * @static\n   * @method alt\n   * @param {Function} func_a\n   * @param {Function} func_b\n   * @returns {Function} return function\n   * @example\n   * var alt = aid.alt(function(val) { return val; }, function(val) { return !val; });\n   * console.log( alt(false) ); // true\n   */\n  aid.alt = function alt(func_a, func_b) {\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\n      throw new TypeError('[aid.alt] Type of func_a, func_b parameters must be Function.');\n    }\n\n    return function(value) {\n      var result_a = func_a(value);\n\n      // undefined, null, false\n      if (!aid.isDefined(result_a) || result_a === false) return func_b(value);\n\n      return result_a;\n    };\n  };\n\n  /**\n   * seq combinator\n   *\n   * @static\n   * @method seq\n   * @param {Function} functions\n   * @returns {Function} return function\n   * @example\n   * var seq = aid.seq(function(val) { console.log(val); }, function(val) { console.log(val / -1) });\n   * seq(99); // 99, -99\n   */\n  aid.seq = function seq(/* functions */) {\n    var funcs = _slice.call(arguments);\n\n    funcs.forEach(function(func) {\n      if (!aid.isFunction(func)) throw new TypeError('[aid.seq] Requires function parameters.');\n    });\n\n    return function(value) {\n      funcs.forEach(function(func) {\n        func.call(null, value);\n      });\n    };\n  };\n\n  /**\n   * fork(join) combinator\n   *\n   * @static\n   * @method fork\n   * @param {Function} join\n   * @param {Function} func_a\n   * @param {Function} func_b\n   * @returns {Function} return function\n   * @example\n   * var fork = aid.fork(function(val_a, val_b) { return [val_a, val_b]; }, function(val) { return val; }, function(val) { return !val; });\n   * console.log( fork(true) ); // [true, false]\n   */\n  aid.fork = function fork(join, func_a, func_b) {\n    if (!aid.isFunction(join) || !aid.isFunction(func_a) || !aid.isFunction(func_b)) {\n      throw new TypeError('[aid.fork] Type of join, func_a, func_b parameters must be Function.');\n    }\n\n    return function(value) {\n      return join.call(null, func_a.call(null, value), func_b.call(null, value));\n    };\n  };\n\n  /*\n   * Data Structure\n   */\n  // Stack\n  var Stack = function() {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  Stack.prototype.push = function push(element) {\n    if (this._top < 0) this._top = 0;\n    this._dataStore[this._top++] = element;\n  };\n\n  Stack.prototype.pop = function pop() {\n    return this._dataStore[--this._top];\n  };\n\n  Stack.prototype.peek = function peek() {\n    return this._dataStore[this._top - 1];\n  };\n\n  Stack.prototype.length = function length() {\n    return this._top > 0 ? this._top : 0;\n  };\n\n  Stack.prototype.clear = function clear() {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  aid.createStack = function() {\n    return new Stack();\n  };\n\n  // Queue\n  var Queue = function() {\n    this._dataStore = [];\n  };\n\n  Queue.prototype.enqueue = function enqueue(element) {\n    this._dataStore.push(element);\n  };\n\n  Queue.prototype.dequeue = function dequeue() {\n    return this._dataStore.shift();\n  };\n\n  Queue.prototype.front = function front() {\n    return this._dataStore[0];\n  };\n\n  Queue.prototype.rear = function rear() {\n    return this._dataStore[this._dataStore.length - 1];\n  };\n\n  Queue.prototype.length = function length() {\n    return this._dataStore.length;\n  };\n\n  Queue.prototype.isEmpty = function isEmpty() {\n    if (this._dataStore.length <= 0) return true;\n    return false;\n  };\n\n  aid.createQueue = function createQueue() {\n    return new Queue();\n  };\n\n  // LinkedList node\n  var LinkedListNode = function(data) {\n    this.data = data;\n    this.next = null;\n  };\n\n  // LinkedList\n  var LinkedList = function() {\n    this.head = new LinkedListNode('head');\n  };\n\n  LinkedList.prototype.find = function find(data) {\n    var node = this.head;\n    while (node.data !== data) {\n      node = node.next;\n      if (node === null) return node;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.findPrevious = function findPrevious(data) {\n    if (this.head.data === data) return null;\n\n    var node = this.head;\n    while (node.next !== null && node.next.data !== data) {\n      node = node.next;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.insert = function insert(data, prevNodeData) {\n    var insertNode = new LinkedListNode(data),\n      prevNode = this.find(prevNodeData);\n\n    insertNode.next = prevNode.next;\n    prevNode.next = insertNode;\n  };\n\n  LinkedList.prototype.remove = function remove(data) {\n    var prevNode = this.findPrevious(data);\n\n    if (prevNode.next !== null) {\n      prevNode.next = prevNode.next.next;\n    }\n  };\n\n  LinkedList.prototype.getAllNodes = function getAllNodes() {\n    var nodes = [this.head],\n      node = this.head;\n\n    while (node.next !== null) {\n      nodes.push(node.next);\n      node = node.next;\n    }\n    return nodes;\n  };\n\n  aid.createLinkedList = function createLinkedList() {\n    return new LinkedList();\n  };\n\n  /**\n   * plus(+) operator\n   *\n   * @static\n   * @method +\n   * @param {Object} object_a\n   * @param {Object} object_b\n   * @returns {Object} return object\n   * @example\n   * var plus = aid.operator['+'];\n   * console.log( plus(1, 2) ); // 3\n   */\n  operator['+'] = function plus(object_a, object_b) {\n    return object_a + object_b;\n  };\n\n  /**\n   * identity(===) operator\n   *\n   * @static\n   * @method ===\n   * @param {Object} object_a\n   * @param {Object} object_b\n   * @returns {Boolean} return boolean\n   * @example\n   * var identity = aid.operator['==='];\n   * console.log( identity(1, 1) ); // true\n   */\n  operator['==='] = function identity(object_a, object_b) {\n    return object_a === object_b;\n  };\n\n  /**\n   * logical not(!) operator\n   *\n   * @static\n   * @method !\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  operator['!'] = function(obj) {\n    return !obj;\n  };\n\n  /**\n   * is window platform\n   *\n   * @static\n   * @method isWindow\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\n   */\n  platform.isWindow = function isWindow(userAgent) {\n    return /Windows/i.test(userAgent);\n  };\n\n  /**\n   * is Macintosh platform\n   *\n   * @static\n   * @method isMac\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\n   */\n  platform.isMac = function isMac(userAgent) {\n    return /Macintosh/i.test(userAgent);\n  };\n\n  /**\n   * is iOS platform\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\n   *\n   * @static\n   * @method isIOS\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\n   */\n  platform.isIOS = function isIOS(userAgent) {\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\n  };\n\n  /**\n   * is iPhone\n   *\n   * @static\n   * @method isIPhone\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIPhone(window.navigator.userAgent) );\n   */\n  platform.isIPhone = function isIPhone(userAgent) {\n    if (!platform.isIOS(userAgent)) return false;\n\n    return /iPhone/.test(userAgent);\n  };\n\n  /**\n   * is iPad\n   *\n   * @static\n   * @method isIPad\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIPad(window.navigator.userAgent) );\n   */\n  platform.isIPad = function isIPad(userAgent) {\n    if (!platform.isIOS(userAgent)) return false;\n\n    return /iPad/.test(userAgent);\n  };\n\n  /**\n   * is Android platform\n   *\n   * @static\n   * @method isAndroid\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\n   */\n  platform.isAndroid = function isAndroid(userAgent) {\n    return /Android/.test(userAgent);\n  };\n\n  /**\n   * is IE browser\n   *\n   * @static\n   * @method isIE\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\n   */\n  browser.isIE = function isIE(userAgent) {\n    return /msie/.test(userAgent) || /trident/.test(userAgent);\n  };\n\n  /**\n   * is Edge browser\n   *\n   * @static\n   * @method isEdge\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\n   */\n  browser.isEdge = function isEdge(userAgent) {\n    return /Gecko/.test(userAgent) && /Edge/.test(userAgent);\n  };\n\n  /**\n   * is Firefox browser\n   *\n   * @static\n   * @method isFF\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\n   */\n  browser.isFF = function isFF(userAgent) {\n    return /Firefox/.test(userAgent);\n  };\n\n  /**\n   * is Opera browser\n   *\n   * @static\n   * @method isOpera\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\n   */\n  browser.isOpera = function isOpera(userAgent) {\n    return /Opera/.test(userAgent) || /OPR\\//.test(userAgent);\n  };\n\n  /**\n   * is Chrome browser (desktop)\n   *\n   * @static\n   * @method isChrome\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\n   */\n  browser.isChrome = function isChrome(userAgent) {\n    if (platform.isAndroid(userAgent) || platform.isIOS(userAgent)) return false;\n\n    return !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/.test(userAgent);\n  };\n\n  /**\n   * is mobile Chrome browser (phone)\n   *\n   * @static\n   * @method isChromePhone\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromePhone(window.navigator.userAgent) );\n   */\n  browser.isChromePhone = function isChromePhone(userAgent) {\n    if (platform.isIPhone(userAgent))\n      return (\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && /CriOS/.test(userAgent) && /Mobile/.test(userAgent)\n      );\n\n    // https://developer.chrome.com/multidevice/user-agent\n    if (platform.isAndroid(userAgent)) return /Chrome\\/[.0-9]* Mobile/.test(userAgent) && /Safari/i.test(userAgent);\n\n    return false;\n  };\n\n  /**\n   * is mobile Chrome browser (tablet)\n   *\n   * @static\n   * @method isChromeTablet\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromeTablet(window.navigator.userAgent) );\n   */\n  browser.isChromeTablet = function isChromeTablet(userAgent) {\n    if (platform.isIPad(userAgent))\n      return (\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && /CriOS/.test(userAgent) && /Mobile/.test(userAgent)\n      );\n\n    // https://developer.chrome.com/multidevice/user-agent\n    if (platform.isAndroid(userAgent)) {\n      return /Chrome\\/[.0-9]* (?!Mobile)/.test(userAgent) && /Safari/i.test(userAgent);\n    }\n\n    return false;\n  };\n\n  /**\n   * is Safari browser (desktop)\n   *\n   * @static\n   * @method isSafari\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\n   */\n  browser.isSafari = function isSafari(userAgent) {\n    if (platform.isIOS(userAgent)) return false;\n\n    return (\n      !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && !/Mobile/.test(userAgent)\n    );\n  };\n\n  /**\n   * is mobile Safari browser (phone)\n   *\n   * @static\n   * @method isSafariPhone\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  browser.isSafariPhone = function isSafariPhone(userAgent) {\n    if (platform.isIPhone(userAgent))\n      return (\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && /Mobile/.test(userAgent)\n      );\n\n    return false;\n  };\n\n  /**\n   * is mobile Safari browser (tablet)\n   *\n   * @static\n   * @method isSafariTablet\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  browser.isSafariTablet = function isSafariTablet(userAgent) {\n    if (platform.isIPad(userAgent))\n      return (\n        !/Chrome/.test(userAgent) && /Safari/.test(userAgent) && !/CriOS/.test(userAgent) && /Mobile/.test(userAgent)\n      );\n\n    return false;\n  };\n\n  /**\n   * get IE version\n   *\n   * @static\n   * @method getIEVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\n   */\n  browser.getIEVersion = function getIEVersion(userAgent) {\n    if (browser.isIE(userAgent)) {\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Firefox version\n   *\n   * @static\n   * @method getFFVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\n   */\n  browser.getFFVersion = function getFFVersion(userAgent) {\n    if (browser.isFF(userAgent)) {\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Opera version\n   *\n   * @static\n   * @method getOperaVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\n   */\n  browser.getOperaVersion = function getOperaVersion(userAgent) {\n    if (browser.isOpera(userAgent)) {\n      if (/Opera/i.test(userAgent)) {\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      }\n\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Chrome version\n   *\n   * @static\n   * @method getChromeVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\n   */\n  browser.getChromeVersion = function getChromeVersion(userAgent) {\n    if (browser.isChrome(userAgent)) {\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Safari version\n   *\n   * @static\n   * @method getSafariVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\n   */\n  browser.getSafariVersion = function getSafariVersion(userAgent) {\n    if (browser.isSafari(userAgent)) {\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get IE browser Compatibility info object\n   *\n   * @static\n   * @method getIECompatibility\n   * @param {String} userAgent (optional)\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\n   * @example\n   * console.log( aid.browser.getIECompatibility() );\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\n   */\n  browser.getIECompatibility = function getIECompatibility(optionUserAgent) {\n    var ua = optionUserAgent ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\n      regex_msie = /msie/i,\n      regex_msie7 = /msie 7/i,\n      regex_msie8 = /msie 8/i,\n      regex_msie9 = /msie 9/i,\n      regex_msie10 = /msie 10/i,\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\n      regex_trident = /trident/i,\n      regex_trident7 = /trident\\/7/;\n\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\n      // not IE\n      return {\n        isIE: false,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1,\n      };\n    }\n\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\n      // IE11 standard\n      return {\n        isIE: true,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1,\n      };\n    }\n\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\n      // IE11 compatibility mode\n      if (regex_msie7.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 7,\n        };\n\n      if (regex_msie8.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 8,\n        };\n\n      if (regex_msie9.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 9,\n        };\n\n      if (regex_msie10.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 10,\n        };\n    }\n\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\n      // IE8 ~ 10 compatibility mode\n      return {\n        isIE: true,\n        isCompatibilityMode: true,\n        compatibilityVersion: 7,\n      };\n    }\n\n    // IE8 ~ 10 standard\n    return {\n      isIE: true,\n      isCompatibilityMode: false,\n      compatibilityVersion: -1,\n    };\n  };\n\n  /**\n   * is browser support draggable attribute of element\n   *\n   * @static\n   * @method isSupportDraggable\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDraggable() );\n   */\n  browser.isSupportDraggable = function isSupportDraggable() {\n    var div = document.createElement('div');\n\n    return 'draggable' in div;\n  };\n\n  /**\n   * is browser support element methods related drag(ondragstart, ondrop, etc...)\n   *\n   * @static\n   * @method isSupportDragAndDrop\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDragAndDrop() );\n   */\n  browser.isSupportDragAndDrop = function isSupportDragAndDrop() {\n    var div = document.createElement('div');\n\n    return 'ondragstart' in div && 'ondrop' in div;\n  };\n\n  /**\n   * is browser support html5 File API\n   *\n   * @static\n   * @method isSupportFileApi\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportFileApi() );\n   */\n  browser.isSupportFileApi = function isSupportFileApi() {\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\n  };\n\n  /**\n   * is chrome extension\n   *\n   * @static\n   * @method isChromeExtension\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\n   */\n  browser.isChromeExtension = function isChromeExtension(userAgent) {\n    if (browser.isChrome(userAgent) && global.chrome) {\n      if (!global.chrome.cookies) {\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\n      }\n\n      if (global.chrome.cookies) return true;\n\n      return false;\n    }\n\n    return false;\n  };\n\n  /**\n   * can use DOM\n   *\n   * @static\n   * @method canUseDOM\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.canUseDOM() );\n   */\n  browser.canUseDOM = function canUseDOM() {\n    return aid.truthy(typeof window !== 'undefined' && window.document && window.document.createElement);\n  };\n\n  /**\n   * get cookie\n   *\n   * @static\n   * @method getCookie\n   * @param {String} key\n   * @returns {String} return string\n   * @example\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\n   */\n  browser.getCookie = function getCookie(key) {\n    var cookieArr = document.cookie.split('; '),\n      splitArr = [],\n      keyStr = '',\n      valueStr = '';\n\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\n      splitArr = cookieArr[i].split('=');\n      keyStr = splitArr[0];\n      valueStr = global.decodeURIComponent(splitArr[1]);\n\n      if (keyStr === key) return valueStr;\n    }\n\n    return null;\n  };\n\n  /**\n   * set cookie\n   *\n   * @static\n   * @method setCookie\n   * @param {String} key\n   * @param {String} value\n   * @param {Number} expireSecond\n   * @param {String} path\n   * @param {String} domain\n   * @example\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\n   */\n  browser.setCookie = function setCookie(key, value, expireSecond, path, domain) {\n    var expires = '',\n      pathStr = '; path=' + (path ? path : '/'),\n      domainStr = domain ? '; domain=' + domain : '';\n\n    if (expireSecond) {\n      var date = new Date();\n      date.setTime(date.getTime() + expireSecond * 1000);\n\n      expires = '; expires=' + date.toGMTString();\n    }\n\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\n  };\n\n  /**\n   * trim string\n   *\n   * @static\n   * @method trim\n   * @param {String} str\n   * @returns {String} return trimmed string\n   * @example\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\n   */\n  string.trim = function trim(str) {\n    if (!aid.isString(str)) throw new TypeError('[aid.string.trim] Type of str parameter must be String.');\n\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n\n  /**\n   * check string has unique characters\n   *\n   * @static\n   * @method hasUniqueChars\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\n   */\n  string.hasUniqueChars = function hasUniqueChars(str) {\n    if (!aid.isString(str)) throw new TypeError('[aid.string.hasUniqueChars] Type of str parameter must be String.');\n\n    if (!str.length) return true;\n\n    var obj = {},\n      char = '';\n    for (var i = 0, max = str.length; i < max; i++) {\n      char = str.charAt(i);\n\n      if (obj[char] === true) return false;\n      obj[char] = true;\n    }\n\n    return true;\n  };\n\n  /**\n   * get extension(png, jpg ...) string\n   *\n   * @static\n   * @method getFileExtension\n   * @param {String} fileName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\n   */\n  string.getFileExtension = function getFileExtension(fileName) {\n    if (!aid.isString(fileName))\n      throw new TypeError('[aid.string.getFileExtension] Type of fileName parameter must be String.');\n\n    if (fileName.length <= 0) return '';\n\n    var lastDotIndex = fileName.lastIndexOf('.'),\n      extension = fileName.substr(lastDotIndex + 1);\n\n    return extension;\n  };\n\n  /**\n   * check email string\n   *\n   * @static\n   * @method isEmail\n   * @param {String} email\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\n   */\n  string.isEmail = function isEmail(email) {\n    if (!aid.isString(email)) throw new TypeError('[aid.string.isEmail] Type of email parameter must be String.');\n\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n    var emailRegex = new RegExp(\n      \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n    );\n    return emailRegex.exec(email) ? true : false;\n  };\n\n  /**\n   * check iframe string\n   *\n   * @static\n   * @method isIFrame\n   * @param {String} iframeHtml\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\n   */\n  string.isIFrame = function isIFrame(iframeHtml) {\n    if (!aid.isString(iframeHtml))\n      throw new TypeError('[aid.string.isIFrame] Type of iframeHtml parameter must be String.');\n\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeHtml);\n  };\n\n  /**\n   * get param value from uri\n   *\n   * @static\n   * @method getUriParam\n   * @param {String} uri\n   * @param {String} parameterName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\n   */\n  string.getUriParam = function getUriParam(uri, parameterName) {\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\n      throw new TypeError('[aid.string.getUriParam] Type of uri, parameterName parameters must be String.');\n    }\n\n    if (uri.length < 1) return '';\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return '';\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    for (var param = '', eqIndex = -1, keyStr = '', valueStr = '', i = 0, max = params.length; i < max; ++i) {\n      param = params[i];\n\n      eqIndex = param.indexOf('=');\n      if (eqIndex >= 0) {\n        keyStr = param.substr(0, eqIndex);\n        valueStr = param.substr(eqIndex + 1);\n\n        if (keyStr === parameterName) return valueStr;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * get param values from uri\n   *\n   * @static\n   * @method getUriParams\n   * @param {String} uri\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\n   */\n  string.getUriParams = function getUriParams(uri) {\n    if (!aid.isString(uri)) throw new TypeError('[aid.string.getUriParam] Type of uri parameter must be String.');\n\n    if (uri.length < 1) return null;\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return null;\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    if (params.length <= 0) return null;\n\n    var obj = {};\n    for (var param = '', eqIndex = -1, keyStr = '', valueStr = '', i = 0, max = params.length; i < max; ++i) {\n      param = params[i];\n\n      eqIndex = param.indexOf('=');\n      if (eqIndex >= 0) {\n        keyStr = param.substr(0, eqIndex);\n        valueStr = param.substr(eqIndex + 1);\n\n        if (keyStr) obj[keyStr] = valueStr;\n      }\n    }\n\n    if (aid.object.isEmpty(obj)) return null;\n\n    return obj;\n  };\n\n  /**\n   * get uri combined parameters\n   *\n   * @static\n   * @method getUriCombinedParams\n   * @param {String} uri\n   * @param {Object} parameters\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\n   */\n  string.getUriCombinedParams = function getUriCombinedParams(uri, parameters) {\n    if (!aid.isString(uri))\n      throw new TypeError('[aid.string.getUriCombinedParams] Type of uri parameter must be String.');\n\n    if (!aid.isObject(parameters))\n      throw new TypeError('[aid.string.getUriCombinedParams] Type of parameters parameter must be Object.');\n\n    if (!uri) return '';\n    if (!parameters) return uri;\n\n    var str = '';\n    for (var key in parameters) {\n      if (_hasOwnProperty.call(parameters, key)) str += '&' + key + '=' + String(parameters[key]);\n    }\n\n    if (str === '') return uri;\n\n    var tmpArr = uri.split('#'),\n      hashStr = aid.isDefined(tmpArr[1]) && tmpArr[1].length ? '#' + tmpArr[1] : '';\n\n    uri = tmpArr[0];\n    uri = (uri.indexOf('?') >= 0 ? uri + str : uri + '?' + str.substr(1)) + hashStr;\n\n    return uri;\n  };\n\n  /**\n   * check youtube video id\n   *\n   * @static\n   * @method isValidYoutubeVideoId\n   * @param {String} youtubeId\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\n   */\n  string.isValidYoutubeVideoId = function isValidYoutubeVideoId(youtubeId) {\n    if (!aid.isString(youtubeId))\n      throw new TypeError('[aid.string.isValidYoutubeVideoId] Type of youtubeId parameter must be String.');\n\n    var regex = /^(\\w|-|_){11}$/;\n    return regex.exec(youtubeId) ? true : false;\n  };\n\n  /**\n   * check youtube uri is valid\n   *\n   * @static\n   * @method getObjCheckYoutubeURI\n   * @param {String} uri\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\n   * @example\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   */\n  string.getObjCheckYoutubeURI = function getObjCheckYoutubeURI(uri) {\n    if (!aid.isString(uri))\n      throw new TypeError('[aid.string.getObjCheckYoutubeURI] Type of uri parameter must be String.');\n\n    var YOUTUBE_REGEXES = {\n      watch: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\n      embed: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\n      v: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/,\n    };\n\n    var uriType = null;\n    for (var key in YOUTUBE_REGEXES) {\n      var val = YOUTUBE_REGEXES[key];\n      if (!val) continue;\n\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        break;\n      }\n    }\n\n    var youtubeId = '',\n      tmpArr = [];\n    switch (uriType) {\n      case 'watch':\n        youtubeId = string.getUriParam(uri, 'v') || '';\n        break;\n\n      case 'embed':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'v':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'youtu.be':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      default:\n    }\n\n    var isValidURI = youtubeId !== '' && string.isValidYoutubeVideoId(youtubeId);\n\n    return {\n      type: 'youtube',\n      uri: uri,\n      youtubeId: youtubeId,\n      isValidURI: isValidURI,\n    };\n  };\n\n  /**\n   * check twitch uri is valid\n   *\n   * @static\n   * @method getObjCheckTwitchURI\n   * @param {String} uri\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\n   * @example\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   */\n  string.getObjCheckTwitchURI = function getObjCheckTwitchURI(uri) {\n    /*\n     + Live Video\n     https://www.twitch.tv/surrenderhs // channel link\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\n\n     + Past Video\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\n\n     + URI TEST\n     https://www.twitch.tv/surrenderhs\n     www.twitch.tv/surrenderhs\n     twitch.tv/surrenderhs\n     https://player.twitch.tv/?channel=surrenderhs\n     player.twitch.tv/?channel=surrenderhs\n     https://www.twitch.tv/surrenderhs/v/56097351\n     www.twitch.tv/surrenderhs/v/56097351\n     https://player.twitch.tv/?video=v56097351\n     player.twitch.tv/?video=v56097351\n     */\n\n    if (!aid.isString(uri))\n      throw new TypeError('[aid.string.getObjCheckTwitchURI] Type of uri parameter must be String.');\n\n    var TWITCH_REGEXES = {\n      liveChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\n      liveVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\n      chatting: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\n      pastChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\n      pastVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/,\n    };\n\n    var channelName = '',\n      videoId = '',\n      isChatting = false,\n      isValidURI = false;\n\n    var uriType = null;\n    for (var key in TWITCH_REGEXES) {\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\n      if (!val) continue;\n\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        isValidURI = true;\n        break;\n      }\n    }\n\n    var tmpArr = [];\n    switch (uriType) {\n      // https://www.twitch.tv/surrenderhs\n      case 'liveChannel':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://player.twitch.tv/?channel=surrenderhs\n      case 'liveVideo':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://www.twitch.tv/surrenderhs/chat?popout=\n      case 'chatting':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        isChatting = true;\n        break;\n\n      // https://www.twitch.tv/surrenderhs/v/56097351\n      case 'pastChannel':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        videoId = tmpArr[2];\n        break;\n\n      // https://player.twitch.tv/?video=v56097351\n      case 'pastVideo':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        videoId = tmpArr[1];\n        break;\n\n      default:\n    }\n\n    isValidURI = channelName || videoId ? true : false;\n\n    return {\n      type: 'twitch',\n      uri: uri,\n      channelName: channelName,\n      videoId: videoId,\n      isChatting: isChatting,\n      isValidURI: isValidURI,\n    };\n  };\n\n  /**\n   * get prefixed document property string\n   *\n   * @static\n   * @method getDocumentPrefixedProperty\n   * @param {String} propertyName\n   * @param {Boolean} isPropertyFirstCharToUpperCase\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\n   */\n  string.getDocumentPrefixedProperty = function getDocumentPrefixedProperty(\n    propertyName,\n    isPropertyFirstCharToUpperCase\n  ) {\n    if (!aid.isString(propertyName))\n      throw new TypeError('[aid.string.getDocumentPrefixedProperty] Type of propertyName parameter must be String.');\n\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\n      throw new TypeError(\n        '[aid.string.getDocumentPrefixedProperty] Type of isPropertyFirstCharToUpperCase parameter must be Boolean.'\n      );\n\n    if (propertyName in global.document) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in document) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * get prefixed element style property string\n   *\n   * @static\n   * @method getElementPrefixedStyle\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\n   */\n  string.getElementPrefixedStyle = function getElementPrefixedStyle(propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName))\n      throw new TypeError('[aid.string.getElementPrefixedStyle] Type of propertyName parameter must be String.');\n\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\n      throw new TypeError(\n        '[aid.string.getElementPrefixedStyle] Type of isPropertyFirstCharToUpperCase parameter must be Boolean.'\n      );\n\n    var style = global.document.createElement('div').style;\n    if (propertyName in style) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in style) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * get string removed no content elements from html\n   *\n   * @static\n   * @method removeNoContentElements\n   * @param {String} html\n   * @param (Boolean) withWhitespaceContent (optional)\n   * @returns {String} return html string\n   * @example\n   * console.log( aid.string.removeNoContentElements('<div><span>foo</span><p></p><em> </em></div>') ); // '<div><span>foo</span><em> </em></div>'\n   * console.log( aid.string.removeNoContentElements('<div><span>foo</span><p></p><em> </em></div>', true) ); // '<div><span>foo</span></div>'\n   */\n  string.removeNoContentElements = function removeNoContentElements(html, withWhitespaceContent) {\n    if (!aid.isString(html))\n      throw new TypeError('[aid.string.removeNoContentElements] Type of html parameter must be String.');\n\n    if (aid.isDefined(withWhitespaceContent)) {\n      // withWhitespaceContent parameter is defined\n      if (!aid.isBoolean(withWhitespaceContent))\n        throw new TypeError(\n          '[aid.string.removeNoContentElements] Type of withWhitespaceContent parameter must be Boolean.'\n        );\n    }\n\n    var regex = withWhitespaceContent ? /<([^>]+)>\\s*<\\/\\1>/g : /<([^>]+)><\\/\\1>/g;\n    return html.replace(regex, '');\n  };\n\n  /**\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\n   *\n   * @static\n   * @method absentToEmpty\n   * @param {String} absentableStr\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\n   */\n  string.absentToEmpty = function absentToEmpty(absentableStr) {\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\n\n    return absentableStr;\n  };\n\n  /**\n   * convert number to string type with commas\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n   *\n   * @static\n   * @method numberWithCommas\n   * @param {Number} number\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.numberWithCommas(1000000) ); // '1,000,000'\n   */\n  string.numberWithCommas = function numberWithCommas(number) {\n    if (!aid.isInteger(number))\n      throw new TypeError('[aid.string.numberWithCommas] Type of number parameter must be Integer Number.');\n\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  /**\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }\n   *\n   * @static\n   * @method getPositionFromTranslateStr\n   * @param {String} str\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px)') ); // {x: 99, y: 0}\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px, 999px)') ); // {x: 99, y: 999}\n   * console.log( aid.string.getPositionFromTranslateStr('translateX(99px)') ); // {x: 99, y: 0}\n   * console.log( aid.string.getPositionFromTranslateStr('translateY(99px)') ); // {x: 0, y: 99}\n   */\n  string.getPositionFromTranslateStr = function getPositionFromTranslateStr(str) {\n    if (!aid.isString(str))\n      throw new TypeError('[aid.string.getPositionFromTranslateStr] Type of str parameter must be String.');\n\n    var obj = {\n      x: 0,\n      y: 0,\n    };\n    if (!aid.isDefined(str)) return obj;\n\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\n    if (values.length <= 0) return obj;\n\n    if (/translateX/g.test(str)) {\n      obj.x = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    if (/translateY/g.test(str)) {\n      obj.y = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    obj.x = parseFloat(values[0], 10);\n    if (values.length > 1) obj.y = parseFloat(values[1], 10);\n\n    return obj;\n  };\n\n  /**\n   * get flag string is palindrome\n   *\n   * @static\n   * @method isPalindrome\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\n   * console.log( aid.string.isPalindrome('motor') ); // false\n   */\n  string.isPalindrome = function isPalindrome(str) {\n    if (!aid.isString(str)) throw new TypeError('[aid.string.isPalindrome] Type of str parameter must be String.');\n\n    if (str.length <= 1) return true;\n\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\n\n    return aid.string.isPalindrome(str.slice(-1, 1));\n  };\n\n  /**\n   * get flag string is decoded\n   *\n   * @static\n   * @method isDecoded\n   * @param {String} str\n   * @param {Function} decodeFunc (optional)\n   * @returns {(Boolean|Error)} return boolean\n   * @example\n   * console.log( aid.isError(aid.string.isDecoded('%%%%%%%%%')) ); // true\n   * console.log( aid.string.isDecoded('エイド') ); // true\n   * console.log( aid.string.isDecoded(encodeURIComponent('エイド')) ); // false\n   */\n  string.isDecoded = function isDecoded(str, decodeFunc) {\n    var decodeFn = global.decodeURIComponent;\n\n    if (!aid.isString(str)) {\n      throw new TypeError('[aid.string.isDecoded] Type of str parameter must be String.');\n    }\n\n    if (aid.isDefined(decodeFunc)) {\n      // decodeFunc parameter is defined\n      if (!aid.isFunction(decodeFunc)) {\n        throw new TypeError('[aid.string.isDecoded] Type of decodeFunc parameter must be Function.');\n      }\n\n      decodeFn = decodeFunc;\n    } else {\n      if (!aid.isFunction(decodeFn)) {\n        // no decodeURIComponent function and no decodeFunc parameter\n        throw new TypeError('[aid.string.isDecoded] Type of decodeFunc parameter must be defined.');\n      }\n    }\n\n    var decodedStr = '';\n    try {\n      decodedStr = decodeFn.call(null, str);\n    } catch (error) {\n      return error;\n    }\n\n    if (decodedStr === str) return true;\n\n    return false;\n  };\n\n  /**\n   * get decoded string\n   *\n   * @static\n   * @method decodeRecursively\n   * @param {String} str\n   * @param {Function} decodeFunc (optional)\n   * @returns {(String|Error)} return string\n   * @example\n   * console.log( aid.string.decodeRecursively(encodeURIComponent(encodeURIComponent('エイド'))) ); // 'エイド'\n   */\n  string.decodeRecursively = function decodeRecursively(str, decodeFunc) {\n    var decodeFn = global.decodeURIComponent;\n\n    if (!aid.isString(str)) {\n      throw new TypeError('[aid.string.decodeRecursively] Type of str parameter must be String.');\n    }\n\n    if (aid.isDefined(decodeFunc)) {\n      // decodeFunc parameter is defined\n      if (!aid.isFunction(decodeFunc)) {\n        throw new TypeError('[aid.string.decodeRecursively] Type of decodeFunc parameter must be Function.');\n      }\n\n      decodeFn = decodeFunc;\n    } else {\n      if (!aid.isFunction(decodeFn)) {\n        // no decodeURIComponent function and no decodeFunc parameter\n        throw new TypeError('[aid.string.decodeRecursively] Type of decodeFunc parameter must be defined.');\n      }\n    }\n\n    var decodedStr = '';\n    try {\n      decodedStr = decodeFn.call(null, str);\n    } catch (error) {\n      return error;\n    }\n\n    if (decodedStr !== str) {\n      return decodeRecursively(decodedStr, decodeFn);\n    }\n\n    return decodedStr;\n  };\n\n  /**\n   * get aspectFill content size\n   *\n   * @static\n   * @method getSizeAspectFill\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fillWidth\n   * @param {Number} fillHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFill = function getSizeAspectFill(srcWidth, srcHeight, fillWidth, fillHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fillWidth) || !isNumber(fillHeight)) {\n      throw new TypeError('[aid.math.getSizeAspectFill] Type of parameters must be Number.');\n    }\n\n    var modifiedSizeW = fillWidth,\n      modifiedSizeH = Math.ceil((fillWidth / srcWidth) * srcHeight);\n\n    if (modifiedSizeH < fillHeight) {\n      modifiedSizeW = Math.ceil((fillHeight / srcHeight) * srcWidth);\n      modifiedSizeH = fillHeight;\n    }\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH,\n    };\n  };\n\n  /**\n   * get aspectFit content size\n   *\n   * @static\n   * @method getSizeAspectFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @param {Number} fitHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFit = function getSizeAspectFit(srcWidth, srcHeight, fitWidth, fitHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth) || !isNumber(fitHeight)) {\n      throw new TypeError('[aid.math.getSizeAspectFit] Type of parameters must be Number.');\n    }\n\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH,\n    };\n  };\n\n  /**\n   * get widthFit content size\n   *\n   * @static\n   * @method getSizeWidthFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\n   */\n  math.getSizeWidthFit = function getSizeWidthFit(srcWidth, srcHeight, fitWidth) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth)) {\n      throw new TypeError('[aid.math.getSizeWidthFit] Type of parameters must be Number.');\n    }\n\n    var modifiedSizeW = fitWidth,\n      modifiedSizeH = Math.ceil((fitWidth / srcWidth) * srcHeight);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH,\n    };\n  };\n\n  /**\n   * get flag whether 2 numbers are equal by Number.EPSILON (2.220446049250313e-16)\n   *\n   * @static\n   * @method isEpsilonEqual\n   * @param {Number} number_a\n   * @param {Number} number_b\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\n   */\n  math.isEpsilonEqual = function isEpsilonEqual(number_a, number_b) {\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\n      throw new TypeError('[aid.math.isEpsilonEqual] Type of parameters must be Number.');\n    }\n\n    var epsilon = aid.isDefined(Number.EPSILON) ? Number.EPSILON : 2.220446049250313e-16;\n\n    return Math.abs(number_a - number_b) < epsilon;\n  };\n\n  /**\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\n   * value increases from startIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1.\n   * if searchIndex in values, return true.\n   * otherwise, return false.\n   *\n   * @static\n   * @method isIndexInLoop\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @param {Number} searchIndex\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\n   */\n  math.isIndexInLoop = function isIndexInLoop(totalLength, loopGap, firstIndex, searchIndex) {\n    if (arguments.length < 4) throw new Error('[aid.math.isIndexInLoop] Requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex) || !isInteger(searchIndex)) {\n      throw new TypeError('[aid.math.isIndexInLoop] Type of parameters must be Number.');\n    }\n\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('[aid.math.isIndexInLoop] totalLength, firstIndex parameters cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength) {\n      throw new Error('[aid.math.isIndexInLoop] loopGap parameter cannot bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap; i++) {\n      if (index === searchIndex) return true;\n      index = index + 1 > totalLength ? 1 : index + 1;\n    }\n\n    return false;\n  };\n\n  /**\n   * get looped index from firstIndex in 1 ~ totalLength.\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1. and, return value.\n   *\n   * @static\n   * @method getLoopedLastIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\n   */\n  math.getLoopedLastIndex = function getLoopedLastIndex(totalLength, loopGap, firstIndex) {\n    if (arguments.length < 3) throw new Error('[aid.math.getLoopedLastIndex] Requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex)) {\n      throw new TypeError('[aid.math.getLoopedLastIndex] Type of parameters must be Integer Number.');\n    }\n\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('[aid.math.getLoopedLastIndex] totalLength, firstIndex parameters cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength || firstIndex > totalLength) {\n      throw new Error(\n        '[aid.math.getLoopedLastIndex] loopGap, firstIndex parameters cannot bigger than totalLength parameter.'\n      );\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = index + 1 > totalLength ? 1 : index + 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\n   * if value is smaller than 0, change value to totalLength. and return value.\n   *\n   * @static\n   * @method getReverseLoopedFirstIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\n   */\n  math.getReverseLoopedFirstIndex = function getReverseLoopedFirstIndex(totalLength, loopGap, lastIndex) {\n    if (arguments.length < 3) throw new Error('[aid.math.getReverseLoopedFirstIndex] Requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(lastIndex)) {\n      throw new TypeError('[aid.math.getReverseLoopedFirstIndex] Type of parameters must be Integer Number.');\n    }\n\n    if (totalLength < 1 || lastIndex < 1) {\n      throw new Error('[aid.math.getReverseLoopedFirstIndex] totalLength, lastIndex parameters cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength || lastIndex > totalLength) {\n      throw new Error(\n        '[aid.math.getReverseLoopedFirstIndex] loopGap, lastIndex parameters cannot bigger than totalLength parameter.'\n      );\n    }\n\n    var index = lastIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = index - 1 < 1 ? totalLength : index - 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get factorial value\n   *\n   * @static\n   * @method factorial\n   * @param {Number} Int number\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.factorial(-99) ); // 1\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\n   */\n  math.factorial = function factorial(number) {\n    if (!aid.isInteger(number)) throw new TypeError('[aid.math.factorial] Type of parameters must be Integer Number.');\n\n    if (number < 1) return 1;\n    return number * aid.math.factorial(number - 1);\n  };\n\n  /**\n   * get board pagination info object\n   *\n   * @static\n   * @method getObjForPagination\n   * @param {Number} totalPostNum\n   * @param {Number} displayPostNumPerPage\n   * @param {Number} displayPaginationBtnNum\n   * @param {Number} pageIndex\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.math.getObjForPagination(39, 10, 5, 1) ); // {totalPostNum: 39, displayPostNumPerPage: 10, displayPaginationBtnNum: 5, pageIndex: 1, totalPageNum: 4, prevPageIndex: 0, firstPageIndex: 1, lastPageIndex: 4, nextPageIndex: 0}\n   */\n  math.getObjForPagination = function getObjForPagination(\n    totalPostNum,\n    displayPostNumPerPage,\n    displayPaginationBtnNum,\n    pageIndex\n  ) {\n    if (arguments.length < 4) throw new Error('[aid.math.getObjForPagination] Requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (\n      !isInteger(totalPostNum) ||\n      !isInteger(displayPostNumPerPage) ||\n      !isInteger(displayPaginationBtnNum) ||\n      !isInteger(pageIndex)\n    ) {\n      throw new TypeError('[aid.math.getObjForPagination] Type of parameters must be Integer Number.');\n    }\n\n    if (totalPostNum <= 0 || displayPostNumPerPage <= 0 || displayPaginationBtnNum <= 0 || pageIndex <= 0) {\n      throw new TypeError('[aid.math.getObjForPagination] Type of parameters must be positive Integer Number.');\n    }\n\n    var totalPageNum = Math.ceil(totalPostNum / displayPostNumPerPage);\n    if (pageIndex < 1) pageIndex = 1;\n    if (pageIndex > totalPageNum) pageIndex = totalPageNum;\n\n    var paginationBtnGroupIndex = Math.floor((pageIndex - 1) / displayPaginationBtnNum),\n      prevPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum,\n      firstPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum + 1,\n      lastPageIndex = firstPageIndex + displayPaginationBtnNum - 1,\n      nextPageIndex = lastPageIndex + 1;\n\n    if (lastPageIndex > totalPageNum) lastPageIndex = totalPageNum;\n    if (nextPageIndex > totalPageNum) nextPageIndex = 0;\n\n    return {\n      totalPostNum: totalPostNum,\n      displayPostNumPerPage: displayPostNumPerPage,\n      displayPaginationBtnNum: displayPaginationBtnNum,\n      pageIndex: pageIndex,\n\n      totalPageNum: totalPageNum,\n      prevPageIndex: prevPageIndex,\n      firstPageIndex: firstPageIndex,\n      lastPageIndex: lastPageIndex,\n      nextPageIndex: nextPageIndex,\n    };\n  };\n\n  /**\n   * convert degree to radian\n   *\n   * @static\n   * @method degreeToRadian\n   * @param {Number} degree\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.degreeToRadian(90) ); // 1.5707963267948966\n   */\n  math.degreeToRadian = function degreeToRadian(degree) {\n    if (!aid.isNumber(degree))\n      throw new TypeError('[aid.math.degreeToRadian] Type of degree parameter must be Number.');\n\n    return (degree * Math.PI) / 180;\n  };\n\n  /**\n   * convert radian to radian\n   *\n   * @static\n   * @method radianToDegree\n   * @param {Number} radian\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.radianToDegree(1.5707963267948966) ); // 90\n   */\n  math.radianToDegree = function radianToDegree(radian) {\n    if (!aid.isNumber(radian))\n      throw new TypeError('[aid.math.radianToDegree] Type of degree parameter must be Number.');\n\n    return (radian * 180) / Math.PI;\n  };\n\n  /**\n   * get height of right triangle from base line width, acute angle\n   *\n   * @static\n   * @method getHeightOfRightTriangle\n   * @param {Number} baseLineWidth\n   * @param {Number} acuteAngleDegree\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.getHeightOfRightTriangle(100, 30) ); // 57.73502691896256\n   */\n  math.getHeightOfRightTriangle = function getHeightOfRightTriangle(baseLineWidth, acuteAngleDegree) {\n    if (!aid.isNumber(baseLineWidth) || !aid.isNumber(acuteAngleDegree)) {\n      throw new TypeError('[aid.math.getHeightOfRightTriangle] Type of parameters must be Number.');\n    }\n\n    if (acuteAngleDegree >= 90)\n      throw new Error(\n        '[aid.math.getHeightOfRightTriangle] acuteAngleDegree parameter cannot greater than or equal to 90.'\n      );\n\n    return baseLineWidth * Math.tan(math.degreeToRadian(acuteAngleDegree));\n  };\n\n  /**\n   * get distance between two points\n   *\n   * @static\n   * @method getDistanceBetweenTwoPoints\n   * @param {Object} point1\n   * @param {Object} point2\n   * @returns {Number} return number\n   * @example\n   * var point1 = {x: 0, y: 0}\n   * var point2 = {x: 100, y: 100};\n   * console.log( aid.math.getDistanceBetweenTwoPoints(point1, point2) ); // 141.4213562373095\n   */\n  math.getDistanceBetweenTwoPoints = function getDistanceBetweenTwoPoints(point1, point2) {\n    if (!aid.isObject(point1) || !aid.isObject(point2)) {\n      throw new TypeError('[aid.math.getDistanceBetweenTwoPoints] Type of parameters must be Object.');\n    }\n\n    var isNumber = aid.isNumber;\n    if (!isNumber(point1.x) || !isNumber(point1.y) || !isNumber(point2.x) || !isNumber(point2.y)) {\n      throw new TypeError(\n        '[aid.math.getDistanceBetweenTwoPoints] Type of parameters must be Object that has x, y properties.'\n      );\n    }\n\n    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n\n    return distance;\n  };\n\n  /**\n   * get orthogonal point between line and some point\n   *\n   * @static\n   * @method getOrthogonalPointBetweenLineAndSomePoint\n   * @param {Object} collinearPoint1\n   * @param {Object} collinearPoint2\n   * @param {Object} somePoint\n   * @returns {Object} return object\n   * @example\n   * var collinearPoint1 = {x: 0, y: 0};\n   * var collinearPoint2 = {x: 100, y: 100};\n   * var somePoint = {x: 50, y: 100};\n   * console.log( aid.math.getOrthogonalPointBetweenLineAndSomePoint(collinearPoint1, collinearPoint2, somePoint) ); // {x: 75, y: 75}\n   */\n  math.getOrthogonalPointBetweenLineAndSomePoint = function getOrthogonalPointBetweenLineAndSomePoint(\n    collinearPoint1,\n    collinearPoint2,\n    somePoint\n  ) {\n    var isObject = aid.isObject;\n    if (!isObject(collinearPoint1) || !isObject(collinearPoint2) || !isObject(somePoint)) {\n      throw new TypeError('[aid.math.getOrthogonalPointBetweenLineAndSomePoint] Type of parameters must be Object.');\n    }\n\n    var isNumber = aid.isNumber;\n    if (\n      !isNumber(collinearPoint1.x) ||\n      !isNumber(collinearPoint1.y) ||\n      !isNumber(collinearPoint2.x) ||\n      !isNumber(collinearPoint2.y) ||\n      !isNumber(somePoint.x) ||\n      !isNumber(somePoint.y)\n    ) {\n      throw new TypeError(\n        '[aid.math.getOrthogonalPointBetweenLineAndSomePoint] Type of parameters must be Object that has x, y properties.'\n      );\n    }\n\n    if (collinearPoint1.x === collinearPoint2.x && collinearPoint1.y === collinearPoint2.y) {\n      // collinearPoint1 is equal to collinearPoint2. no line.\n      return null;\n    }\n\n    var diffX = collinearPoint2.x - collinearPoint1.x,\n      diffY = collinearPoint2.y - collinearPoint1.y;\n\n    if (diffX === 0)\n      return {\n        x: collinearPoint1.x,\n        y: somePoint.y,\n      };\n\n    if (diffY === 0)\n      return {\n        x: somePoint.x,\n        y: collinearPoint1.y,\n      };\n\n    var lineSlope = diffY / diffX,\n      somePointLineSlope = -1 / lineSlope;\n\n    var orthogonalPoint = {};\n    orthogonalPoint.x =\n      (somePointLineSlope * somePoint.x - lineSlope * collinearPoint1.x + collinearPoint1.y - somePoint.y) /\n      (somePointLineSlope - lineSlope);\n    orthogonalPoint.y = somePointLineSlope * (orthogonalPoint.x - somePoint.x) + somePoint.y;\n\n    return orthogonalPoint;\n  };\n\n  /**\n   * getRandomPositiveNegative\n   *\n   * @static\n   * @method getRandomPositiveNegative\n   * @returns {Number} return Number\n   * @example\n   * console.log( aid.math.getRandomPositiveNegative() ); // -1 or 1\n   */\n  math.getRandomPositiveNegative = function getRandomPositiveNegative() {\n    return Math.round(Math.random()) > 0 ? 1 : -1;\n  };\n\n  /**\n   * getRandomFloat\n   *\n   * @static\n   * @method getRandomFloat\n   * @param {Number} min\n   * @param {Number} max\n   * @returns {Number} return Number\n   * @example\n   * console.log( aid.math.getRandomFloat(-99.999, 99.999) ); // -99.999 <= aid.math.getRandomFloat(-99.999, 99.999) < 99.999\n   */\n  math.getRandomFloat = function getRandomFloat(min, max) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(min) || !isNumber(max)) {\n      throw new TypeError('[aid.math.getRandomFloat] Type of parameters must be Number.');\n    }\n\n    return min + Math.random() * (max - min);\n  };\n\n  /**\n   * getRandomInt\n   *\n   * @static\n   * @method getRandomInt\n   * @param {Number} minInt\n   * @param {Number} maxInt\n   * @returns {Number} return Number\n   * @example\n   * console.log( aid.math.getRandomInt(-99, 99) ); // -99 ~ 99\n   */\n  math.getRandomInt = function getRandomInt(minInt, maxInt) {\n    var isInteger = aid.isInteger;\n    if (!isInteger(minInt) || !isInteger(maxInt)) {\n      throw new TypeError('[aid.math.getRandomInt] Type of parameters must be Integer Number.');\n    }\n\n    return minInt + Math.floor(Math.random() * (maxInt - minInt + 1));\n  };\n\n  /**\n   * remap\n   *\n   * @static\n   * @method remap\n   * @param {Number} target\n   * @param {Number} min\n   * @param {Number} max\n   * @param {Number} remapedMin\n   * @param {Number} remapedMax\n   * @returns {Number} return Number\n   * @example\n   * console.log( aid.math.remap(0.5, 0, 1, 0, 100) ); // 50\n   */\n  math.remap = function remap(target, min, max, remapedMin, remapedMax) {\n    var isNumber = aid.isNumber;\n\n    if (!isNumber(target) || !isNumber(min) || !isNumber(max) || !isNumber(remapedMin) || !isNumber(remapedMax)) {\n      throw new TypeError('[aid.math.remap] Type of parameters must be Number.');\n    }\n\n    return ((target - min) / (max - min)) * (remapedMax - remapedMin) + remapedMin;\n  };\n\n  /**\n   * greater than\n   *\n   * @static\n   * @method gt\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.gt(1)(9) ); // true\n   */\n  math.gt = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\n      throw new TypeError('[aid.math.gt] Type of parameters must be Number.');\n\n    return lhs > rhs;\n  });\n\n  /**\n   * less than\n   *\n   * @static\n   * @method lt\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.lt(9)(1) ); // true\n   */\n  math.lt = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\n      throw new TypeError('[aid.math.lt] Type of parameters must be Number.');\n\n    return lhs < rhs;\n  });\n\n  /**\n   * greater than equal\n   *\n   * @static\n   * @method gte\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.gte(1)(1) ); // true\n   * console.log( aid.math.gte(1)(9) ); // true\n   */\n  math.gte = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\n      throw new TypeError('[aid.math.gte] Type of parameters must be Number.');\n\n    return lhs >= rhs;\n  });\n\n  /**\n   * less than equal\n   *\n   * @static\n   * @method lte\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.lte(1)(1) ); // true\n   * console.log( aid.math.lte(9)(1) ); // true\n   */\n  math.lte = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs)))\n      throw new TypeError('[aid.math.lte] Type of parameters must be Number.');\n\n    return lhs <= rhs;\n  });\n\n  /**\n   * days name\n   *\n   * @static\n   * @property date.DAYS\n   * @returns {Array} return array\n   * @example\n   */\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  /**\n   * months name\n   *\n   * @static\n   * @property date.MONTHS\n   * @returns {Array} return array\n   * @example\n   */\n  date.MONTHS = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  /**\n   * 1 minutes to second unit (60 sec)\n   *\n   * @static\n   * @property date.MIN_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.MIN_TO_SEC = 60;\n\n  /**\n   * 1 hour to second unit (60 * 60 = 3600 sec)\n   *\n   * @static\n   * @property date.HOUR_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.HOUR_TO_SEC = 3600;\n\n  /**\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\n   *\n   * @static\n   * @property date.DAY_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.DAY_TO_SEC = 86400;\n\n  /**\n   * equal to Array.indexOf\n   *\n   * @static\n   * @method indexOf\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\n   */\n  array.indexOf = function indexOf(arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('[aid.math.indexOf] Type of arr parameters must be Array.');\n\n    for (var i = 0, max = arr.length; i < max; ++i) {\n      if (arr[i] === target) return i;\n    }\n\n    return -1;\n  };\n\n  /**\n   * get index of minimum number in Array\n   *\n   * @static\n   * @method indexOfMin\n   * @param {Array} arr\n   * @param {Number} startSearchIndex\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\n   */\n  array.indexOfMin = function indexOfMin(arr, startSearchIndex) {\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\n\n    var startIndex = startSearchIndex > 0 ? startSearchIndex : 0;\n    if (arr.length <= startIndex) return -1;\n\n    var minVal = arr[startIndex],\n      minIndex = startIndex;\n\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\n      if (arr[i] < minVal) {\n        minVal = arr[i];\n        minIndex = i;\n      }\n    }\n\n    return minIndex;\n  };\n\n  /**\n   * swap two elements in Array\n   *\n   * @static\n   * @method swap\n   * @param {Array} arr\n   * @param {Number} firstIndex\n   * @param {Number} secondIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\n   */\n  array.swap = function swap(arr, firstIndex, secondIndex) {\n    if (arguments.length !== 3) return null;\n\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\n\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\n\n    var tmp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = tmp;\n\n    return arr;\n  };\n\n  /**\n   * apply selection sort in Array\n   *\n   * @static\n   * @method selectionSort\n   * @param {Array} arr\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.selectionSort = function selectionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var minIndex = 0;\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\n      minIndex = array.indexOfMin(arr, i);\n      array.swap(arr, i, minIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply insertion sort in Array\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\n   *\n   * @static\n   * @method insertionSort\n   * @param {Array} arr\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.insertionSort = function insertionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var value;\n    for (var i = 1, max = arr.length; i < max; i++) {\n      value = arr[i];\n\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\n        arr[j + 1] = arr[j];\n      }\n      arr[j + 1] = value;\n    }\n\n    return arr;\n  };\n\n  /**\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\n   * this function is only used by aid.array.mergeSort function.\n   *\n   * @static\n   * @method merge\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} middleIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   */\n  array.merge = function merge(arr, startIndex, middleIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\n\n    var i = startIndex,\n      j = middleIndex + 1,\n      k = startIndex,\n      tmpArr = [];\n\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\n    while (i <= middleIndex && j <= endIndex) {\n      if (arr[i] <= arr[j]) {\n        tmpArr[k++] = arr[i++];\n      } else {\n        tmpArr[k++] = arr[j++];\n      }\n    }\n\n    if (i > middleIndex) {\n      // set rest right array\n      for (var r = j; r <= endIndex; r++) {\n        tmpArr[k] = arr[r];\n        k++;\n      }\n    } else {\n      // set rest left array\n      for (var l = i; l <= middleIndex; l++) {\n        tmpArr[k] = arr[l];\n        k++;\n      }\n    }\n\n    // set sorted values to arr.\n    for (var n = startIndex; n <= endIndex; n++) {\n      arr[n] = tmpArr[n];\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply merge sort in Array\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\n   *\n   * @static\n   * @method mergeSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.mergeSort = function mergeSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex + 1 === endIndex) {\n      if (arr[startIndex] > arr[endIndex]) {\n        aid.array.swap(arr, startIndex, endIndex);\n      }\n\n      return arr;\n    }\n\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\n\n    aid.array.mergeSort(arr, startIndex, middleIndex);\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\n\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\n\n    return arr;\n  };\n\n  /**\n   * quick sort with use pivot value.\n   * this function is only used by aid.array.quickSort function.\n   *\n   * @static\n   * @method getPivotIndexAfterPartition\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\n   */\n  array.getPivotIndexAfterPartition = function getPivotIndexAfterPartition(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\n\n    if (startIndex > endIndex) return -1;\n\n    if (arr.length <= 1) return 0;\n\n    var pivot = arr[endIndex],\n      swapIndex = startIndex;\n\n    for (var i = startIndex; i < endIndex; i++) {\n      if (arr[i] <= pivot) {\n        aid.array.swap(arr, i, swapIndex);\n        swapIndex++;\n      }\n    }\n\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\n\n    return swapIndex;\n  };\n\n  /**\n   * apply quick sort in Array\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\n   *\n   * @static\n   * @method quickSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.quickSort = function quickSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex < endIndex) {\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\n\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * remove element in Array, and return cloned Array\n   *\n   * @static\n   * @method remove\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Array} return array\n   * @example\n   * var arr = [1, 2, 3, 4, 5, 99];\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\n   */\n  array.remove = function remove(arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('[aid.array.remove] Type of arr parameter must be Array.');\n\n    var clonedArr = arr.slice(0),\n      index = array.indexOf(clonedArr, target);\n    if (index >= 0) clonedArr.splice(index, 1);\n\n    return clonedArr;\n  };\n\n  /**\n   * get 2 x 2 Matrix Array\n   *\n   * @static\n   * @method getMatrixArr\n   * @param {Number} rowNum\n   * @param {Number} columnNum\n   * @param {Object} initialVal\n   * @returns {Array} return array\n   * @example\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\n   */\n  array.getMatrixArr = function getMatrixArr(rowNum, columnNum, initialVal) {\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\n      throw new TypeError('[aid.array.getMatrixArr] Type of rowNum, columnNum parameters must be Integer Number.');\n    }\n\n    if (arguments.length !== 3) throw Error('[aid.array.getMatrixArr] Requires 3 parameters.');\n\n    var arr = [],\n      columns = [];\n    for (var i = 0; i < rowNum; ++i) {\n      columns = [];\n\n      for (var j = 0; j < columnNum; ++j) {\n        columns[j] = initialVal;\n      }\n\n      arr[i] = columns;\n    }\n\n    return arr;\n  };\n\n  /**\n   * binary search version of Array.indexOf\n   *\n   * @static\n   * @method binaryIndexOf\n   * @param {Array} sortedArray\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\n   */\n  array.binaryIndexOf = function binaryIndexOf(sortedArray, target) {\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\n\n    var first = 0,\n      last = sortedArray.length - 1,\n      middle;\n\n    while (first <= last) {\n      middle = Math.floor((first + last) / 2);\n\n      if (target === sortedArray[middle]) {\n        return middle;\n      } else {\n        if (target < sortedArray[middle]) {\n          last = middle - 1;\n        } else {\n          first = middle + 1;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * get object has property in array.\n   * this object is first matched element in array by value or regex.\n   *\n   * @static\n   * @method getFirstObjectHasProperty\n   * @param {Array} arrayHasObjects\n   * @param {String} propertyKey\n   * @param {Object} findPropertyValueOrRegex\n   * @returns {Object} return object\n   * @example\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\n   */\n  array.getFirstObjectHasProperty = function getFirstObjectHasProperty(\n    arrayHasObjects,\n    propertyKey,\n    findPropertyValueOrRegex\n  ) {\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\n\n    if (!aid.isString(propertyKey)) return null;\n\n    var obj,\n      result = null;\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\n      obj = arrayHasObjects[i];\n      if (!obj.hasOwnProperty(propertyKey)) continue;\n\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\n          result = obj;\n          break;\n        }\n      } else {\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\n          result = obj;\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * get index of object has property in array.\n   * this object is first matched element in array by value or regex.\n   *\n   * @static\n   * @method getIndexOfObjectHasProperty\n   * @param {Array} arrayHasObjects\n   * @param {String} propertyKey\n   * @param {Object} findPropertyValueOrRegex\n   * @returns {Object} return object\n   * @example\n   * TODO:\n   */\n  array.getIndexOfObjectHasProperty = function getIndexOfObjectHasProperty(\n    arrayHasObjects,\n    propertyKey,\n    findPropertyValueOrRegex\n  ) {\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\n\n    if (!aid.isString(propertyKey)) return null;\n\n    var obj,\n      result = null,\n      i = 0;\n    for (var max = arrayHasObjects.length; i < max; ++i) {\n      obj = arrayHasObjects[i];\n      if (!obj.hasOwnProperty(propertyKey)) continue;\n\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\n          result = obj;\n          break;\n        }\n      } else {\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\n          result = obj;\n          break;\n        }\n      }\n    }\n\n    if (result) return i;\n\n    return -1;\n  };\n\n  /**\n   * apply overlapped condition sort in array\n   *\n   * @static\n   * @method overlappedConditionSortByProperty\n   * @param {Array} arrayHasObjects\n   * @param {Array} sortConditions. condition is object has property, func property\n   * @returns {Array} return array\n   * @example\n   * var arrayHasObjects = [{group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}];\n   * var result = array.overlappedConditionSortByProperty(arr, [\n   * { property: 'group', func: function (a, b) { return a.group - b.group; } },\n   * { property: 'level', func: function (a, b) { return a.level - b.level; } },\n   * { property: 'date', func: function (a, b) { return new Date(a.date).getTime() - new Date(b.date).getTime(); } }\n   * ]);\n   * console.log(result); // [{group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}]\n   */\n  array.overlappedConditionSortByProperty = function overlappedConditionSortByProperty(\n    arrayHasObjects,\n    sortConditions\n  ) {\n    if (!aid.isArray(arrayHasObjects)) return null;\n\n    var datas = _slice.call(arrayHasObjects);\n\n    if (datas.length <= 1) return datas;\n    if (!aid.isDefined(sortConditions) || !aid.isArray(sortConditions) || sortConditions.length <= 0) return datas;\n\n    var restArgs = aid.rest(_slice.call(arguments), 2),\n      conditionIndex = restArgs.length >= 1 ? restArgs[0] : 0,\n      condition = sortConditions[conditionIndex];\n\n    if (conditionIndex <= 0) datas.sort(condition.func);\n\n    if (sortConditions.length <= 1) return datas;\n\n    // overlapped conditional sort\n    if (conditionIndex < sortConditions.length - 1) {\n      var prevProperty = condition.property,\n        nextConditionIndex = conditionIndex + 1,\n        nextCondition = sortConditions[nextConditionIndex];\n\n      var memoObj = {},\n        memoArr = [],\n        arr;\n\n      var obj, prop;\n      for (var i = 0, max = datas.length; i < max; i++) {\n        obj = datas[i];\n        prop = String(obj[prevProperty]);\n\n        if (!memoObj[prop]) {\n          memoObj[prop] = [];\n          memoArr.push(memoObj[prop]);\n        }\n\n        arr = memoObj[prop];\n        arr.push(obj);\n      }\n\n      for (var j = 0, len = memoArr.length; j < len; j++) {\n        arr = memoArr[j];\n        arr.sort(nextCondition.func);\n\n        memoArr[j] = array.overlappedConditionSortByProperty(arr, sortConditions, nextConditionIndex);\n      }\n\n      return memoArr.reduce(function(acc, curVal) {\n        return acc.concat(curVal);\n      });\n    }\n\n    return datas;\n  };\n\n  /**\n   * check object has properties\n   *\n   * @static\n   * @method isEmpty\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  object.isEmpty = function isEmpty(obj) {\n    if (!aid.isObject(obj)) throw new TypeError('[aid.object.isEmpty] Type of obj parameter must be Object.');\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Object.keys polyfill\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys#Polyfill\n   *\n   * @static\n   * @method keys\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * var obj = {name: 'foo', job: 'programmer', works: [{id: 1, year: 1999}]};\n   * console.log( aid.object.keys(obj) ); // ['name', 'job', 'works']\n   */\n  object.keys = function keys(obj) {\n    // var hasOwnProperty = Object.prototype.hasOwnProperty,\n    var hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString'),\n      dontEnums = [\n        'toString',\n        'toLocaleString',\n        'valueOf',\n        'hasOwnProperty',\n        'isPrototypeOf',\n        'propertyIsEnumerable',\n        'constructor',\n      ],\n      dontEnumsLength = dontEnums.length;\n\n    if (aid.not(aid.isFunction)(obj) && (aid.not(aid.isObject)(obj) || obj === null)) {\n      throw new TypeError('[aid.object.keys] Called on non-object.');\n    }\n\n    var result = [];\n\n    for (var prop in obj) {\n      if (_hasOwnProperty.call(obj, prop)) result.push(prop);\n    }\n\n    if (hasDontEnumBug) {\n      for (var i = 0; i < dontEnumsLength; i++) {\n        if (_hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * Object.shallowEqual\n   * // https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html\n   *\n   * @static\n   * @method keys\n   * @param {Object} objA\n   * @param {Object} objB\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  object.shallowEqual = function shallowEqual(objA, objB) {\n    var not = aid.not,\n      eq = aid.eq,\n      isObject = aid.isObject,\n      isNotObject = not(isObject),\n      isNull = eq(null);\n\n    if (eq(objA)(objB)) return true;\n\n    if (isNotObject(objA) || isNull(objA) || isNotObject(objB) || isNull(objB)) return false;\n\n    var keysA = object.keys(objA),\n      keysB = object.keys(objB);\n\n    if (not(eq(keysA.length))(keysB.length)) return false;\n\n    // Test for A's keys different from B.\n    var bHasOwnProperty = _hasOwnProperty.bind(objB);\n\n    for (var i = 0, max = keysA.length; i < max; i++) {\n      if (!bHasOwnProperty(keysA[i]) || not(eq(objA[keysA[i]]))(objB[keysA[i]])) return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * check element is in viewport entirely\n   *\n   * @static\n   * @method isEntirelyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isEntirelyInViewport = function isEntirelyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect();\n\n    // if parent element is invisible, left, top, right, bottom, width, height, x, y properties are zero.\n    var eqZero = aid.eq(0);\n    if (\n      aid.allOf(\n        eqZero(rect.top),\n        eqZero(rect.left),\n        eqZero(rect.bottom),\n        eqZero(rect.right),\n        eqZero(rect.width),\n        eqZero(rect.height),\n        eqZero(rect.x),\n        eqZero(rect.y)\n      )\n    )\n      return false;\n\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (global.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (global.innerWidth || document.documentElement.clientWidth)\n    );\n  };\n\n  /**\n   * check element is in viewport partially\n   *\n   * @static\n   * @method isPartiallyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isPartiallyInViewport = function isPartiallyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect();\n\n    // if parent element is invisible, left, top, right, bottom, width, height, x, y properties are zero.\n    var eqZero = aid.eq(0);\n    if (\n      aid.allOf(\n        eqZero(rect.top),\n        eqZero(rect.left),\n        eqZero(rect.bottom),\n        eqZero(rect.right),\n        eqZero(rect.width),\n        eqZero(rect.height),\n        eqZero(rect.x),\n        eqZero(rect.y)\n      )\n    )\n      return false;\n\n    var windowHeight = global.innerHeight || document.documentElement.clientHeight,\n      windowWidth = global.innerWidth || document.documentElement.clientWidth;\n\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\n    var verticallyInView = rect.top <= windowHeight && rect.top + rect.height >= 0,\n      horizontallyInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n\n    return verticallyInView && horizontallyInView;\n  };\n\n  /**\n   * create script file, and append to target element\n   *\n   * @static\n   * @method appendScriptFile\n   * @param {String} fileUrl\n   * @param {Element} targetElementToAppendFile\n   * @param {Function} loadCompleteCallback\n   * @example\n   * aid.file.appendScriptFile('https://apis.google.com/js/client.js', document.head, function() { console.log('load script file completely'); });\n   */\n  file.appendScriptFile = function appendScriptFile(fileUrl, targetElementToAppend, loadCompleteCallback) {\n    // document.head, document.body\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n\n    if (typeof loadCompleteCallback === 'function') {\n      if (typeof script.onreadystatechange === 'undefined') {\n        script.onload = loadCompleteCallback;\n      } else {\n        script.onreadystatechange = function() {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            loadCompleteCallback();\n          }\n        };\n      }\n    }\n\n    script.src = fileUrl;\n\n    var ele = targetElementToAppend;\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (ele) {\n      ele.appendChild(script);\n    } else {\n      var firstScript = document.getElementsByTagName('script')[0];\n      firstScript.parentNode.insertBefore(script, firstScript);\n    }\n  };\n\n  /**\n   * writes text to the system clipboard\n   *\n   * @static\n   * @method copyText\n   * @param {String} str\n   * @param {Function} successCallback\n   * @param {Function} errorCallback\n   * @example\n   * aid.clipboard.copyText('aid.js', function(str) { console.log(str); // 'aid.js' }, function(error) { console.log(error); });\n   */\n  clipboard.copyText = function copyText(str, successCallback, errorCallback) {\n    if (!aid.isString(str)) throw new TypeError('[aid.clipboard.copyText] Type of str parameter must be String.');\n\n    if (aid.isDefined(successCallback) && !aid.isFunction(successCallback))\n      throw new TypeError(\n        '[aid.clipboard.copyText] Type of successCallback parameter must be undefined or null or Function.'\n      );\n\n    if (aid.isDefined(errorCallback) && !aid.isFunction(errorCallback))\n      throw new TypeError(\n        '[aid.clipboard.copyText] Type of errorCallback parameter must be undefined or null or Function.'\n      );\n\n    if (!navigator.clipboard) {\n      // fallback. no support Clipboard API\n      var textArea = document.createElement('textarea');\n      textArea.style.position = 'fixed';\n      textArea.style.top = '-9999px';\n      textArea.style.left = '-9999px';\n      textArea.style.width = '2em'; // setting to 1px / 1em doesn't work as this gives a negative w/h on some browsers.\n      textArea.style.height = '2em';\n      textArea.value = str;\n      document.body.appendChild(textArea);\n\n      textArea.focus();\n      textArea.select();\n\n      try {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n        var isSuccessCopy = document.execCommand('copy');\n        if (isSuccessCopy) {\n          if (successCallback) successCallback.call(null, str);\n          return;\n        }\n\n        if (errorCallback)\n          errorCallback.call(\n            null,\n            new Error('[aid.clipboard.copyText] Cannot copy string with using document.execCommand(\"copy\").')\n          );\n      } catch (error) {\n        if (errorCallback) errorCallback.call(null, error);\n      }\n\n      document.body.removeChild(textArea);\n    } else {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n      navigator.clipboard.writeText(str).then(\n        function() {\n          if (successCallback) successCallback.call(null, str);\n        },\n        function(error) {\n          if (errorCallback) errorCallback.call(null, error);\n        }\n      );\n    }\n  };\n\n  /**\n   * Identity monad\n   *\n   * @static\n   * @class Identity\n   * @param {Object} value\n   * @example\n   * TODO:\n   */\n  var Identity = function(value) {\n    this._value = value;\n  };\n\n  Identity.prototype.bind = function(func) {\n    return func(this._value);\n  };\n\n  Identity.prototype.toString = function() {\n    return 'Identity (' + this._value + ')';\n  };\n\n  monad.Identity = Identity;\n\n  /**\n   * Empty monad\n   *\n   * @class Empty\n   * @example\n   * TODO:\n   */\n  var Empty = function() {};\n\n  Empty.prototype.map = function(/*func*/) {\n    return this;\n  };\n\n  Empty.prototype.flatmap = function(/*_*/) {\n    return new Empty();\n  };\n\n  Empty.prototype.toString = function() {\n    return 'Empty ()';\n  };\n\n  monad.Empty = Empty;\n\n  /**\n   * Wrapper monad\n   *\n   * @class Wrapper\n   * @param {Object} value\n   * @example\n   * TODO:\n   */\n  var Wrapper = function(value) {\n    this._value = value;\n  };\n\n  Wrapper.of = function(value) {\n    return new Wrapper(value);\n  };\n\n  Wrapper.prototype.map = function(func) {\n    return Wrapper.of(func(this._value));\n  };\n\n  Wrapper.prototype.join = function() {\n    if (!(this._value instanceof Wrapper)) return this;\n\n    return this._value.join();\n  };\n\n  Wrapper.prototype.get = function() {\n    return this._value;\n  };\n\n  Wrapper.prototype.toString = function() {\n    return 'Wrapper (' + this._value + ')';\n  };\n\n  monad.Wrapper = Wrapper;\n\n  /**\n   * Nothing monad\n   *\n   * @class Nothing\n   * @example\n   * TODO:\n   */\n  var Nothing = function() {};\n\n  Nothing.prototype.value = function(/*value*/) {\n    throw new TypeError('[aid.monad.Nothing] Cannot extract the value.');\n  };\n\n  Nothing.prototype.map = function(/*func*/) {\n    return this;\n  };\n\n  Nothing.prototype.getOrElse = function(other) {\n    return other;\n  };\n\n  Nothing.prototype.filter = function(/*func*/) {\n    return this._value;\n  };\n\n  Nothing.prototype.chain = function(/*func*/) {\n    return this;\n  };\n\n  Nothing.prototype.toString = function() {\n    return 'Maybe.Nothing';\n  };\n\n  monad.Nothing = Nothing;\n\n  /**\n   * Just monad\n   *\n   * @class Just\n   * @param {Object} value\n   * @example\n   * TODO:\n   */\n  var Just = function(value) {\n    this._value = value;\n  };\n\n  Just.prototype.value = function(/*value*/) {\n    throw this._value;\n  };\n\n  Just.prototype.map = function(func) {\n    return Maybe.fromNullable(func(this._value));\n  };\n\n  Just.prototype.getOrElse = function() {\n    return this._value;\n  };\n\n  Just.prototype.filter = function(func) {\n    Maybe.fromNullable(func(this._value) ? this._value : null);\n  };\n\n  Just.prototype.chain = function(func) {\n    return func(this._value);\n  };\n\n  Just.prototype.toString = function() {\n    return 'Maybe.Just (' + this._value + ')';\n  };\n\n  monad.Just = Just;\n\n  /**\n   * Maybe monad\n   *\n   * @static\n   * @method Maybe\n   * @example\n   * var uri = 'http://www.google.com'; // this uri has no parameters\n   * var safeUriParams = aid.curry(function(uri) { return aid.monad.Maybe.fromNullable(aid.string.getUriParams(uri)); });\n   * var safeName = safeUriParams(uri).map(function(params) { return params.name; });\n   * var name = safeName.getOrElse('no parameter'); // 'no parameter'\n   */\n  var Maybe = function() {};\n\n  Maybe.just = function(value) {\n    return new Just(value);\n  };\n\n  Maybe.nothing = function() {\n    return new Nothing();\n  };\n\n  Maybe.of = function(value) {\n    return Maybe.just(value);\n  };\n\n  Maybe.fromNullable = function(value) {\n    return aid.isDefined(value) ? Maybe.just(value) : Maybe.nothing();\n  };\n\n  monad.Maybe = Maybe;\n\n  /**\n   * Left monad\n   *\n   * @class Left\n   * @param {Object} value\n   * @example\n   * TODO:\n   */\n  var Left = function(value) {\n    this._value = value;\n  };\n\n  Left.prototype.map = function(/*_*/) {\n    return this;\n  };\n\n  Left.prototype.value = function() {\n    throw new TypeError('[aid.monad.Left] Cannot extract the value.');\n  };\n\n  Left.prototype.getOrElse = function(other) {\n    return other;\n  };\n\n  Left.prototype.orElse = function(func) {\n    return func(this._value);\n  };\n\n  Left.prototype.chain = function(/*func*/) {\n    return this;\n  };\n\n  Left.prototype.getOrElseThrow = function(errorMessage) {\n    throw new Error(errorMessage);\n  };\n\n  Left.prototype.filter = function(/*func*/) {\n    return this;\n  };\n\n  Left.prototype.toString = function() {\n    return 'Either.Left (' + this._value + ')';\n  };\n\n  monad.Left = Left;\n\n  /**\n   * Right monad\n   *\n   * @class Right\n   * @param {Object} value\n   * @example\n   * TODO:\n   */\n  var Right = function(value) {\n    this._value = value;\n  };\n\n  Right.prototype.map = function(func) {\n    return Either.of(func(this._value));\n  };\n\n  Right.prototype.getOrElse = function(/*other*/) {\n    return this._value;\n  };\n\n  Right.prototype.orElse = function() {\n    return this;\n  };\n\n  Right.prototype.chain = function(func) {\n    return func(this._value);\n  };\n\n  Right.prototype.getOrElseThrow = function(/*_*/) {\n    return this._value;\n  };\n\n  Right.prototype.filter = function(func) {\n    return Either.fromNullable(func(this._value) ? this._value : null);\n  };\n\n  Right.prototype.toString = function() {\n    return 'Either.Right (' + this._value + ')';\n  };\n\n  monad.Right = Right;\n\n  /**\n   * Either monad\n   *\n   * @class Either\n   * @param {Object} value\n   * @example\n   * var decode = function(url) {\n   *   try {\n   *     var result = window.decodeURIComponent(url);\n   *     return Either.of(result);\n   *   } catch (error) {\n   *     return Either.left(error);\n   *   }\n   * };\n   * var trim = function(str) { return str.trim(); };\n   * var split = function(str) { return str.split(''); };\n   * var debug = aid.tab(function(value) { console.log('[debug] :', value)});\n   *\n   * var splitDecodedStr = function(str) {\n   *   var result = Maybe.fromNullable(str)\n   *\n   *     // change Maybe(Just, Nothing) monad to Either(Left, Right) monad.\n   *     .map(trim).map(debug)\n   *     .chain(decode).map(debug).map(split)\n   *\n   *     // get success result or else value\n   *     .getOrElse([]); // get successed value or replacement value // useful to get some value.\n   *     // .orElse(func) // if fail, func(value of Either.left) // useful to do something.\n   *\n   *   return result;\n   * };\n   *\n   * console.log(splitDecodedStrUseMonad(' % '));\n   * console.log(splitDecodedStrUseMonad(' https%3A%2F%2Fgithub.com%2F '));\n   */\n  var Either = function(value) {\n    this._value = value;\n  };\n\n  Either.left = function(value) {\n    return new monad.Left(value);\n  };\n\n  Either.right = function(value) {\n    return new monad.Right(value);\n  };\n\n  Either.fromNullable = function(value) {\n    return aid.isDefined(value) ? Either.right(value) : Either.left(value);\n  };\n\n  Either.of = function(value) {\n    return Either.right(value);\n  };\n\n  Either.prototype.value = function() {\n    return this._value;\n  };\n\n  monad.Either = Either;\n\n  /**\n   * IO monad\n   *\n   * @class IO\n   * @param {Function} effect\n   * @example\n   * var read = function(document, selector) {\n   *   return function() {\n   *     return 'aid.js'; // return document.querySelector(selector).innerHTML;\n   *   };\n   * };\n   * var write = function(document, selector) {\n   *   return function(value) {\n   *     console.log('write :', value); // document.querySelector(selector).innerHTML = value;\n   *     return value;\n   *   };\n   * };\n   * var uppercase = function(str) { return str.toUpperCase(); };\n   * var readDOM = aid.partial(read, document),\n   *   writeDOM = aid.partial(write, document);\n   *\n   * var readAndWriteUppercase = IO.from(readDOM('#dummy')).map(uppercase).map(writeDOM('#dummy'));\n   * readAndWriteUppercase.run();\n   */\n  var IO = function(effect) {\n    if (!aid.isFunction(effect)) throw new TypeError('[aid.monad.IO] Type of effect parameter must be Function.');\n\n    this.effect = effect;\n  };\n\n  IO.of = function(value) {\n    return new IO(function() {\n      return value;\n    });\n  };\n\n  IO.from = function(func) {\n    return new IO(func);\n  };\n\n  IO.prototype.map = function(func) {\n    var self = this;\n\n    return new IO(function() {\n      return func(self.effect());\n    });\n  };\n\n  IO.prototype.chain = function(func) {\n    return func(this.effect());\n  };\n\n  IO.prototype.run = function() {\n    return this.effect();\n  };\n\n  monad.IO = IO;\n\n  /*\n   * export\n   */\n  aid.operator = operator;\n  aid.platform = platform;\n  aid.browser = browser;\n  aid.string = string;\n  aid.math = math;\n  aid.date = date;\n  aid.array = array;\n  aid.object = object;\n  aid.element = element;\n  aid.file = file;\n  aid.clipboard = clipboard;\n  aid.monad = monad;\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = aid;\n    }\n  } else if (typeof define === 'function' && define.amd) {\n    define('aid', [], function() {\n      return aid;\n    });\n  } else {\n    global.aid = aid;\n  }\n})();\n"]}