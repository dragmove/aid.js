{"version":3,"sources":["aid.js"],"names":["global","self","this","aid","operator","platform","browser","string","math","date","array","element","file","existy","obj","isDefined","isBoolean","constructor","Boolean","isNumber","Number","isInteger","isFinite","Math","floor","isString","String","isArray","Array","isObject","Object","isFunction","Function","isRegExp","RegExp","extend","destination","source","TypeError","key","hasOwnProperty","inherit","F","ChildClass","ParentClass","prototype","super","namespace","parent","ns","parts","split","i","max","length","borrow","borrower","donor","functionName","Error","args","slice","call","arguments","apply","bind","func","context","compose","func_a","func_b","not","each","dataCanLoop","_context","truthy","falsy","nth","index","allOf","every","val","anyOf","some","constant","plucker","field","best","conditionFunc","reduce","previousValue","currentValue","iterateUntil","calculateFunc","initialValue","result","push","curry","arg","curry2","secondArg","firstArg","curryAll","curryArgsNum","arity","curried","rest","concat","beginIndex","begin","pipeline","seed","restArgs","value","prev","current","lazyChain","calls","invoke","methodName","target","method","name","force","ret","thunk","Stack","_dataStore","_top","pop","peek","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","find","node","findPrevious","insert","prevNodeData","insertNode","prevNode","remove","getAllNodes","nodes","createLinkedList","object_a","object_b","isWindow","userAgent","test","isMac","isIOS","MSStream","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isSafari","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie8","regex_msie9","regex_msie10","regex_msie11","regex_trident","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","getCookie","cookieArr","cookie","splitArr","keyStr","valueStr","decodeURIComponent","setCookie","expireSecond","path","domain","expires","pathStr","domainStr","Date","setTime","getTime","toGMTString","encodeURIComponent","trim","str","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","emailStr","exec","isIFrame","iframeStr","getUriParam","uri","parameterName","tmpArr","keyValueArr","paramStr","params","getUriParams","getUriCombinedParams","parameters","hashStr","indexOf","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","v","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","getElementPrefixedStyle","style","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","values","match","isPalindrome","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","min","getSizeWidthFit","isEpsilonEqual","number_a","number_b","epsilon","EPSILON","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","getLoopedLastIndex","getReverseLoopedFirstIndex","lastIndex","factorial","getObjForPagination","totalPostNum","displayPostNumPerPage","displayPaginationBtnNum","pageIndex","totalPageNum","paginationBtnGroupIndex","prevPageIndex","firstPageIndex","lastPageIndex","nextPageIndex","degreeToRadian","degree","PI","radianToDegree","radian","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","isEntirelyInViewport","ele","jQuery","get","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","verticallyInView","horizontallyInView","appendScriptFile","fileUrl","targetElementToAppend","loadCompleteCallback","script","onreadystatechange","onload","readyState","src","appendChild","firstScript","getElementsByTagName","parentNode","insertBefore","exports","module","define","amd"],"mappings":";;;;;;;CAAA,WACA,YAKA,IAAAA,GAAA,gBAAAC,OAAAA,KAAAA,OAAAA,MAAAA,MANA,gBAAAD,IAAAA,EAAAA,SAAAA,GAAAA,GACAE,SAGAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAcAT,GAAAU,OAAA,SAAAC,GACA,MAAA,OAAAA,GAeAX,EAAAY,UAAA,SAAAD,GACA,MAAA,QAAAA,GAAA,SAAAA,GAeAX,EAAAa,UAAA,SAAAF,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAC,SAaAf,EAAAgB,SAAA,SAAAL,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAG,QAaAjB,EAAAkB,UAAA,SAAAP,GACA,QAAAX,EAAAgB,SAAAL,KAGAQ,SAAAR,IAAAS,KAAAC,MAAAV,KAAAA,IAaAX,EAAAsB,SAAA,SAAAX,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAS,QAaAvB,EAAAwB,QAAA,SAAAb,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAW,OAaAzB,EAAA0B,SAAA,SAAAf,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAa,QAaA3B,EAAA4B,WAAA,SAAAjB,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAe,UAcA7B,EAAA8B,SAAA,SAAAnB,GACA,QAAAX,EAAAY,UAAAD,IAEAA,EAAAG,cAAAiB,QA2BA/B,EAAAgC,OAAA,SAAAC,EAAAC,GACA,KAAAD,YAAAN,UAAA,gBAAAM,GACA,KAAAE,WAAA,0FAGA,IAAA,gBAAAD,GAAA,KAAAC,WAAA,6DAEA,KAAA,GAAAC,KAAAF,GACAA,EAAAG,eAAAD,KACAH,EAAAG,GAAAF,EAAAE,GAIA,OAAAH,IAYAjC,EAAAsC,QAAA,WAEA,GAAAC,GAAA,YAGA,OAAA,UAAAC,EAAAC,GACAF,EAAAG,UAAAD,EAAAC,UAEAF,EAAAE,UAAA,GAAAH,GACAC,EAAAE,UAAA5B,YAAA0B,EACAA,EAAAG,MAAAF,EAAAC,cAeA1C,EAAA4C,UAAA,SAAAA,EAAAC,GACA,IAAA7C,EAAAsB,SAAAsB,GAAA,KAAA,IAAAT,WAAA,8DAEA,KAAAnC,EAAA0B,SAAAmB,IAAA7C,EAAAY,UAAAiC,GACA,KAAA,IAAAV,WAAA,gFAGA,IAAAW,GAAAD,GAAAhD,CAEA,IAAA+C,EAGA,IAAA,GAFAG,GAAAH,EAAAI,MAAA,KAEAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IACAH,EAAAC,EAAAE,MAAAH,EAAAC,EAAAE,QACAH,EAAAA,EAAAC,EAAAE,GAIA,OAAAH,IAgBA9C,EAAAoD,OAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAvD,EAAA0B,SAAA2B,KAAArD,EAAA0B,SAAA4B,GAAA,KAAA,IAAAnB,WAAA,iEAEA,KAAAnC,EAAAsB,SAAAiC,GAAA,KAAA,IAAApB,WAAA,8DAEA,KAAAnC,EAAAY,UAAA0C,EAAAC,IAAA,KAAA,IAAAC,OAAA,6EAEA,IAAAxD,EAAAY,UAAAyC,EAAAE,IAAA,KAAA,IAAAC,OAAA,oFAEAH,GAAAE,GAAA,WACA,GAAAE,GAAAhC,MAAAiB,UAAAgB,MAAAC,KAAAC,UACA,OAAAN,GAAAC,GAAAM,MAAA9D,KAAA0D,KAmBAzD,EAAA8D,KAAA,SAAAC,EAAAC,GACA,IAAAhE,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,sDAEA,OAAA,YACA,MAAA4B,GAAAF,MAAAG,EAAAJ,aAgBA5D,EAAAiE,QAAA,SAAAC,EAAAC,GACA,IAAAnE,EAAA4B,WAAAsC,KAAAlE,EAAA4B,WAAAuC,GACA,KAAA,IAAAhC,WAAA,mEAGA,OAAA,YACA,MAAA+B,GAAAC,EAAAN,MAAA,KAAAD,cAeA5D,EAAAoE,IAAA,SAAAL,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,qDAEA,OAAA,UAAAxB,GACA,OAAAoD,EAAApD,KAiBAX,EAAAqE,KAAA,SAAAC,EAAAP,EAAAC,GACA,IAAAhE,EAAAwB,QAAA8C,KAAAtE,EAAAsB,SAAAgD,GACA,KAAA,IAAAnC,WAAA,oEAKA,KAAA,GAFAoC,GAAAvE,EAAAU,OAAAsD,GAAAA,EAAA,KAEAf,EAAA,EAAAC,EAAAoB,EAAAnB,OAAAF,EAAAC,EAAAD,IACAc,EAAAJ,KAAAY,EAAAD,EAAArB,KAiBAjD,EAAAwE,OAAA,SAAA7D,GACA,QAAAA,GAgBAX,EAAAyE,MAAA,SAAA9D,GACA,OAAAA,GAgBAX,EAAA0E,IAAA,SAAAJ,EAAAK,GACA,IAAA3E,EAAAwB,QAAA8C,KAAAtE,EAAAsB,SAAAgD,GACA,KAAA,IAAAnC,WAAA,mEAGA,KAAAnC,EAAAkB,UAAAyD,GAAA,KAAA,IAAAxC,WAAA,4DAEA,OAAAwC,GAAA,GAAAA,EAAAL,EAAAnB,OAAA,EAAA,KAAAmB,EAAAK,IAaA3E,EAAA4E,MAAA,WAGA,MAFAnD,OAAAiB,UAAAgB,MAAAC,KAAAC,WAEAiB,MAAA,SAAAC,GACA,MAAAA,MAAA,KAcA9E,EAAA+E,MAAA,WAGA,MAFAtD,OAAAiB,UAAAgB,MAAAC,KAAAC,WAEAoB,KAAA,SAAAF,GACA,MAAAA,MAAA,KAgBA9E,EAAAiF,SAAA,SAAAtE,GACA,MAAA,YACA,MAAAA,KAwBAX,EAAAkF,QAAA,SAAAC,GACA,IAAAnF,EAAAsB,SAAA6D,KAAAnF,EAAAgB,SAAAmE,GACA,KAAA,IAAAhD,WAAA,kEAGA,OAAA,UAAAxB,GACA,KAAAX,EAAA0B,SAAAf,IAAAX,EAAAwB,QAAAb,IAAAX,EAAAsB,SAAAX,IACA,KAAA,IAAAwB,WAAA,6FAGA,OAAAxB,GAAAwE,KAcAnF,EAAAoF,KAAA,SAAAC,EAAA9E,GACA,IAAAP,EAAA4B,WAAAyD,GAAA,KAAA,IAAAlD,WAAA,+DAEA,KAAAnC,EAAAwB,QAAAjB,GAAA,KAAA,IAAA4B,WAAA,oDAEA,OAAA5B,GAAA+E,OAAA,SAAAC,EAAAC,GACA,MAAAH,GAAAE,EAAAC,GAAAD,EAAAC,KAgBAxF,EAAAyF,aAAA,SAAAC,EAAAL,EAAAM,GACA,IAAA3F,EAAA4B,WAAA8D,GAAA,KAAA,IAAAvD,WAAA,uEAEA,KAAAnC,EAAA4B,WAAAyD,GAAA,KAAA,IAAAlD,WAAA,uEAKA,KAHA,GAAA5B,MACAqF,EAAAF,EAAAC,GAEAN,EAAAO,IACArF,EAAAsF,KAAAD,GACAA,EAAAF,EAAAE,EAGA,OAAArF,IAYAP,EAAA8F,MAAA,SAAA/B,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,uDAEA,OAAA,UAAA4D,GACA,MAAAhC,GAAAgC,KAeA/F,EAAAgG,OAAA,SAAAjC,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,wDAEA,OAAA,UAAA8D,GACA,MAAA,UAAAC,GACA,MAAAnC,GAAAmC,EAAAD,MAiBAjG,EAAAmG,SAAA,SAAApC,EAAAqC,GACA,IAAApG,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,0DAEA,IAAAkE,GAAAD,GAAArC,EAAAZ,MAEA,OAAA,SAAAmD,KACA,GAAA7C,GAAAhC,MAAAiB,UAAAgB,MAAAC,KAAAC,WACAI,EAAAjE,IAEA,OAAA0D,GAAAN,QAAAkD,EACAtC,EAAAF,MAAAG,EAAAP,GACA,WACA,GAAA8C,GAAA9E,MAAAiB,UAAAgB,MAAAC,KAAAC,UACA,OAAA0C,GAAAzC,MAAAG,EAAAP,EAAA+C,OAAAD,OAmBAvG,EAAAuG,KAAA,SAAAhG,EAAAkG,GACA,IAAAzG,EAAAwB,QAAAjB,GAAA,KAAA,IAAA4B,WAAA,oDAEA,IAAAuE,GAAA1G,EAAAU,OAAA+F,GAAAA,EAAA,CAEA,OAAAhF,OAAAiB,UAAAgB,MAAAC,KAAApD,EAAAmG,IAiBA1G,EAAA2G,SAAA,SAAAC,GACA,GAAAC,GAAA7G,EAAAuG,KAAA9E,MAAAiB,UAAAgB,MAAAC,KAAAC,WAMA,OAJA5D,GAAAqE,KAAAwC,EAAA,SAAAC,GACA,IAAA9G,EAAA4B,WAAAkF,GAAA,KAAA,IAAA3E,WAAA,6DACA,MAEA0E,EAAAvB,OAAA,SAAAyB,EAAAC,GACA,MAAAA,GAAAD,IACAH,IAmBA5G,EAAAiH,UAAA,SAAAtG,GACA,GAAAuG,KAEA,QACAC,OAAA,SAAAC,GACA,GAAA3D,GAAAzD,EAAAuG,KAAA9E,MAAAiB,UAAAgB,MAAAC,KAAAC,WAYA,OAVAsD,GAAArB,KAAA,SAAAwB,GACA,GAAAC,GAAAD,EAAAD,EAEA,KAAApH,EAAAY,UAAA0G,GACA,KAAA9D,OAAA6D,EAAAvG,YAAAyG,KAAA,YAAAH,EAAA,UAGA,OAAAE,GAAAzD,MAAAwD,EAAA5D,KAGA1D,MAGAyH,MAAA,WACA,MAAAN,GAAA5B,OAAA,SAAAmC,EAAAC,GACA,MAAAA,GAAAD,IACA9G,KASA,IAAAgH,GAAA,WACA5H,KAAA6H,cACA7H,KAAA8H,KAAA,EAGAF,GAAAjF,UAAAmD,KAAA,SAAArF,GACAT,KAAA8H,KAAA,IAAA9H,KAAA8H,KAAA,GACA9H,KAAA6H,WAAA7H,KAAA8H,QAAArH,GAGAmH,EAAAjF,UAAAoF,IAAA,WACA,MAAA/H,MAAA6H,aAAA7H,KAAA8H,OAGAF,EAAAjF,UAAAqF,KAAA,WACA,MAAAhI,MAAA6H,WAAA7H,KAAA8H,KAAA,IAGAF,EAAAjF,UAAAS,OAAA,WACA,MAAApD,MAAA8H,KAAA,EAAA9H,KAAA8H,KAAA,GAGAF,EAAAjF,UAAAsF,MAAA,WACAjI,KAAA6H,cACA7H,KAAA8H,KAAA,GAGA7H,EAAAiI,YAAA,WACA,MAAA,IAAAN,GAIA,IAAAO,GAAA,WACAnI,KAAA6H,cAGAM,GAAAxF,UAAAyF,QAAA,SAAA3H,GACAT,KAAA6H,WAAA/B,KAAArF,IAGA0H,EAAAxF,UAAA0F,QAAA,WACA,MAAArI,MAAA6H,WAAAS,SAGAH,EAAAxF,UAAA4F,MAAA,WACA,MAAAvI,MAAA6H,WAAA,IAGAM,EAAAxF,UAAA6F,KAAA,WACA,MAAAxI,MAAA6H,WAAA7H,KAAA6H,WAAAzE,OAAA,IAGA+E,EAAAxF,UAAAS,OAAA,WACA,MAAApD,MAAA6H,WAAAzE,QAGA+E,EAAAxF,UAAA8F,QAAA,WACA,MAAAzI,MAAA6H,WAAAzE,QAAA,GAIAnD,EAAAyI,YAAA,WACA,MAAA,IAAAP,GAIA,IAAAQ,GAAA,SAAAC,GACA5I,KAAA4I,KAAAA,EACA5I,KAAA6I,KAAA,MAIAC,EAAA,WACA9I,KAAA+I,KAAA,GAAAJ,GAAA,QAGAG,GAAAnG,UAAAqG,KAAA,SAAAJ,GAEA,IADA,GAAAK,GAAAjJ,KAAA+I,KACAE,EAAAL,OAAAA,GAEA,GAAA,QADAK,EAAAA,EAAAJ,MACA,MAAAI,EAEA,OAAAA,IAGAH,EAAAnG,UAAAuG,aAAA,SAAAN,GACA,GAAA5I,KAAA+I,KAAAH,OAAAA,EAAA,MAAA,KAGA,KADA,GAAAK,GAAAjJ,KAAA+I,KACA,OAAAE,EAAAJ,MAAAI,EAAAJ,KAAAD,OAAAA,GACAK,EAAAA,EAAAJ,IAEA,OAAAI,IAGAH,EAAAnG,UAAAwG,OAAA,SAAAP,EAAAQ,GACA,GAAAC,GAAA,GAAAV,GAAAC,GACAU,EAAAtJ,KAAAgJ,KAAAI,EAEAC,GAAAR,KAAAS,EAAAT,KACAS,EAAAT,KAAAQ,GAGAP,EAAAnG,UAAA4G,OAAA,SAAAX,GACA,GAAAU,GAAAtJ,KAAAkJ,aAAAN,EAEA,QAAAU,EAAAT,OACAS,EAAAT,KAAAS,EAAAT,KAAAA,OAIAC,EAAAnG,UAAA6G,YAAA,WAIA,IAHA,GAAAC,IAAAzJ,KAAA+I,MACAE,EAAAjJ,KAAA+I,KAEA,OAAAE,EAAAJ,MACAY,EAAA3D,KAAAmD,EAAAJ,MACAI,EAAAA,EAAAJ,IAEA,OAAAY,IAGAxJ,EAAAyJ,iBAAA,WACA,MAAA,IAAAZ,IAeA5I,EAAA,KAAA,SAAAyJ,EAAAC,GACA,MAAAD,GAAAC,GAeA1J,EAAA,OAAA,SAAAyJ,EAAAC,GACA,MAAAD,KAAAC,GAcA1J,EAAA,KAAA,SAAAU,GACA,OAAAA,GAaAT,EAAA0J,SAAA,SAAAC,GACA,MAAA,WAAAC,KAAAD,IAaA3J,EAAA6J,MAAA,SAAAF,GACA,MAAA,aAAAC,KAAAD,IAcA3J,EAAA8J,MAAA,SAAAH,GACA,MAAA,mBAAAC,KAAAD,KAAAhK,EAAAoK,UAaA/J,EAAAgK,UAAA,SAAAL,GACA,MAAA,WAAAC,KAAAD,IAaA1J,EAAAgK,KAAA,SAAAN,GACA,MAAA,QAAAC,KAAAD,IAAA,WAAAC,KAAAD,IAaA1J,EAAAiK,OAAA,SAAAP,GACA,MAAA,SAAAC,KAAAD,IAAA,QAAAC,KAAAD,IAaA1J,EAAAkK,KAAA,SAAAR,GACA,MAAA,WAAAC,KAAAD,IAaA1J,EAAAmK,QAAA,SAAAT,GACA,MAAA,SAAAC,KAAAD,IAAA,SAAAC,KAAAD,IAaA1J,EAAAoK,SAAA,SAAAV,GACA,OAAA1J,EAAAiK,OAAAP,KAAA1J,EAAAmK,QAAAT,IAAA,UAAAC,KAAAD,IAaA1J,EAAAqK,SAAA,SAAAX,GACA,OAAA,UAAAC,KAAAD,IAAA,UAAAC,KAAAD,IAaA1J,EAAAsK,aAAA,SAAAZ,GACA,GAAA1J,EAAAgK,KAAAN,GAAA,CACA,GAAA,oBAAAC,KAAAD,GAAA,MAAAa,YAAA3I,OAAA4I,GAAA,GACA,IAAA,4BAAAb,KAAAD,GAAA,MAAAa,YAAA3I,OAAA4I,GAAA,IAGA,OAAA,GAaAxK,EAAAyK,aAAA,SAAAf,GACA,MAAA1J,GAAAkK,KAAAR,IACA,2BAAAC,KAAAD,GAAAa,WAAA3I,OAAA4I,GAAA,KAGA,GAaAxK,EAAA0K,gBAAA,SAAAhB,GACA,GAAA1J,EAAAmK,QAAAT,GAAA,CACA,GAAA,SAAAC,KAAAD,GAAA,CACA,GAAA,2BAAAC,KAAAD,GAAA,MAAAa,YAAA3I,OAAA4I,GAAA,GACA,IAAA,yBAAAb,KAAAD,GAAA,MAAAa,YAAA3I,OAAA4I,GAAA,IAGA,GAAA,uBAAAb,KAAAD,GAAA,MAAAa,YAAA3I,OAAA4I,GAAA,IAGA,OAAA,GAaAxK,EAAA2K,iBAAA,SAAAjB,GACA,MAAA1J,GAAAoK,SAAAV,IACA,0BAAAC,KAAAD,GAAAa,WAAA3I,OAAA4I,GAAA,KAGA,GAaAxK,EAAA4K,iBAAA,SAAAlB,GACA,MAAA1J,GAAAqK,SAAAX,IACA,2BAAAC,KAAAD,GAAAa,WAAA3I,OAAA4I,GAAA,KAGA,GAcAxK,EAAA6K,mBAAA,SAAAC,GACA,GAAAC,GAAA,EAAAD,EAAApL,EAAAsL,UAAAtB,UAAAuB,cACAC,EAAA,QACAC,EAAA,UACAC,EAAA,UACAC,EAAA,UACAC,EAAA,WACAC,EAAA,mBACAC,EAAA,WACAC,EAAA,YAEA,KAAAP,EAAAvB,KAAAoB,KAAAQ,EAAA5B,KAAAoB,GAEA,OACAf,MAAA,EACA0B,qBAAA,EACAC,sBAAA,EAIA,IAAAJ,EAAA5B,KAAAoB,IAAAU,EAAA9B,KAAAoB,GAEA,OACAf,MAAA,EACA0B,qBAAA,EACAC,sBAAA,EAIA,IAAAT,EAAAvB,KAAAoB,IAAAU,EAAA9B,KAAAoB,GAAA,CAGA,GAAAI,EAAAxB,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAP,EAAAzB,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAN,EAAA1B,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAL,EAAA3B,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,IAIA,MAAAR,GAAAxB,KAAAoB,IAAAS,EAAA7B,KAAAoB,IAGAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,IAMA3B,MAAA,EACA0B,qBAAA,EACAC,sBAAA,IAaA3L,EAAA4L,mBAAA,WAGA,MAAA,aAFAC,UAAAC,cAAA,QAcA9L,EAAA+L,qBAAA,WACA,GAAAC,GAAAH,SAAAC,cAAA,MAEA,OAAA,eAAAE,IAAA,UAAAA,IAYAhM,EAAAiM,iBAAA,WACA,SAAAvM,EAAAwM,MAAAxM,EAAAyM,YAAAzM,EAAA0M,UAAA1M,EAAA2M,OAaArM,EAAAsM,kBAAA,SAAA5C,GACA,SAAA1J,EAAAoK,SAAAV,KAAAhK,EAAA6M,UACA7M,EAAA6M,OAAAC,SACA9M,EAAA6M,OAAAE,eAAA/M,EAAA6M,OAAAC,QAAA9M,EAAA6M,OAAAE,aAAAD,WAGA9M,EAAA6M,OAAAC,UAkBAxM,EAAA0M,UAAA,SAAAzK,GAMA,IAAA,GALA0K,GAAAd,SAAAe,OAAA/J,MAAA,MACAgK,KACAC,EAAA,GACAC,EAAA,GAEAjK,EAAA,EAAAC,EAAA4J,EAAA3J,OAAAF,EAAAC,IAAAD,EAKA,GAJA+J,EAAAF,EAAA7J,GAAAD,MAAA,KACAiK,EAAAD,EAAA,GACAE,EAAArN,EAAAsN,mBAAAH,EAAA,IAEAC,IAAA7K,EAAA,MAAA8K,EAGA,OAAA,OAgBA/M,EAAAiN,UAAA,SAAAhL,EAAA0E,EAAAuG,EAAAC,EAAAC,GACA,GAAAC,GAAA,GACAC,EAAA,WAAA,EAAAH,EAAA,KACAI,EAAA,EAAA,YAAAH,EAAA,EAEA,IAAAF,EAAA,CACA,GAAA/M,GAAA,GAAAqN,KACArN,GAAAsN,QAAAtN,EAAAuN,UAAA,IAAAR,GAEAG,EAAA,aAAAlN,EAAAwN,cAGA9B,SAAAe,OAAA3K,EAAA,IAAAvC,EAAAkO,mBAAAjH,GAAA2G,EAAAC,EAAAF,GAaApN,EAAA4N,KAAA,SAAAC,GACA,IAAAjO,EAAAsB,SAAA2M,GAAA,KAAA,IAAA9L,WAAA,2CAEA,OAAA8L,GAAAC,QAAA,OAAA,IAAAA,QAAA,OAAA,KAaA9N,EAAA+N,eAAA,SAAAF,GACA,IAAAjO,EAAAsB,SAAA2M,GAAA,KAAA,IAAA9L,WAAA,qDAEA,KAAA8L,EAAA9K,OAAA,OAAA,CAGA,KAAA,GADAxC,MAAAyN,EAAA,GACAnL,EAAA,EAAAC,EAAA+K,EAAA9K,OAAAF,EAAAC,EAAAD,IAAA,CAGA,GAFAmL,EAAAH,EAAAI,OAAApL,GAEAtC,EAAAyN,MAAA,EAAA,OAAA,CACAzN,GAAAyN,IAAA,EAGA,OAAA,GAaAhO,EAAAkO,iBAAA,SAAAC,GACA,IAAAvO,EAAAsB,SAAAiN,GAAA,KAAA,IAAApM,WAAA,uDAEA,IAAAoM,EAAApL,QAAA,EAAA,MAAA,EAEA,IAAAqL,GAAAD,EAAAE,YAAA,IAGA,OAFAF,GAAAG,OAAAF,EAAA,IAeApO,EAAAuO,QAAA,SAAAC,GACA,IAAA5O,EAAAsB,SAAAsN,GAAA,KAAA,IAAAzM,WAAA,8CAIA,SADA,GAAAJ,QAAA,uIACA8M,KAAAD,IAaAxO,EAAA0O,SAAA,SAAAC,GACA,IAAA/O,EAAAsB,SAAAyN,GAAA,KAAA,IAAA5M,WAAA,+CAEA,OAAA,gCAAA2H,KAAAiF,IAcA3O,EAAA4O,YAAA,SAAAC,EAAAC,GACA,IAAAlP,EAAAsB,SAAA2N,KAAAjP,EAAAsB,SAAA4N,GACA,KAAA,IAAA/M,WAAA,mDAGA,IAAA8M,EAAA9L,OAAA,EAAA,MAAA,EACA8L,GAAAA,EAAAjM,MAAA,KAAA,EAEA,IAAAmM,GAAAF,EAAAjM,MAAA,IACA,IAAAmM,EAAAhM,OAAA,EAAA,MAAA,EAMA,KAAA,GADAiM,GAHAC,EAAAF,EAAA,GACAG,EAAAD,EAAArM,MAAA,KAGAC,EAAA,EAAAC,EAAAoM,EAAAnM,OAAAF,EAAAC,IAAAD,EAIA,GAHAmM,EAAAE,EAAArM,GAAAD,MAAA,KAEAoM,EAAAjM,QAAA,GAAAiM,EAAAvJ,KAAA,IACAuJ,EAAA,KAAAF,EAAA,MAAArP,GAAAsN,mBAAAiC,EAAA,GAGA,OAAA,IAaAhP,EAAAmP,aAAA,SAAAN,GACA,IAAAjP,EAAAsB,SAAA2N,GAAA,KAAA,IAAA9M,WAAA,mDAEA,IAAA8M,EAAA9L,OAAA,EAAA,MAAA,KACA8L,GAAAA,EAAAjM,MAAA,KAAA,EAEA,IAAAmM,GAAAF,EAAAjM,MAAA,IACA,IAAAmM,EAAAhM,OAAA,EAAA,MAAA,KAMA,KAAA,GADAiM,GAHAC,EAAAF,EAAA,GACAG,EAAAD,EAAArM,MAAA,KAEArC,KACAsC,EAAA,EAAAC,EAAAoM,EAAAnM,OAAAF,EAAAC,IAAAD,EAAA,CAEA,GADAmM,EAAAE,EAAArM,GAAAD,MAAA,KACAoM,EAAAjM,QAAA,EAAA,MAAA,KAEAxC,GAAAyO,EAAA,IAAAA,EAAA,GAGA,MAAAzO,IAcAP,EAAAoP,qBAAA,SAAAP,EAAAQ,GACA,IAAAzP,EAAAsB,SAAA2N,GAAA,KAAA,IAAA9M,WAAA,sEAEA,KAAAnC,EAAA0B,SAAA+N,GAAA,KAAA,IAAAtN,WAAA,6EAEA,KAAA8M,EAAA,MAAA,EACA,KAAAQ,EAAA,MAAAR,EAEA,IAAAhB,GAAA,EACA,KAAA,GAAA7L,KAAAqN,GACAxB,GAAA,IAAA7L,EAAA,IAAAb,OAAAkO,EAAArN,GAGA,IAAA,KAAA6L,EAAA,MAAAgB,EAEA,IAAAE,GAAAF,EAAAjM,MAAA,KACA0M,EAAA1P,EAAAY,UAAAuO,EAAA,IAAA,IAAAA,EAAA,GAAA,EAKA,OAHAF,GAAAE,EAAA,GACAF,GAAAA,EAAAU,QAAA,MAAA,EAAAV,EAAAhB,EAAAgB,EAAA,IAAAhB,EAAAS,OAAA,IAAAgB,GAeAtP,EAAAwP,sBAAA,SAAAC,GACA,IAAA7P,EAAAsB,SAAAuO,GAAA,KAAA,IAAA1N,WAAA,6EAGA,SADA,iBACA0M,KAAAgB,IAeAzP,EAAA0P,sBAAA,SAAAb,GACA,IAAAjP,EAAAsB,SAAA2N,GAAA,KAAA,IAAA9M,WAAA,uEAEA,IAAA4N,IACAC,MAAA,sDACAC,MAAA,4EACAC,EAAA,wEACAC,WAAA,+DAGAC,EAAA,IACA,KAAA,GAAAhO,KAAA2N,GAAA,CAEA,GADAA,EAAA3N,GACA,CAGA,KADA2N,EAAA3N,GAAAyM,KAAAI,GACA,CACAmB,EAAAhO,CACA,SAIA,GAAAyN,GAAA,GACAV,IACA,QAAAiB,GACA,IAAA,QACAP,EAAAzP,EAAA4O,YAAAC,EAAA,MAAA,EACA,MAEA,KAAA,QACAE,EAAAF,EAAAjM,MAAA,KAAA,GAAAA,MAAA,KACA6M,EAAAV,EAAAA,EAAAhM,OAAA,IAAA,EACA,MAEA,KAAA,IACAgM,EAAAF,EAAAjM,MAAA,KAAA,GAAAA,MAAA,KACA6M,EAAAV,EAAAA,EAAAhM,OAAA,IAAA,EACA,MAEA,KAAA,WACAgM,EAAAF,EAAAjM,MAAA,KAAA,GAAAA,MAAA,KACA6M,EAAAV,EAAAA,EAAAhM,OAAA,IAAA,GAQA,OACAkN,KAAA,UACApB,IAAAA,EACAY,UAAAA,EACAS,WANAT,GAAAzP,EAAAwP,sBAAAC,KA6BAzP,EAAAmQ,qBAAA,SAAAtB,GA0BA,IAAAjP,EAAAsB,SAAA2N,GAAA,KAAA,IAAA9M,WAAA,sEAEA,IAAAqO,IACAC,YAAA,uEACAC,UAAA,gFACAC,SAAA,4EACAC,YAAA,gFACAC,UAAA,6DAGAC,EAAA,GACAC,EAAA,GACAC,GAAA,EACAV,GAAA,EAEAF,EAAA,IACA,KAAA,GAAAhO,KAAAoO,GAAA,CAEA,GADAA,EAAAnO,eAAAD,GACA,CAGA,KADAoO,EAAApO,GAAAyM,KAAAI,GACA,CACAmB,EAAAhO,EACAkO,GAAA,CACA,SAIA,GAAAnB,KACA,QAAAiB,GAEA,IAAA,cACAjB,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,EACA,MAGA,KAAA,YACAA,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,EACA,MAGA,KAAA,WACAA,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,GACA6B,GAAA,CACA,MAGA,KAAA,cACA7B,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,GACA4B,EAAA5B,EAAA,EACA,MAGA,KAAA,YACAA,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA8B,EAAA5B,EAAA,GAQA,MAFAmB,MAAAQ,IAAAC,IAGAV,KAAA,SACApB,IAAAA,EACA6B,YAAAA,EACAC,QAAAA,EACAC,WAAAA,EACAV,WAAAA,IAgBAlQ,EAAA6Q,4BAAA,SAAAC,EAAAC,GACA,IAAAnR,EAAAsB,SAAA4P,GAAA,KAAA,IAAA/O,WAAA,sFAEA,KAAAnC,EAAAa,UAAAsQ,GAAA,KAAA,IAAAhP,WAAA,yGAEA,IAAA+O,IAAArR,GAAAmM,SAAA,MAAAkF,EAMA,KAAA,GAJAE,IAAA,SAAA,MAAA,KAAA,KACAC,EAAAF,KAAA,EAEAG,EAAA,GACArO,EAAA,EAAAC,EAAAkO,EAAAjO,OAAAF,EAAAC,EAAAD,IAIA,GAHAqO,EAAA,EAAAJ,EAAA7C,OAAA,GAAAkD,cAAAL,EAAAxN,MAAA,GAAAwN,GAEAI,EAAAF,EAAAnO,GAAAqO,IACAtF,UAAA,MAAAsF,EAGA,OAAA,IAaAlR,EAAAoR,wBAAA,SAAAN,EAAAC,GACA,IAAAnR,EAAAsB,SAAA4P,GAAA,KAAA,IAAA/O,WAAA,kFAEA,KAAAnC,EAAAa,UAAAsQ,GAAA,KAAA,IAAAhP,WAAA,qGAEA,IAAAsP,GAAA5R,EAAAmM,SAAAC,cAAA,OAAAwF,KACA,IAAAP,IAAAO,GAAA,MAAAP,EAMA,KAAA,GAJAE,IAAA,SAAA,MAAA,KAAA,KACAC,EAAAF,KAAA,EAEAG,EAAA,GACArO,EAAA,EAAAC,EAAAkO,EAAAjO,OAAAF,EAAAC,EAAAD,IAIA,GAHAqO,EAAA,EAAAJ,EAAA7C,OAAA,GAAAkD,cAAAL,EAAAxN,MAAA,GAAAwN,GAEAI,EAAAF,EAAAnO,GAAAqO,IACAG,GAAA,MAAAH,EAGA,OAAA,IAeAlR,EAAAsR,cAAA,SAAAC,GACA,MAAA3R,GAAAU,OAAAiR,IAAA3R,EAAAsB,SAAAqQ,GAEAA,EAFA,IAgBAvR,EAAAwR,iBAAA,SAAAC,GACA,IAAA7R,EAAAkB,UAAA2Q,GAAA,KAAA,IAAA1P,WAAA,+DAEA,OAAA0P,GAAAC,WAAA5D,QAAA,wBAAA,MAgBA9N,EAAA2R,4BAAA,SAAA9D,GACA,IAAAjO,EAAAsB,SAAA2M,GAAA,KAAA,IAAA9L,WAAA,kEAEA,IAAAxB,IAAAqR,EAAA,EAAAC,EAAA,EACA,KAAAjS,EAAAY,UAAAqN,GAAA,MAAAtN,EAEA,IAAAuR,GAAAjE,EAAAkE,MAAA,oBACA,OAAAD,GAAA/O,QAAA,EAAAxC,EAEA,cAAAmJ,KAAAmE,IACAtN,EAAAqR,EAAAtH,WAAAwH,EAAA,GAAA,IACAvR,GAGA,cAAAmJ,KAAAmE,IACAtN,EAAAsR,EAAAvH,WAAAwH,EAAA,GAAA,IACAvR,IAGAA,EAAAqR,EAAAtH,WAAAwH,EAAA,GAAA,IACAA,EAAA/O,OAAA,IAAAxC,EAAAsR,EAAAvH,WAAAwH,EAAA,GAAA,KAEAvR,IAcAP,EAAAgS,aAAA,SAAAnE,GACA,IAAAjO,EAAAsB,SAAA2M,GAAA,KAAA,IAAA9L,WAAA,mDAEA,OAAA8L,GAAA9K,QAAA,GAEA8K,EAAAvK,MAAA,EAAA,KAAAuK,EAAAvK,OAAA,IAEA1D,EAAAI,OAAAgS,aAAAnE,EAAAvK,OAAA,EAAA,KAgBArD,EAAAgS,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAzR,GAAAhB,EAAAgB,QACA,MAAAA,EAAAsR,IAAAtR,EAAAuR,IAAAvR,EAAAwR,IAAAxR,EAAAyR,IACA,KAAA,IAAAtQ,WAAA,uDAGA,IAAAuQ,GAAAF,EACAG,EAAAvR,KAAAwR,KAAAJ,EAAAF,EAAAC,EAOA,OALAI,GAAAF,IACAC,EAAAtR,KAAAwR,KAAAH,EAAAF,EAAAD,GACAK,EAAAF,IAIAI,MAAAH,EACAI,OAAAH,IAiBAtS,EAAA0S,iBAAA,SAAAT,EAAAC,EAAAS,EAAAC,GACA,GAAAjS,GAAAhB,EAAAgB,QACA,MAAAA,EAAAsR,IAAAtR,EAAAuR,IAAAvR,EAAAgS,IAAAhS,EAAAiS,IACA,KAAA,IAAA9Q,WAAA,sDAGA,IAAA+Q,GAAA9R,KAAA+R,IAAAH,EAAAV,EAAAW,EAAAV,EAIA,QACAM,MAJAzR,KAAAwR,KAAAN,EAAAY,GAKAJ,OAJA1R,KAAAwR,KAAAL,EAAAW,KAoBA7S,EAAA+S,gBAAA,SAAAd,EAAAC,EAAAS,GACA,GAAAhS,GAAAhB,EAAAgB,QACA,KAAAA,EAAAsR,KAAAtR,EAAAuR,KAAAvR,EAAAgS,GACA,KAAA,IAAA7Q,WAAA,qDAMA,QACA0Q,MAJAG,EAKAF,OAJA1R,KAAAwR,KAAAI,EAAAV,EAAAC,KAmBAlS,EAAAgT,eAAA,SAAAC,EAAAC,GACA,IAAAvT,EAAAgB,SAAAsS,KAAAtT,EAAAgB,SAAAuS,GACA,KAAA,IAAApR,WAAA,oDAGA,IAAAqR,GAAAxT,EAAAY,UAAAK,OAAAwS,SAAAxS,OAAAwS,QAAA,qBAEA,OAAArS,MAAAsS,IAAAJ,EAAAC,GAAAC,GAqBAnT,EAAAsT,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAnQ,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,8CAEA,IAAAtC,GAAAlB,EAAAkB,SACA,MAAAA,EAAA0S,IAAA1S,EAAA2S,IAAA3S,EAAA4S,IAAA5S,EAAA6S,IACA,KAAA,IAAA5R,WAAA,2DAGA,IAAAyR,EAAA,GAAAE,EAAA,EACA,KAAA,IAAAtQ,OAAA,oFAGA,IAAAqQ,EAAAD,EACA,KAAA,IAAApQ,OAAA,uFAIA,KAAA,GADAmB,GAAAmP,EACA7Q,EAAA,EAAAA,EAAA4Q,EAAA5Q,IAAA,CACA,GAAA0B,IAAAoP,EAAA,OAAA,CACApP,GAAAA,EAAA,EAAAiP,EAAA,EAAAjP,EAAA,EAGA,OAAA,GAkBAtE,EAAA2T,mBAAA,SAAAJ,EAAAC,EAAAC,GACA,GAAAlQ,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,mDAEA,IAAAtC,GAAAlB,EAAAkB,SACA,KAAAA,EAAA0S,KAAA1S,EAAA2S,KAAA3S,EAAA4S,GACA,KAAA,IAAA3R,WAAA,gEAGA,IAAAyR,EAAA,GAAAE,EAAA,EACA,KAAA,IAAAtQ,OAAA,yFAGA,IAAAqQ,EAAAD,GAAAE,EAAAF,EACA,KAAA,IAAApQ,OAAA,wGAIA,KAAA,GADAmB,GAAAmP,EACA7Q,EAAA,EAAAA,EAAA4Q,EAAA,EAAA5Q,IACA0B,EAAAA,EAAA,EAAAiP,EAAA,EAAAjP,EAAA,CAGA,OAAAA,IAkBAtE,EAAA4T,2BAAA,SAAAL,EAAAC,EAAAK,GACA,GAAAtQ,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,2DAEA,IAAAtC,GAAAlB,EAAAkB,SACA,KAAAA,EAAA0S,KAAA1S,EAAA2S,KAAA3S,EAAAgT,GACA,KAAA,IAAA/R,WAAA,wEAGA,IAAAyR,EAAA,GAAAM,EAAA,EACA,KAAA,IAAA1Q,OAAA,8FAGA,IAAAqQ,EAAAD,GAAAM,EAAAN,EACA,KAAA,IAAApQ,OAAA,6GAIA,KAAA,GADAmB,GAAAuP,EACAjR,EAAA,EAAAA,EAAA4Q,EAAA,EAAA5Q,IACA0B,EAAAA,EAAA,EAAA,EAAAiP,EAAAjP,EAAA,CAGA,OAAAA,IAcAtE,EAAA8T,UAAA,SAAAtC,GACA,IAAA7R,EAAAkB,UAAA2Q,GAAA,KAAA,IAAA1P,WAAA,sDAEA,OAAA0P,GAAA,EAAA,EACAA,EAAA7R,EAAAK,KAAA8T,UAAAtC,EAAA,IAgBAxR,EAAA+T,oBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA5Q,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,oDAEA,IAAAtC,GAAAlB,EAAAkB,SACA,MAAAA,EAAAmT,IAAAnT,EAAAoT,IAAApT,EAAAqT,IAAArT,EAAAsT,IACA,KAAA,IAAArS,WAAA,iEAGA,IAAAkS,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,EACA,KAAA,IAAArS,WAAA,0EAGA,IAAAsS,GAAArT,KAAAwR,KAAAyB,EAAAC,EACAE,GAAA,IAAAA,EAAA,GACAA,EAAAC,IAAAD,EAAAC,EAEA,IAAAC,GAAAtT,KAAAC,OAAAmT,EAAA,GAAAD,GACAI,EAAAD,EAAAH,EACAK,EAAAF,EAAAH,EAAA,EACAM,EAAAD,EAAAL,EAAA,EACAO,EAAAD,EAAA,CAKA,OAHAA,GAAAJ,IAAAI,EAAAJ,GACAK,EAAAL,IAAAK,EAAA,IAGAT,aAAAA,EACAC,sBAAAA,EACAC,wBAAAA,EACAC,UAAAA,EAEAC,aAAAA,EACAE,cAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,cAAAA,IAcAzU,EAAA0U,eAAA,SAAAC,GACA,IAAAhV,EAAAgB,SAAAgU,GAAA,KAAA,IAAA7S,WAAA,mDAEA,OAAA6S,GAAA5T,KAAA6T,GAAA,KAaA5U,EAAA6U,eAAA,SAAAC,GACA,IAAAnV,EAAAgB,SAAAmU,GAAA,KAAA,IAAAhT,WAAA,mDAEA,OAAA,KAAAgT,EAAA/T,KAAA6T,IAWA3U,EAAA8U,MAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAUA9U,EAAA+U,QAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YAUA/U,EAAAgV,WAAA,GAUAhV,EAAAiV,YAAA,KAUAjV,EAAAkV,WAAA,MAeAjV,EAAAoP,QAAA,SAAA8F,EAAApO,GACA,IAAArH,EAAAwB,QAAAiU,GAAA,KAAA,IAAAtT,WAAA,4CAEA,KAAA,GAAAc,GAAA,EAAAC,EAAAuS,EAAAtS,OAAAF,EAAAC,IAAAD,EACA,GAAAwS,EAAAxS,KAAAoE,EAAA,MAAApE,EAGA,QAAA,GAqBA1C,EAAAmV,WAAA,SAAAD,EAAAE,GACA,IAAA3V,EAAAwB,QAAAiU,KAAAzV,EAAAkB,UAAAyU,GAAA,OAAA,CAEA,IAAAC,GAAAD,EAAA,EAAAA,EAAA,CACA,IAAAF,EAAAtS,QAAAyS,EAAA,OAAA,CAKA,KAAA,GAHAC,GAAAJ,EAAAG,GACAE,EAAAF,EAEA3S,EAAA6S,EAAA,EAAA5S,EAAAuS,EAAAtS,OAAAF,EAAAC,EAAAD,IACAwS,EAAAxS,GAAA4S,IACAA,EAAAJ,EAAAxS,GACA6S,EAAA7S,EAIA,OAAA6S,IAgBAvV,EAAAwV,KAAA,SAAAN,EAAA3B,EAAAkC,GACA,GAAA,IAAApS,UAAAT,OAAA,MAAA,KAEA,KAAAnD,EAAAwB,QAAAiU,KAAAzV,EAAAkB,UAAA4S,KAAA9T,EAAAkB,UAAA8U,GAAA,MAAA,KAEA,IAAAlC,EAAA,GAAAA,GAAA2B,EAAAtS,QAAA6S,EAAA,GAAAA,GAAAP,EAAAtS,OAAA,MAAA,KAEA,IAAA8S,GAAAR,EAAA3B,EAIA,OAHA2B,GAAA3B,GAAA2B,EAAAO,GACAP,EAAAO,GAAAC,EAEAR,GAcAlV,EAAA2V,cAAA,SAAAT,GACA,IAAAzV,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,MAAA,KAGA,KAAA,GADA2S,GAAA,EACA7S,EAAA,EAAAC,EAAAuS,EAAAtS,OAAA,EAAAF,EAAAC,EAAAD,IACA6S,EAAAvV,EAAAmV,WAAAD,EAAAxS,GACA1C,EAAAwV,KAAAN,EAAAxS,EAAA6S,EAGA,OAAAL,IAeAlV,EAAA4V,cAAA,SAAAV,GACA,IAAAzV,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,MAAA,KAGA,KAAA,GADA2D,GACA7D,EAAA,EAAAC,EAAAuS,EAAAtS,OAAAF,EAAAC,EAAAD,IAAA,CACA6D,EAAA2O,EAAAxS,EAEA,KAAA,GAAAmT,GAAAnT,EAAA,EAAAmT,GAAA,GAAAX,EAAAW,GAAAtP,EAAAsP,IACAX,EAAAW,EAAA,GAAAX,EAAAW,EAEAX,GAAAW,EAAA,GAAAtP,EAGA,MAAA2O,IAgBAlV,EAAA8V,MAAA,SAAAZ,EAAAG,EAAAU,EAAAC,GACA,IAAAvW,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,MAAA,KAEA,IAAAyS,EAAAU,GAAAA,EAAAC,EAAA,MAAA,KAQA,KANA,GAAAtT,GAAA2S,EACAQ,EAAAE,EAAA,EACAE,EAAAZ,EACAzG,KAGAlM,GAAAqT,GAAAF,GAAAG,GACAd,EAAAxS,IAAAwS,EAAAW,GACAjH,EAAAqH,KAAAf,EAAAxS,KAGAkM,EAAAqH,KAAAf,EAAAW,IAIA,IAAAnT,EAAAqT,EAEA,IAAA,GAAAG,GAAAL,EAAAK,GAAAF,EAAAE,IACAtH,EAAAqH,GAAAf,EAAAgB,GACAD,QAKA,KAAA,GAAAE,GAAAzT,EAAAyT,GAAAJ,EAAAI,IACAvH,EAAAqH,GAAAf,EAAAiB,GACAF,GAKA,KAAA,GAAAG,GAAAf,EAAAe,GAAAJ,EAAAI,IACAlB,EAAAkB,GAAAxH,EAAAwH,EAGA,OAAAlB,IAiBAlV,EAAAqW,UAAA,SAAAnB,EAAAG,EAAAW,GACA,IAAAvW,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,MAAA,KAEA,IAAAsS,EAAAtS,QAAA,GAAAyS,IAAAW,EAAA,MAAA,KAEA,IAAAX,EAAA,IAAAW,EAKA,MAJAd,GAAAG,GAAAH,EAAAc,IACAvW,EAAAO,MAAAwV,KAAAN,EAAAG,EAAAW,GAGAd,CAGA,IAAAa,GAAAlV,KAAAC,OAAAuU,EAAAW,GAAA,EAOA,OALAvW,GAAAO,MAAAqW,UAAAnB,EAAAG,EAAAU,GACAtW,EAAAO,MAAAqW,UAAAnB,EAAAa,EAAA,EAAAC,GAEAvW,EAAAO,MAAA8V,MAAAZ,EAAAG,EAAAU,EAAAC,GAEAd,GAiBAlV,EAAAsW,4BAAA,SAAApB,EAAAG,EAAAW,GACA,IAAAvW,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,OAAA,CAEA,IAAAyS,EAAAW,EAAA,OAAA,CAEA,IAAAd,EAAAtS,QAAA,EAAA,MAAA,EAKA,KAAA,GAHA2T,GAAArB,EAAAc,GACAQ,EAAAnB,EAEA3S,EAAA2S,EAAA3S,EAAAsT,EAAAtT,IACAwS,EAAAxS,IAAA6T,IACA9W,EAAAO,MAAAwV,KAAAN,EAAAxS,EAAA8T,GACAA,IAMA,OAFAR,KAAAQ,GAAA/W,EAAAO,MAAAwV,KAAAN,EAAAc,EAAAQ,GAEAA,GAiBAxW,EAAAyW,UAAA,SAAAvB,EAAAG,EAAAW,GACA,IAAAvW,EAAAwB,QAAAiU,IAAAA,EAAAtS,QAAA,EAAA,MAAA,KAEA,IAAAsS,EAAAtS,QAAA,GAAAyS,IAAAW,EAAA,MAAA,KAEA,IAAAX,EAAAW,EAAA,CACA,GAAAU,GAAAjX,EAAAO,MAAAsW,4BAAApB,EAAAG,EAAAW,EAEAvW,GAAAO,MAAAyW,UAAAvB,EAAAG,EAAAqB,EAAA,GACAjX,EAAAO,MAAAyW,UAAAvB,EAAAwB,EAAA,EAAAV,GAGA,MAAAd,IAeAlV,EAAA+I,OAAA,SAAAmM,EAAApO,GACA,IAAArH,EAAAwB,QAAAiU,GAAA,KAAA,IAAAtT,WAAA,sDAEA,IAAA+U,GAAAzB,EAAA/R,MAAA,GACAiB,EAAApE,EAAAoP,QAAAuH,EAAA7P,EAGA,OAFA1C,IAAA,GAAAuS,EAAAC,OAAAxS,EAAA,GAEAuS,GAeA3W,EAAA6W,aAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAvX,EAAAkB,UAAAmW,KAAArX,EAAAkB,UAAAoW,GACA,KAAA,IAAAnV,WAAA,8EAGA,IAAA,IAAAyB,UAAAT,OAAA,KAAAK,OAAA,8CAGA,KAAA,GADAiS,MAAA+B,KACAvU,EAAA,EAAAA,EAAAoU,IAAApU,EAAA,CACAuU,IAEA,KAAA,GAAApB,GAAA,EAAAA,EAAAkB,IAAAlB,EACAoB,EAAApB,GAAAmB,CAGA9B,GAAAxS,GAAAuU,EAGA,MAAA/B,IAeAlV,EAAAkX,cAAA,SAAAC,EAAArQ,GACA,IAAArH,EAAAwB,QAAAkW,IAAAA,EAAAvU,QAAA,EAAA,OAAA,CAMA,KAJA,GAEAwU,GAFAC,EAAA,EACAC,EAAAH,EAAAvU,OAAA,EAGAyU,GAAAC,GAAA,CAGA,GAFAF,EAAAvW,KAAAC,OAAAuW,EAAAC,GAAA,GAEAxQ,IAAAqQ,EAAAC,GACA,MAAAA,EAGAtQ,GAAAqQ,EAAAC,GACAE,EAAAF,EAAA,EAGAC,EAAAD,EAAA,EAKA,OAAA,GAoBApX,EAAAuX,0BAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAjY,EAAAwB,QAAAuW,IAAAA,EAAA5U,QAAA,EAAA,MAAA,KAEA,KAAAnD,EAAAsB,SAAA0W,GAAA,MAAA,KAGA,KAAA,GADArX,GAAAiF,EAAA,KACA3C,EAAA,EAAAC,EAAA6U,EAAA5U,OAAAF,EAAAC,IAAAD,EAEA,GADAtC,EAAAoX,EAAA9U,GACAtC,EAAA0B,eAAA2V,GAEA,GAAAhY,EAAA8B,SAAAmW,IACA,GAAAA,EAAAnO,KAAAnJ,EAAAqX,IAAA,CACApS,EAAAjF,CACA,YAIA,IAAAA,EAAAqX,KAAAC,EAAA,CACArS,EAAAjF,CACA,OAKA,MAAAiF,IAYApF,EAAA0X,qBAAA,SAAAC,GAGA,GAFA,kBAAAC,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,KAEAF,EAAA,OAAA,CAEA,IAAAG,GAAAH,EAAAI,uBACA,OACAD,GAAAE,KAAA,GACAF,EAAAG,MAAA,GACAH,EAAAI,SAAA7Y,EAAA8Y,aAAA3M,SAAA4M,gBAAAC,eACAP,EAAAQ,QAAAjZ,EAAAkZ,YAAA/M,SAAA4M,gBAAAI,cAaAxY,EAAAyY,sBAAA,SAAAd,GAGA,GAFA,kBAAAC,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,KAEAF,EAAA,OAAA,CAEA,IAAAG,GAAAH,EAAAI,wBACAW,EAAArZ,EAAA8Y,aAAA3M,SAAA4M,gBAAAC,aACAM,EAAAtZ,EAAAkZ,YAAA/M,SAAA4M,gBAAAI,YAGAI,EAAAd,EAAAE,KAAAU,GAAAZ,EAAAE,IAAAF,EAAAxF,QAAA,EACAuG,EAAAf,EAAAG,MAAAU,GAAAb,EAAAG,KAAAH,EAAAzF,OAAA,CAEA,OAAAuG,IAAAC,GAcA5Y,EAAA6Y,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA1N,SAAAC,cAAA,SACAyN,GAAArJ,KAAA,kBAEA,kBAAAoJ,KACA,SAAAC,EAAAC,mBACAD,EAAAE,OAAAH,EAGAC,EAAAC,mBAAA,WACA,WAAAD,EAAAG,YAAA,aAAAH,EAAAG,aACAH,EAAAC,mBAAA,KACAF,OAMAC,EAAAI,IAAAP,CAEA,IAAApB,GAAAqB,CAGA,IAFA,kBAAApB,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,IAEAF,EACAA,EAAA4B,YAAAL,OAEA,CACA,GAAAM,GAAAhO,SAAAiO,qBAAA,UAAA,EACAD,GAAAE,WAAAC,aAAAT,EAAAM,KAOAha,EAAAE,SAAAA,EACAF,EAAAC,SAAAA,EACAD,EAAAG,QAAAA,EACAH,EAAAI,OAAAA,EACAJ,EAAAK,KAAAA,EACAL,EAAAM,KAAAA,EACAN,EAAAO,MAAAA,EACAP,EAAAQ,QAAAA,EACAR,EAAAS,KAAAA,EAEA,mBAAA2Z,SACA,mBAAAC,SAAAA,OAAAD,UACAA,QAAAC,OAAAD,QAAApa,GAEA,kBAAAsa,SAAAA,OAAAC,IACAD,OAAA,SAAA,WACA,MAAAta,KAGAH,EAAAG,IAAAA","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.56\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2017 Hyun-Seok.Kim, dragmove@gmail.com\n */\n(function () {\r\n  'use strict';\r\n\r\n  // Establish the global object, `window` (`self`) in the browser, `global`\r\n  // on the server, or `this` in some virtual machines. We use `self`\r\n  // instead of `window` for `WebWorker` support.\r\n  var global = typeof self == 'object' && self.self === self && self ||\r\n    typeof global == 'object' && global.global === global && global ||\r\n    this ||\r\n    {};\r\n\r\n  var aid = {},\r\n    operator = {},\r\n    platform = {},\r\n    browser = {},\r\n    string = {},\r\n    math = {},\r\n    date = {},\r\n    array = {},\r\n    element = {},\r\n    file = {};\r\n\r\n  /**\r\n   * get object is null/undefined or other\r\n   *\r\n   * @static\r\n   * @method existy\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.existy(undefined) ); // false\r\n   * console.log( aid.existy(null) ); // false\r\n   * console.log( aid.existy('') ); // true\r\n   */\r\n  aid.existy = function existy(obj) {\r\n    return obj != null;\r\n  };\r\n\r\n  /**\r\n   * check object is defined\r\n   *\r\n   * @static\r\n   * @method isDefined\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isDefined(undefined) ); // false\r\n   * console.log( aid.isDefined(null) ); // false\r\n   * console.log( aid.isDefined(0) ); // true\r\n   */\r\n  aid.isDefined = function isDefined(obj) {\r\n    if (obj === null || typeof obj === 'undefined') return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * check object type is Boolean\r\n   *\r\n   * @static\r\n   * @method isBoolean\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isBoolean(false) ); // true\r\n   */\r\n  aid.isBoolean = function (obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === Boolean);\r\n  };\r\n\r\n  /**\r\n   * check object type is Number\r\n   *\r\n   * @static\r\n   * @method isNumber\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isNumber(-1) ); // true\r\n   */\r\n  aid.isNumber = function isNumber(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === Number);\r\n  };\r\n\r\n  /**\r\n   * check object type is Integer Number\r\n   *\r\n   * @static\r\n   * @method isInteger\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isInteger(-1) ); // true\r\n   */\r\n  aid.isInteger = function (obj) {\r\n    if (!aid.isNumber(obj)) return false;\r\n\r\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n    return (isFinite(obj) && Math.floor(obj) === obj);\r\n  };\r\n\r\n  /**\r\n   * check object type is String\r\n   *\r\n   * @static\r\n   * @method isString\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isString('') ); // true\r\n   */\r\n  aid.isString = function isString(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === String);\r\n  };\r\n\r\n  /**\r\n   * check object type is Array\r\n   *\r\n   * @static\r\n   * @method isArray\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isArray([]) ); // true\r\n   */\r\n  aid.isArray = function isArray(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === Array);\r\n  };\r\n\r\n  /**\r\n   * check object type is Object\r\n   *\r\n   * @static\r\n   * @method isObject\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isObject({}) ); // true\r\n   */\r\n  aid.isObject = function isObject(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === Object);\r\n  };\r\n\r\n  /**\r\n   * check object type is Function\r\n   *\r\n   * @static\r\n   * @method isFunction\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isFunction(function(){}) ); // true\r\n   */\r\n  aid.isFunction = function isFunction(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === Function);\r\n  };\r\n\r\n  /**\r\n   * check object type is RegExp\r\n   *\r\n   * @static\r\n   * @method isRegExp\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\r\n   * console.log( aid.isRegExp(/^aid/) ); // true\r\n   */\r\n  aid.isRegExp = function isRegExp(obj) {\r\n    if (!aid.isDefined(obj)) return false;\r\n\r\n    return (obj.constructor === RegExp);\r\n  };\r\n\r\n  /**\r\n   * extend function\r\n   *\r\n   * @static\r\n   * @method extend\r\n   * @param {Object} prototype of class function, or object has variables or methods.\r\n   * @param {Object} object has variables or methods\r\n   * @example\r\n   * function Destination() {\r\n   *   this.name = 'destination';\r\n   *   this.type = 'json';\r\n   * };\r\n   *\r\n   * var source = {\r\n   *   getName: function() { return this.name; },\r\n   *   getType: function() { return this.type; }\r\n   * };\r\n   *\r\n   * aid.extend(Destination.prototype, source);\r\n   *\r\n   * var destination = new Destination();\r\n   * console.log( destination.getName() ); // 'destination'\r\n   * console.log( destination.getType() ); // 'json'\r\n   */\r\n  aid.extend = function extend(destination, source) {\r\n    if (!(destination instanceof Object) || !(typeof destination === 'object')) {\r\n      throw TypeError('destination parameter type of aid.extend() must be instance of Object, and object type.');\r\n    }\r\n\r\n    if (!(typeof source === 'object')) throw TypeError('source parameter type of aid.extend() must be object type.');\r\n\r\n    for (var key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        destination[key] = source[key];\r\n      }\r\n    }\r\n\r\n    return destination;\r\n  };\r\n\r\n  /**\r\n   * inherit Class function\r\n   *\r\n   * @static\r\n   * @method inherit\r\n   * @param {class} ChildClass - child class function\r\n   * @param {class} ParentClass - parent class function\r\n   * @example\r\n   */\r\n  aid.inherit = (function () {\r\n    // use closure, protect gabarge collection.\r\n    var F = function () {\r\n    };\r\n\r\n    return function inherit(ChildClass, ParentClass) {\r\n      F.prototype = ParentClass.prototype;\r\n\r\n      ChildClass.prototype = new F();\r\n      ChildClass.prototype.constructor = ChildClass;\r\n      ChildClass.super = ParentClass.prototype;\r\n    };\r\n  }());\r\n\r\n  /**\r\n   * create namespace\r\n   *\r\n   * @static\r\n   * @method namespace\r\n   * @param {String} namespace\r\n   * @param {Object} parent\r\n   * @returns {Object} return object\r\n   * @example\r\n   * aid.namespace('first.second.third'); // create first.second.third object\r\n   */\r\n  aid.namespace = function (namespace, parent) {\r\n    if (!aid.isString(namespace)) throw new TypeError('namespace parameter type of aid.namespace() must be String.');\r\n\r\n    if (!(aid.isObject(parent) || !aid.isDefined(parent))) {\r\n      throw new TypeError('parent parameter type of aid.namespace() must be Object or null or undefined.');\r\n    }\r\n\r\n    var ns = parent || global;\r\n\r\n    if (namespace) {\r\n      var parts = namespace.split('.');\r\n\r\n      for (var i = 0, max = parts.length; i < max; i++) {\r\n        if (!ns[parts[i]]) ns[parts[i]] = {};\r\n        ns = ns[parts[i]];\r\n      }\r\n    }\r\n\r\n    return ns;\r\n  };\r\n\r\n  /**\r\n   * borrow method from donor object\r\n   *\r\n   * @static\r\n   * @method borrow\r\n   * @param {Object} borrower\r\n   * @param {Object} donor\r\n   * @param {String} functionName\r\n   * @example\r\n   * var borrower = {}, donor = { say: function() { return 'hello, world'; } };\r\n   * aid.borrow(borrower, donor, 'say');\r\n   * console.log( borrower.say() ); // 'hello, world'\r\n   */\r\n  aid.borrow = function borrow(borrower, donor, functionName) {\r\n    if (!aid.isObject(borrower) || !aid.isObject(donor)) throw new TypeError('borrower, donor parameter type of aid.borrow() must be Object.');\r\n\r\n    if (!aid.isString(functionName)) throw new TypeError('functionName parameter type of aid.borrow() must be String.');\r\n\r\n    if (!aid.isDefined(donor[functionName])) throw new Error('donor object parameter of aid.borrow() has not function with functionName.');\r\n\r\n    if (aid.isDefined(borrower[functionName])) throw new Error('borrower object parameter of aid.borrow() already has function with functionName.');\r\n\r\n    borrower[functionName] = function () {\r\n      var args = Array.prototype.slice.call(arguments);\r\n      return donor[functionName].apply(this, args);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function bind context and parameters\r\n   *\r\n   * @static\r\n   * @method bind\r\n   * @param {Function} func\r\n   * @param {Object} context\r\n   * @returns {Function} return function\r\n   * @example\r\n   * this.title = 'global - aid.js';\r\n   * var obj = { title: 'obj - aid.js', getTitle: function() { return this.title; } };\r\n   * var getObjTitle = bind(obj.getTitle, obj), getGlobalTitle = bind(obj.getTitle, window);\r\n   * console.log( getObjTitle() ); // 'obj - aid.js';\r\n   * console.log( getGlobalTitle() ); // 'global - aid.js';\r\n   */\r\n  aid.bind = function bind(func, context) {\r\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.bind() must be Function.');\r\n\r\n    return function () {\r\n      return func.apply(context, arguments);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function composed function_a and function_b\r\n   *\r\n   * @static\r\n   * @method compose\r\n   * @param {Function} func_a\r\n   * @param {Function} func_b\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  aid.compose = function compose(func_a, func_b) {\r\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\r\n      throw new TypeError('func_a, func_b parameter type of aid.compose() must be Function.');\r\n    }\r\n\r\n    return function () {\r\n      return func_a(func_b.apply(null, arguments));\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function negate object parameter\r\n   *\r\n   * @static\r\n   * @method not\r\n   * @param {Function} func\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var isNotNaN = aid.not(isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  aid.not = function not(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.not() must be Function.');\r\n\r\n    return function (obj) {\r\n      return !func(obj);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * each method for data can loop\r\n   *\r\n   * @static\r\n   * @method each\r\n   * @param {Array or String} dataCanLoop\r\n   * @param {Function} func\r\n   * @param {Object} context\r\n   * @example\r\n   * var result = [];\r\n   * aid.each('aid.js', function(v) { result.push(v); }, null);\r\n   * console.log( result.join('') ); // 'aid.js'\r\n   */\r\n  aid.each = function each(dataCanLoop, func, context) {\r\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) {\r\n      throw new TypeError('dataCanLoop parameter type of aid.each() must be Array or String.');\r\n    }\r\n\r\n    var _context = (aid.existy(context)) ? context : null;\r\n\r\n    for (var i = 0, max = dataCanLoop.length; i < max; i++) {\r\n      func.call(_context, dataCanLoop[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * check object is truthy\r\n   *\r\n   * @static\r\n   * @method truthy\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.truthy(true) ); // true\r\n   * console.log( aid.truthy([]) ); // true\r\n   * console.log( aid.truthy(0) ); // false\r\n   * console.log( aid.truthy('') ); // false\r\n   */\r\n  aid.truthy = function truthy(obj) {\r\n    return !!obj;\r\n  };\r\n\r\n  /**\r\n   * check object is falsy\r\n   *\r\n   * @static\r\n   * @method falsy\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.falsy(true) ); // false\r\n   * console.log( aid.falsy([]) ); // false\r\n   * console.log( aid.falsy(0) ); // true\r\n   * console.log( aid.falsy('') ); // true\r\n   */\r\n  aid.falsy = function falsy(obj) {\r\n    return !!!obj;\r\n  };\r\n\r\n  /**\r\n   * get indexed value of array or string\r\n   *\r\n   * @static\r\n   * @method nth\r\n   * @param {Array or String} dataCanLoop\r\n   * @param {Number} index\r\n   * @example\r\n   * console.log( aid.nth('string', 1) ); // 't'\r\n   * console.log( aid.nth('string', -1) ); // null\r\n   * console.log( aid.nth([0, 'str', true], 2) ); // true\r\n   * console.log( aid.nth([0, 'str', true], 99) ); // null\r\n   */\r\n  aid.nth = function nth(dataCanLoop, index) {\r\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) {\r\n      throw new TypeError('dataCanLoop parameter type of aid.nth() must be Array or String.');\r\n    }\r\n\r\n    if (!aid.isInteger(index)) throw new TypeError('index parameter type of aid.nth() must be Integer Number.');\r\n\r\n    return (index < 0 || index > dataCanLoop.length - 1) ? null : dataCanLoop[index];\r\n  };\r\n\r\n  /**\r\n   * check all arguments are true\r\n   *\r\n   * @static\r\n   * @method allOf\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.allOf(true, true) ); // true\r\n   * console.log( aid.allOf(true, false) ); // false\r\n   */\r\n  aid.allOf = function allOf(/*args*/) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n\r\n    return args.every(function (val) {\r\n      return (val === true);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * check some argument is true\r\n   *\r\n   * @static\r\n   * @method anyOf\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( anyOf(true, false) ); // true\r\n   * console.log( anyOf(false, false) ); // false\r\n   */\r\n  aid.anyOf = function anyOf(/*args*/) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n\r\n    return args.some(function (val) {\r\n      return (val === true);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * return function always return constant value\r\n   * http://underscorejs.org/#constant\r\n   *\r\n   * @static\r\n   * @method constant\r\n   * @param {Object} obj\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var obj = {name: 'aid.js'};\r\n   * console.log( aid.constant(obj)() === obj ); // true\r\n   */\r\n  aid.constant = function constant(obj) {\r\n    return function () {\r\n      return obj;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return function pluck field of object, array, string\r\n   *\r\n   * @static\r\n   * @method plucker\r\n   * @param {String or Number} field of object, array, string\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var getTitle = aid.plucker('title');\r\n   * var obj = {title: 'aid.js', description: 'A bundle of Javascript util Library for help developers. No dependency to other Libraries.'};\r\n   * console.log( getTitle(obj) ); // 'aid.js'\r\n   *\r\n   * var getFirst = aid.plucker(0);\r\n   * var str = 'aid.js';\r\n   * console.log( getFirst(str) ); // 'a'\r\n   *\r\n   * var getLength = aid.plucker('length');\r\n   * var arr = [1, 2, 3, 4, 5];\r\n   * console.log( getLength(arr) ); // 5\r\n   */\r\n  aid.plucker = function plucker(field) {\r\n    if (!(aid.isString(field) || aid.isNumber(field))) {\r\n      throw new TypeError('field parameter type of aid.plucker() must be String or Number.');\r\n    }\r\n\r\n    return function (obj) {\r\n      if (!(aid.isObject(obj) || aid.isArray(obj) || aid.isString(obj))) {\r\n        throw new TypeError('obj parameter type of function (get from aid.plucker()) must be Object or Array or String.');\r\n      }\r\n\r\n      return obj[field];\r\n    };\r\n  };\r\n\r\n  /**\r\n   * return best(optimized by condition function) value.\r\n   *\r\n   * @static\r\n   * @method best\r\n   * @param {Function} condition function to find best value.\r\n   * @param {Array} array\r\n   * @example\r\n   * console.log( aid.best(function(x, y) { return x > y; }, [2, 4, 1, 5, 3]) ); // 5\r\n   */\r\n  aid.best = function best(conditionFunc, array) {\r\n    if (!aid.isFunction(conditionFunc)) throw new TypeError('conditionFunc parameter type of aid.best() must be Function.');\r\n\r\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.best() must be Array.');\r\n\r\n    return array.reduce(function (previousValue, currentValue) {\r\n      return conditionFunc(previousValue, currentValue) ? previousValue : currentValue;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * return array has values filtered\r\n   *\r\n   * @static\r\n   * @method iterateUntil\r\n   * @param {Function} function return value\r\n   * @param {Function} function has condition\r\n   * @param {Object} initial value\r\n   * @returns {Array} return array has values filtered.\r\n   * @example\r\n   * console.log( aid.iterateUntil(function(n) { return n + n; }, function(n) { return n <= 1042 }, 1) ); // [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\r\n   */\r\n  aid.iterateUntil = function iterateUntil(calculateFunc, conditionFunc, initialValue) {\r\n    if (!aid.isFunction(calculateFunc)) throw new TypeError('calculateFunc parameter type of aid.iterateUntil() must be Function.');\r\n\r\n    if (!aid.isFunction(conditionFunc)) throw new TypeError('conditionFunc parameter type of aid.iterateUntil() must be Function.');\r\n\r\n    var array = [],\r\n      result = calculateFunc(initialValue);\r\n\r\n    while (conditionFunc(result)) {\r\n      array.push(result);\r\n      result = calculateFunc(result);\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  /**\r\n   * curry function can use one parameter\r\n   *\r\n   * @static\r\n   * @method curry\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   */\r\n  aid.curry = function curry(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry() must be Function.');\r\n\r\n    return function (arg) {\r\n      return func(arg);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * curry function can use two parameter\r\n   *\r\n   * @static\r\n   * @method curry2\r\n   * @param {Function} function\r\n   * @returns {Function} return function\r\n   * @example\r\n   * var parseBinaryStr = aid.curry2(parseInt)(2);\r\n   * console.log( parseBinaryStr('111') ); // 7\r\n   */\r\n  aid.curry2 = function curry2(func) {\r\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry2() must be Function.');\r\n\r\n    return function (secondArg) {\r\n      return function (firstArg) {\r\n        return func(firstArg, secondArg);\r\n      };\r\n    };\r\n  };\r\n\r\n  /**\r\n   * curry function for variadic functions.\r\n   *\r\n   * @static\r\n   * @method curryAll\r\n   * @param {Function} function\r\n   * @param {Number} minimum number of arguments to curry\r\n   * @returns {Function} return function\r\n   * @example\r\n   * console.log( curryAll(Math.max, 2)(1, 99) ); // 99\r\n   * console.log( curryAll(Math.max, 2)(1)(99) ); // 99\r\n   */\r\n  aid.curryAll = function curryAll(func, curryArgsNum) {\r\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curryAll() must be Function.');\r\n\r\n    var arity = curryArgsNum || func.length;\r\n\r\n    return function curried() {\r\n      var args = Array.prototype.slice.call(arguments),\r\n        context = this;\r\n\r\n      return args.length >= arity ?\r\n        func.apply(context, args) :\r\n        function () {\r\n          var rest = Array.prototype.slice.call(arguments);\r\n          return curried.apply(context, args.concat(rest));\r\n        };\r\n    };\r\n  };\r\n\r\n  /**\r\n   * rest\r\n   * // refer to _.rest function of underscore.js - https://github.com/jashkenas/underscore/blob/master/underscore.js\r\n   *\r\n   * @static\r\n   * @method rest\r\n   * @param {Array} array\r\n   * @param {Number} begin index to slice arguments.\r\n   * @returns {Array} return array\r\n   * @example\r\n   * var array = [1, 2, 3, 4, 5];\r\n   * console.log( aid.rest(array) ); // [2, 3, 4, 5]\r\n   * console.log( aid.rest(array, 2) ); // [3, 4, 5]\r\n   */\r\n  aid.rest = function rest(array, beginIndex) {\r\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.rest() must be Array.');\r\n\r\n    var begin = (!aid.existy(beginIndex)) ? 1 : beginIndex;\r\n\r\n    return Array.prototype.slice.call(array, begin);\r\n  };\r\n\r\n  /**\r\n   * pipeline\r\n   *\r\n   * @static\r\n   * @method pipeline\r\n   * @param {Object} seed\r\n   * @returns {Object} return value\r\n   * @example\r\n   * function negative(n) { return n * -1; }\r\n   * function half(n) { return n / 2; }\r\n   * function negativeHalf(n) { return aid.pipeline(n, negative, half); }\r\n   * console.log( aid.pipeline(80, negative) ); // -80\r\n   * console.log( negativeHalf(80) ); // 80 * -1 / 2\r\n   */\r\n  aid.pipeline = function pipeline(seed /* args */) {\r\n    var restArgs = aid.rest(Array.prototype.slice.call(arguments));\r\n\r\n    aid.each(restArgs, function (value) {\r\n      if (!aid.isFunction(value)) throw new TypeError('rest parameters type of aid.pipeline() must be Function.');\r\n    }, null);\r\n\r\n    return restArgs.reduce(function (prev, current) {\r\n      return current(prev);\r\n    }, seed);\r\n  };\r\n\r\n  /**\r\n   * lazyChain\r\n   *\r\n   * @static\r\n   * @method lazyChain\r\n   * @param {Object} object\r\n   * @returns {Object} return {invoke, force}\r\n   * @example\r\n   * var lazy = aid.lazyChange([2, 1, 3]).invoke('concat', [7, 7, 8, 9, 0]).invoke('sort');\r\n   * console.log( lazy.force() ); // [0, 1, 2, 3, 7, 7, 8, 9]\r\n   *\r\n   * // with aid.pipeline\r\n   * function double(array) { return array.map(function(v) { return v * 2; }); }\r\n   * function lazyReverseAndNegative(array) { return aid.lazyChain(array).invoke('reverse').invoke('map', function(v) { return v * -1; }); }\r\n   * console.log( aid.pipeline([1, 2, 3], double, lazyReverseAndNegative).force() ); // [-6, -4, -2]\r\n   */\r\n  aid.lazyChain = function lazyChain(obj) {\r\n    var calls = [];\r\n\r\n    return {\r\n      invoke: function (methodName /*, args */) {\r\n        var args = aid.rest(Array.prototype.slice.call(arguments));\r\n\r\n        calls.push(function (target) {\r\n          var method = target[methodName];\r\n\r\n          if (!aid.isDefined(method)) {\r\n            throw Error(target.constructor.name + ' has not ' + methodName + ' method');\r\n          }\r\n\r\n          return method.apply(target, args);\r\n        });\r\n\r\n        return this;\r\n      },\r\n\r\n      force: function () {\r\n        return calls.reduce(function (ret, thunk) {\r\n          return thunk(ret);\r\n        }, obj);\r\n      }\r\n    };\r\n  };\r\n\r\n  /*\r\n   * Data Structure\r\n   */\r\n  // Stack\r\n  var Stack = function () {\r\n    this._dataStore = [];\r\n    this._top = 0;\r\n  };\r\n\r\n  Stack.prototype.push = function push(element) {\r\n    if (this._top < 0) this._top = 0;\r\n    this._dataStore[this._top++] = element;\r\n  };\r\n\r\n  Stack.prototype.pop = function pop() {\r\n    return this._dataStore[--this._top];\r\n  };\r\n\r\n  Stack.prototype.peek = function peek() {\r\n    return this._dataStore[this._top - 1];\r\n  };\r\n\r\n  Stack.prototype.length = function length() {\r\n    return (this._top > 0) ? this._top : 0;\r\n  };\r\n\r\n  Stack.prototype.clear = function clear() {\r\n    this._dataStore = [];\r\n    this._top = 0;\r\n  };\r\n\r\n  aid.createStack = function () {\r\n    return new Stack();\r\n  };\r\n\r\n  // Queue\r\n  var Queue = function () {\r\n    this._dataStore = [];\r\n  };\r\n\r\n  Queue.prototype.enqueue = function enqueue(element) {\r\n    this._dataStore.push(element);\r\n  };\r\n\r\n  Queue.prototype.dequeue = function dequeue() {\r\n    return this._dataStore.shift();\r\n  };\r\n\r\n  Queue.prototype.front = function front() {\r\n    return this._dataStore[0];\r\n  };\r\n\r\n  Queue.prototype.rear = function rear() {\r\n    return this._dataStore[this._dataStore.length - 1];\r\n  };\r\n\r\n  Queue.prototype.length = function length() {\r\n    return this._dataStore.length;\r\n  };\r\n\r\n  Queue.prototype.isEmpty = function isEmpty() {\r\n    if (this._dataStore.length <= 0) return true;\r\n    return false;\r\n  };\r\n\r\n  aid.createQueue = function createQueue() {\r\n    return new Queue();\r\n  };\r\n\r\n  // LinkedList node\r\n  var LinkedListNode = function (data) {\r\n    this.data = data;\r\n    this.next = null;\r\n  };\r\n\r\n  // LinkedList\r\n  var LinkedList = function () {\r\n    this.head = new LinkedListNode('head');\r\n  };\r\n\r\n  LinkedList.prototype.find = function find(data) {\r\n    var node = this.head;\r\n    while (node.data !== data) {\r\n      node = node.next;\r\n      if (node === null) return node;\r\n    }\r\n    return node;\r\n  };\r\n\r\n  LinkedList.prototype.findPrevious = function findPrevious(data) {\r\n    if (this.head.data === data) return null;\r\n\r\n    var node = this.head;\r\n    while ((node.next !== null) && (node.next.data !== data)) {\r\n      node = node.next;\r\n    }\r\n    return node;\r\n  };\r\n\r\n  LinkedList.prototype.insert = function insert(data, prevNodeData) {\r\n    var insertNode = new LinkedListNode(data),\r\n      prevNode = this.find(prevNodeData);\r\n\r\n    insertNode.next = prevNode.next;\r\n    prevNode.next = insertNode;\r\n  };\r\n\r\n  LinkedList.prototype.remove = function remove(data) {\r\n    var prevNode = this.findPrevious(data);\r\n\r\n    if (prevNode.next !== null) {\r\n      prevNode.next = prevNode.next.next;\r\n    }\r\n  };\r\n\r\n  LinkedList.prototype.getAllNodes = function getAllNodes() {\r\n    var nodes = [this.head],\r\n      node = this.head;\r\n\r\n    while (node.next !== null) {\r\n      nodes.push(node.next);\r\n      node = node.next;\r\n    }\r\n    return nodes;\r\n  };\r\n\r\n  aid.createLinkedList = function createLinkedList() {\r\n    return new LinkedList();\r\n  };\r\n\r\n  /**\r\n   * plus(+) operator\r\n   *\r\n   * @static\r\n   * @method +\r\n   * @param {Object} object_a\r\n   * @param {Object} object_b\r\n   * @returns {Object} return object\r\n   * @example\r\n   * var plus = aid.operator['+'];\r\n   * console.log( plus(1, 2) ); // 3\r\n   */\r\n  operator['+'] = function plus(object_a, object_b) {\r\n    return object_a + object_b;\r\n  };\r\n\r\n  /**\r\n   * identity(===) operator\r\n   *\r\n   * @static\r\n   * @method ===\r\n   * @param {Object} object_a\r\n   * @param {Object} object_b\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * var identity = aid.operator['==='];\r\n   * console.log( identity(1, 1) ); // true\r\n   */\r\n  operator['==='] = function identity(object_a, object_b) {\r\n    return object_a === object_b;\r\n  };\r\n\r\n  /**\r\n   * logical not(!) operator\r\n   *\r\n   * @static\r\n   * @method !\r\n   * @param {Object} obj\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\r\n   * console.log( isNotNaN(0) ); // true\r\n   */\r\n  operator['!'] = function not(obj) {\r\n    return !obj;\r\n  };\r\n\r\n  /**\r\n   * is window platform\r\n   *\r\n   * @static\r\n   * @method isWindow\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\r\n   */\r\n  platform.isWindow = function isWindow(userAgent) {\r\n    return /Windows/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Macintosh platform\r\n   *\r\n   * @static\r\n   * @method isMac\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\r\n   */\r\n  platform.isMac = function isMac(userAgent) {\r\n    return /Macintosh/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is iOS platform\r\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\r\n   *\r\n   * @static\r\n   * @method isIOS\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\r\n   */\r\n  platform.isIOS = function isIOS(userAgent) {\r\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\r\n  };\r\n\r\n  /**\r\n   * is Android platform\r\n   *\r\n   * @static\r\n   * @method isAndroid\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\r\n   */\r\n  platform.isAndroid = function (userAgent) {\r\n    return /android/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is IE browser\r\n   *\r\n   * @static\r\n   * @method isIE\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\r\n   */\r\n  browser.isIE = function (userAgent) {\r\n    return /msie/i.test(userAgent) || /trident/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Edge browser\r\n   *\r\n   * @static\r\n   * @method isEdge\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\r\n   */\r\n  browser.isEdge = function isEdge(userAgent) {\r\n    return ( /Gecko/i.test(userAgent) && /Edge/i.test(userAgent) );\r\n  };\r\n\r\n  /**\r\n   * is Firefox browser\r\n   *\r\n   * @static\r\n   * @method isFF\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\r\n   */\r\n  browser.isFF = function isFF(userAgent) {\r\n    return /Firefox/i.test(userAgent);\r\n  };\r\n\r\n  /**\r\n   * is Opera browser\r\n   *\r\n   * @static\r\n   * @method isOpera\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\r\n   */\r\n  browser.isOpera = function isOpera(userAgent) {\r\n    return ( /Opera/i.test(userAgent) || /OPR\\//i.test(userAgent) );\r\n  };\r\n\r\n  /**\r\n   * is Chrome browser\r\n   *\r\n   * @static\r\n   * @method isChrome\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\r\n   */\r\n  browser.isChrome = function isChrome(userAgent) {\r\n    return ( !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/i.test(userAgent) );\r\n  };\r\n\r\n  /**\r\n   * is Safari browser\r\n   *\r\n   * @static\r\n   * @method isSafari\r\n   * @param {String} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\r\n   */\r\n  browser.isSafari = function isSafari(userAgent) {\r\n    return ( !/Chrome/i.test(userAgent) && /Safari/i.test(userAgent) );\r\n  };\r\n\r\n  /**\r\n   * get IE version\r\n   *\r\n   * @static\r\n   * @method getIEVersion\r\n   * @param {string} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getIEVersion = function getIEVersion(userAgent) {\r\n    if (browser.isIE(userAgent)) {\r\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Firefox version\r\n   *\r\n   * @static\r\n   * @method getFFVersion\r\n   * @param {string} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getFFVersion = function getFFVersion(userAgent) {\r\n    if (browser.isFF(userAgent)) {\r\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Opera version\r\n   *\r\n   * @static\r\n   * @method getOperaVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getOperaVersion = function (userAgent) {\r\n    if (browser.isOpera(userAgent)) {\r\n      if (/Opera/i.test(userAgent)) {\r\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n      }\r\n\r\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Chrome version\r\n   *\r\n   * @static\r\n   * @method getChromeVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getChromeVersion = function getChromeVersion(userAgent) {\r\n    if (browser.isChrome(userAgent)) {\r\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get Safari version\r\n   *\r\n   * @static\r\n   * @method getSafariVersion\r\n   * @param {String} userAgent\r\n   * @returns {Number} return version float number\r\n   * @example\r\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\r\n   */\r\n  browser.getSafariVersion = function getSafariVersion(userAgent) {\r\n    if (browser.isSafari(userAgent)) {\r\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get IE browser Compatibility info object.\r\n   *\r\n   * @static\r\n   * @method getIECompatibility\r\n   * @param {String} optionUserAgent\r\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\r\n   * @example\r\n   * console.log( aid.browser.getIECompatibility() );\r\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\r\n   */\r\n  browser.getIECompatibility = function getIECompatibility(optionUserAgent) {\r\n    var ua = (optionUserAgent) ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\r\n      regex_msie = /msie/i,\r\n      regex_msie7 = /msie 7/i,\r\n      regex_msie8 = /msie 8/i,\r\n      regex_msie9 = /msie 9/i,\r\n      regex_msie10 = /msie 10/i,\r\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\r\n      regex_trident = /trident/i,\r\n      regex_trident7 = /trident\\/7/;\r\n\r\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\r\n      // not IE\r\n      return {\r\n        isIE: false,\r\n        isCompatibilityMode: false,\r\n        compatibilityVersion: -1\r\n      };\r\n    }\r\n\r\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\r\n      // IE11 standard\r\n      return {\r\n        isIE: true,\r\n        isCompatibilityMode: false,\r\n        compatibilityVersion: -1\r\n      };\r\n    }\r\n\r\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\r\n\r\n      // IE11 compatibility mode\r\n      if (regex_msie7.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 7\r\n        };\r\n\r\n      if (regex_msie8.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 8\r\n        };\r\n\r\n      if (regex_msie9.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 9\r\n        };\r\n\r\n      if (regex_msie10.test(ua))\r\n        return {\r\n          isIE: true,\r\n          isCompatibilityMode: true,\r\n          compatibilityVersion: 10\r\n        };\r\n    }\r\n\r\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\r\n      // IE8 ~ 10 compatibility mode\r\n      return {\r\n        isIE: true,\r\n        isCompatibilityMode: true,\r\n        compatibilityVersion: 7\r\n      };\r\n    }\r\n\r\n    // IE8 ~ 10 standard\r\n    return {\r\n      isIE: true,\r\n      isCompatibilityMode: false,\r\n      compatibilityVersion: -1\r\n    };\r\n  };\r\n\r\n  /**\r\n   * is browser support draggable attribute of element.\r\n   *\r\n   * @static\r\n   * @method isSupportDraggable\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportDraggable() );\r\n   */\r\n  browser.isSupportDraggable = function isSupportDraggable() {\r\n    var div = document.createElement('div');\r\n\r\n    return ('draggable' in div);\r\n  };\r\n\r\n  /**\r\n   * is browser support element methods related drag(ondragstart, ondrop, etc...).\r\n   *\r\n   * @static\r\n   * @method isSupportDragAndDrop\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportDragAndDrop() );\r\n   */\r\n  browser.isSupportDragAndDrop = function isSupportDragAndDrop() {\r\n    var div = document.createElement('div');\r\n\r\n    return ('ondragstart' in div && 'ondrop' in div);\r\n  };\r\n\r\n  /**\r\n   * is browser support html5 File API.\r\n   *\r\n   * @static\r\n   * @method isSupportFileApi\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isSupportFileApi() );\r\n   */\r\n  browser.isSupportFileApi = function isSupportFileApi() {\r\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\r\n  };\r\n\r\n  /**\r\n   * is chrome extension.\r\n   *\r\n   * @static\r\n   * @method isChromeExtension\r\n   * @param {string} userAgent\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\r\n   */\r\n  browser.isChromeExtension = function isChromeExtension(userAgent) {\r\n    if (browser.isChrome(userAgent) && global.chrome) {\r\n      if (!global.chrome.cookies) {\r\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\r\n      }\r\n\r\n      if (global.chrome.cookies) return true;\r\n\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * get cookie\r\n   *\r\n   * @static\r\n   * @method getCookie\r\n   * @param {String} key\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\r\n   */\r\n  browser.getCookie = function getCookie(key) {\r\n    var cookieArr = document.cookie.split('; '),\r\n      splitArr = [],\r\n      keyStr = '',\r\n      valueStr = '';\r\n\r\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\r\n      splitArr = cookieArr[i].split('=');\r\n      keyStr = splitArr[0];\r\n      valueStr = global.decodeURIComponent(splitArr[1]);\r\n\r\n      if (keyStr === key) return valueStr;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * set cookie\r\n   *\r\n   * @static\r\n   * @method setCookie\r\n   * @param {String} key\r\n   * @param {String} value\r\n   * @param {Number} expireSecond\r\n   * @param {String} path\r\n   * @param {String} domain\r\n   * @example\r\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\r\n   */\r\n  browser.setCookie = function setCookie(key, value, expireSecond, path, domain) {\r\n    var expires = '',\r\n      pathStr = '; path=' + ( (path) ? path : '/' ),\r\n      domainStr = (domain) ? '; domain=' + domain : '';\r\n\r\n    if (expireSecond) {\r\n      var date = new Date();\r\n      date.setTime(date.getTime() + (expireSecond * 1000));\r\n\r\n      expires = '; expires=' + date.toGMTString();\r\n    }\r\n\r\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\r\n  };\r\n\r\n  /**\r\n   * trim string\r\n   *\r\n   * @static\r\n   * @method trim\r\n   * @param {String} str\r\n   * @returns {String} return trimmed string\r\n   * @example\r\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\r\n   */\r\n  string.trim = function trim(str) {\r\n    if (!aid.isString(str)) throw new TypeError('string.trim() requires String parameter.');\r\n\r\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n  };\r\n\r\n  /**\r\n   * check string has unique characters\r\n   *\r\n   * @static\r\n   * @method hasUniqueChars\r\n   * @param {String} str\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\r\n   */\r\n  string.hasUniqueChars = function hasUniqueChars(str) {\r\n    if (!aid.isString(str)) throw new TypeError('string.hasUniqueChars() requires String parameter.');\r\n\r\n    if (!str.length) return true;\r\n\r\n    var obj = {}, char = '';\r\n    for (var i = 0, max = str.length; i < max; i++) {\r\n      char = str.charAt(i);\r\n\r\n      if (obj[char] === true) return false;\r\n      obj[char] = true;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * get extension(png, jpg ...) string.\r\n   *\r\n   * @static\r\n   * @method getFileExtension\r\n   * @param {String} fileName\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\r\n   */\r\n  string.getFileExtension = function getFileExtension(fileName) {\r\n    if (!aid.isString(fileName)) throw new TypeError('string.getFileExtension() requires String parameter.');\r\n\r\n    if (fileName.length <= 0) return '';\r\n\r\n    var lastDotIndex = fileName.lastIndexOf('.'),\r\n      extension = fileName.substr(lastDotIndex + 1);\r\n\r\n    return extension;\r\n  };\r\n\r\n  /**\r\n   * check email string.\r\n   *\r\n   * @static\r\n   * @method isEmail\r\n   * @param {String} emailStr\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\r\n   */\r\n  string.isEmail = function isEmail(emailStr) {\r\n    if (!aid.isString(emailStr)) throw new TypeError('string.isEmail() requires String parameter.');\r\n\r\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\r\n    var emailRegex = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\");\r\n    return ( emailRegex.exec(emailStr) ? true : false );\r\n  };\r\n\r\n  /**\r\n   * check iframe string.\r\n   *\r\n   * @static\r\n   * @method isIFrame\r\n   * @param {String} iframeStr\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\r\n   */\r\n  string.isIFrame = function (iframeStr) {\r\n    if (!aid.isString(iframeStr)) throw new TypeError('string.isIFrame() requires String parameter.');\r\n\r\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeStr);\r\n  };\r\n\r\n  /**\r\n   * get param value from uri.\r\n   *\r\n   * @static\r\n   * @method getUriParam\r\n   * @param {String} uri\r\n   * @param {String} parameterName\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\r\n   */\r\n  string.getUriParam = function getUriParam(uri, parameterName) {\r\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\r\n      throw new TypeError('string.getUriParam() requires String parameters.');\r\n    }\r\n\r\n    if (uri.length < 1) return '';\r\n    uri = uri.split('#')[0];\r\n\r\n    var tmpArr = uri.split('?');\r\n    if (tmpArr.length < 2) return '';\r\n\r\n    var paramStr = tmpArr[1],\r\n      params = paramStr.split('&');\r\n\r\n    var keyValueArr;\r\n    for (var i = 0, max = params.length; i < max; ++i) {\r\n      keyValueArr = params[i].split('=');\r\n\r\n      if (keyValueArr.length <= 1) keyValueArr.push('');\r\n      if (keyValueArr[0] === parameterName) return global.decodeURIComponent(keyValueArr[1]);\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * get param values from uri.\r\n   *\r\n   * @static\r\n   * @method getUriParams\r\n   * @param {String} uri\r\n   * @returns {Object} return object\r\n   * @example\r\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\r\n   */\r\n  string.getUriParams = function getUriParams(uri) {\r\n    if (!aid.isString(uri)) throw new TypeError('string.getUriParams() requires String parameter.');\r\n\r\n    if (uri.length < 1) return null;\r\n    uri = uri.split('#')[0];\r\n\r\n    var tmpArr = uri.split('?');\r\n    if (tmpArr.length < 2) return null;\r\n\r\n    var paramStr = tmpArr[1],\r\n      params = paramStr.split('&');\r\n\r\n    var keyValueArr, obj = {};\r\n    for (var i = 0, max = params.length; i < max; ++i) {\r\n      keyValueArr = params[i].split('=');\r\n      if (keyValueArr.length <= 1) return null;\r\n\r\n      obj[keyValueArr[0]] = keyValueArr[1];\r\n    }\r\n\r\n    return obj;\r\n  };\r\n\r\n  /**\r\n   * get uri combined parameters\r\n   *\r\n   * @static\r\n   * @method getUriCombinedParams\r\n   * @param {String} uri\r\n   * @param {Object} parameters\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\r\n   */\r\n  string.getUriCombinedParams = function getUriCombinedParams(uri, parameters) {\r\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getUriCombinedParams() must be String.');\r\n\r\n    if (!aid.isObject(parameters)) throw new TypeError('parameters parameter type of string.getUriCombinedParams() must be Object.');\r\n\r\n    if (!uri) return '';\r\n    if (!parameters) return uri;\r\n\r\n    var str = '';\r\n    for (var key in parameters) {\r\n      str += '&' + key + '=' + String(parameters[key]);\r\n    }\r\n\r\n    if (str === '') return uri;\r\n\r\n    var tmpArr = uri.split('#'),\r\n      hashStr = (aid.isDefined(tmpArr[1])) ? '#' + tmpArr[1] : '';\r\n\r\n    uri = tmpArr[0];\r\n    uri = ((uri.indexOf('?') >= 0) ? (uri + str) : (uri + '?' + str.substr(1))) + hashStr;\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * check youtube video id.\r\n   *\r\n   * @static\r\n   * @method isValidYoutubeVideoId\r\n   * @param {String} youtubeId\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\r\n   */\r\n  string.isValidYoutubeVideoId = function isValidYoutubeVideoId(youtubeId) {\r\n    if (!aid.isString(youtubeId)) throw new TypeError('youtubeId parameter type of string.isValidYoutubeVideoId() must be String.');\r\n\r\n    var regex = /^(\\w|-|_){11}$/;\r\n    return regex.exec(youtubeId) ? true : false;\r\n  };\r\n\r\n  /**\r\n   * check youtube uri is valid.\r\n   *\r\n   * @static\r\n   * @method getObjCheckYoutubeURI\r\n   * @param {String} uri\r\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\r\n   * @example\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\r\n   */\r\n  string.getObjCheckYoutubeURI = function getObjCheckYoutubeURI(uri) {\r\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckYoutubeURI() must be String.');\r\n\r\n    var YOUTUBE_REGEXES = {\r\n      'watch': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\r\n      'embed': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\r\n      'v': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\r\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/\r\n    };\r\n\r\n    var uriType = null;\r\n    for (var key in YOUTUBE_REGEXES) {\r\n      var val = YOUTUBE_REGEXES[key];\r\n      if (!val) continue;\r\n\r\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\r\n      if (flag) {\r\n        uriType = key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var youtubeId = '',\r\n      tmpArr = [];\r\n    switch (uriType) {\r\n      case 'watch' :\r\n        youtubeId = string.getUriParam(uri, 'v') || '';\r\n        break;\r\n\r\n      case 'embed' :\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      case 'v' :\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      case 'youtu.be' :\r\n        tmpArr = uri.split('?')[0].split('/');\r\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\r\n        break;\r\n\r\n      default :\r\n    }\r\n\r\n    var isValidURI = ( youtubeId && string.isValidYoutubeVideoId(youtubeId) );\r\n\r\n    return {\r\n      type: 'youtube',\r\n      uri: uri,\r\n      youtubeId: youtubeId,\r\n      isValidURI: isValidURI\r\n    };\r\n  };\r\n\r\n  /**\r\n   * check twitch uri is valid.\r\n   *\r\n   * @static\r\n   * @method getObjCheckTwitchURI\r\n   * @param {String} uri\r\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\r\n   * @example\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\r\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\r\n   */\r\n  string.getObjCheckTwitchURI = function getObjCheckTwitchURI(uri) {\r\n    /*\r\n     + Live Video\r\n     https://www.twitch.tv/surrenderhs // channel link\r\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\r\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\r\n\r\n     + Past Video\r\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\r\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\r\n\r\n     + URI TEST\r\n     https://www.twitch.tv/surrenderhs\r\n     www.twitch.tv/surrenderhs\r\n     twitch.tv/surrenderhs\r\n\r\n     https://player.twitch.tv/?channel=surrenderhs\r\n     player.twitch.tv/?channel=surrenderhs\r\n\r\n     https://www.twitch.tv/surrenderhs/v/56097351\r\n     www.twitch.tv/surrenderhs/v/56097351\r\n\r\n     https://player.twitch.tv/?video=v56097351\r\n     player.twitch.tv/?video=v56097351\r\n     */\r\n\r\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckTwitchURI() must be String.');\r\n\r\n    var TWITCH_REGEXES = {\r\n      'liveChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\r\n      'liveVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\r\n      'chatting': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\r\n      'pastChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\r\n      'pastVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/\r\n    };\r\n\r\n    var channelName = '',\r\n      videoId = '',\r\n      isChatting = false,\r\n      isValidURI = false;\r\n\r\n    var uriType = null;\r\n    for (var key in TWITCH_REGEXES) {\r\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\r\n      if (!val) continue;\r\n\r\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\r\n      if (flag) {\r\n        uriType = key;\r\n        isValidURI = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var tmpArr = [];\r\n    switch (uriType) {\r\n      // https://www.twitch.tv/surrenderhs\r\n      case 'liveChannel' :\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        break;\r\n\r\n      // https://player.twitch.tv/?channel=surrenderhs\r\n      case 'liveVideo' :\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        break;\r\n\r\n      // https://www.twitch.tv/surrenderhs/chat?popout=\r\n      case 'chatting' :\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        isChatting = true;\r\n        break;\r\n\r\n      // https://www.twitch.tv/surrenderhs/v/56097351\r\n      case 'pastChannel' :\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        channelName = tmpArr[1];\r\n        videoId = tmpArr[2];\r\n        break;\r\n\r\n      // https://player.twitch.tv/?video=v56097351\r\n      case 'pastVideo' :\r\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\r\n        videoId = tmpArr[1];\r\n        break;\r\n\r\n      default :\r\n    }\r\n\r\n    isValidURI = (channelName || videoId) ? true : false;\r\n\r\n    return {\r\n      type: 'twitch',\r\n      uri: uri,\r\n      channelName: channelName,\r\n      videoId: videoId,\r\n      isChatting: isChatting,\r\n      isValidURI: isValidURI\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get prefixed document property string\r\n   *\r\n   * @static\r\n   * @method getDocumentPrefixedProperty\r\n   * @param {String} propertyName\r\n   * @param {Boolean} isPropertyFirstCharToUpperCase\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\r\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\r\n   */\r\n  string.getDocumentPrefixedProperty = function getDocumentPrefixedProperty(propertyName, isPropertyFirstCharToUpperCase) {\r\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getDocumentPrefixedProperty() must be String.');\r\n\r\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getDocumentPrefixedProperty() must be Boolean.');\r\n\r\n    if (propertyName in global.document) return propertyName;\r\n\r\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\r\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\r\n\r\n    var prop = '';\r\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\r\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\r\n\r\n      prop = PREFIXES[i] + prop;\r\n      if (prop in document) return prop;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * get prefixed element style property string\r\n   *\r\n   * @static\r\n   * @method getElementPrefixedStyle\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\r\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\r\n   */\r\n  string.getElementPrefixedStyle = function getElementPrefixedStyle(propertyName, isPropertyFirstCharToUpperCase) {\r\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getElementPrefixedStyle() must be String.');\r\n\r\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getElementPrefixedStyle() must be Boolean.');\r\n\r\n    var style = global.document.createElement('div').style;\r\n    if (propertyName in style) return propertyName;\r\n\r\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\r\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\r\n\r\n    var prop = '';\r\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\r\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\r\n\r\n      prop = PREFIXES[i] + prop;\r\n      if (prop in style) return prop;\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\r\n   *\r\n   * @static\r\n   * @method absentToEmpty\r\n   * @param {String} absentableStr\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\r\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\r\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\r\n   */\r\n  string.absentToEmpty = function absentToEmpty(absentableStr) {\r\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\r\n\r\n    return absentableStr;\r\n  };\r\n\r\n  /**\r\n   * convert number to string type with commas.\r\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n   *\r\n   * @static\r\n   * @method numberWithCommas\r\n   * @param {Number} number\r\n   * @returns {String} return string\r\n   * @example\r\n   * console.log( aid.string.numberWithCommas(1000000) ); // '1,000,000'\r\n   */\r\n  string.numberWithCommas = function numberWithCommas(number) {\r\n    if (!aid.isInteger(number)) throw new TypeError('string.numberWithCommas() requires Integer Number parameter.');\r\n\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  };\r\n\r\n  /**\r\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }.\r\n   *\r\n   * @static\r\n   * @method getPositionFromTranslateStr\r\n   * @param {String} str\r\n   * @returns {Object} return object\r\n   * @example\r\n   * string.getPositionFromTranslateStr('translate(99px)'); // {x: 99, y: 0}\r\n   * string.getPositionFromTranslateStr('translate(99px, 999px)'); // {x: 99, y: 999}\r\n   * string.getPositionFromTranslateStr('translateX(99px)'); // {x: 99, y: 0}\r\n   * string.getPositionFromTranslateStr('translateY(99px)'); // {x: 0, y: 99}\r\n   */\r\n  string.getPositionFromTranslateStr = function getPositionFromTranslateStr(str) {\r\n    if (!aid.isString(str)) throw new TypeError('string.getPositionFromTranslateStr() requires String parameter.');\r\n\r\n    var obj = {x: 0, y: 0};\r\n    if (!aid.isDefined(str)) return obj;\r\n\r\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\r\n    if (values.length <= 0) return obj;\r\n\r\n    if (/translateX/g.test(str)) {\r\n      obj.x = parseFloat(values[0], 10);\r\n      return obj;\r\n    }\r\n\r\n    if (/translateY/g.test(str)) {\r\n      obj.y = parseFloat(values[0], 10);\r\n      return obj;\r\n    }\r\n\r\n    obj.x = parseFloat(values[0], 10);\r\n    if (values.length > 1) obj.y = parseFloat(values[1], 10);\r\n\r\n    return obj;\r\n  };\r\n\r\n  /**\r\n   * get flag string is palindrome.\r\n   *\r\n   * @static\r\n   * @method isPalindrome\r\n   * @param {String} str\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\r\n   * console.log( aid.string.isPalindrome('motor') ); // false\r\n   */\r\n  string.isPalindrome = function isPalindrome(str) {\r\n    if (!aid.isString(str)) throw new TypeError('string.isPalindrome() requires String parameter.');\r\n\r\n    if (str.length <= 1) return true;\r\n\r\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\r\n\r\n    return aid.string.isPalindrome(str.slice(-1, 1));\r\n  };\r\n\r\n  /**\r\n   * get aspectFill content size\r\n   *\r\n   * @static\r\n   * @method getSizeAspectFill\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fillWidth\r\n   * @param {Number} fillHeight\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\r\n   */\r\n  math.getSizeAspectFill = function getSizeAspectFill(srcWidth, srcHeight, fillWidth, fillHeight) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fillWidth) || !isNumber(fillHeight)) {\r\n      throw new TypeError('math.getSizeAspectFill() requires Number parameters.');\r\n    }\r\n\r\n    var modifiedSizeW = fillWidth,\r\n      modifiedSizeH = Math.ceil((fillWidth / srcWidth) * srcHeight);\r\n\r\n    if (modifiedSizeH < fillHeight) {\r\n      modifiedSizeW = Math.ceil((fillHeight / srcHeight) * srcWidth);\r\n      modifiedSizeH = fillHeight;\r\n    }\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get aspectFit content size\r\n   *\r\n   * @static\r\n   * @method getSizeAspectFit\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fitWidth\r\n   * @param {Number} fitHeight\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\r\n   */\r\n  math.getSizeAspectFit = function getSizeAspectFit(srcWidth, srcHeight, fitWidth, fitHeight) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth) || !isNumber(fitHeight)) {\r\n      throw new TypeError('math.getSizeAspectFit() requires Number parameters.');\r\n    }\r\n\r\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\r\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\r\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get widthFit content size\r\n   *\r\n   * @static\r\n   * @method getSizeWidthFit\r\n   * @param {Number} srcWidth\r\n   * @param {Number} srcHeight\r\n   * @param {Number} fitWidth\r\n   * @returns {Object} return { width: Number, height: Number }\r\n   * @example\r\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\r\n   */\r\n  math.getSizeWidthFit = function getSizeWidthFit(srcWidth, srcHeight, fitWidth) {\r\n    var isNumber = aid.isNumber;\r\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth)) {\r\n      throw new TypeError('math.getSizeWidthFit() requires Number parameters.');\r\n    }\r\n\r\n    var modifiedSizeW = fitWidth,\r\n      modifiedSizeH = Math.ceil((fitWidth / srcWidth) * srcHeight);\r\n\r\n    return {\r\n      width: modifiedSizeW,\r\n      height: modifiedSizeH\r\n    };\r\n  };\r\n\r\n  /**\r\n   * get flag whether 2 numbers are equal by Number.EPSILON (2.220446049250313e-16)\r\n   *\r\n   * @static\r\n   * @method isEpsilonEqual\r\n   * @param {Number} number_a\r\n   * @param {Number} number_b\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\r\n   */\r\n  math.isEpsilonEqual = function isEpsilonEqual(number_a, number_b) {\r\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\r\n      throw new TypeError('math.isEpsilonEqual() requires Number parameters.');\r\n    }\r\n\r\n    var epsilon = (aid.isDefined(Number.EPSILON)) ? Number.EPSILON : 2.220446049250313e-16;\r\n\r\n    return (Math.abs(number_a - number_b) < epsilon);\r\n  };\r\n\r\n  /**\r\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\r\n   * value increases from startIndex to (firstIndex + loopGap - 1).\r\n   * if value is bigger than totalLength, change value to 1.\r\n   * if searchIndex in values, return true.\r\n   * otherwise, return false.\r\n   *\r\n   * @static\r\n   * @method isIndexInLoop\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @param {Number} searchIndex\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\r\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\r\n   */\r\n  math.isIndexInLoop = function isIndexInLoop(totalLength, loopGap, firstIndex, searchIndex) {\r\n    if (arguments.length < 4) throw new Error('math.isIndexInLoop() requires 4 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex) || !isInteger(searchIndex)) {\r\n      throw new TypeError('math.isIndexInLoop() requires Integer Number parameters.');\r\n    }\r\n\r\n    if (totalLength < 1 || firstIndex < 1) {\r\n      throw new Error('totalLength, firstIndex parameter of math.isIndexInLoop() can not smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength) {\r\n      throw new Error('loopGap parameter of math.isIndexInLoop() can not bigger than totalLength parameter.');\r\n    }\r\n\r\n    var index = firstIndex;\r\n    for (var i = 0; i < loopGap; i++) {\r\n      if (index === searchIndex) return true;\r\n      index = (index + 1 > totalLength) ? 1 : index + 1;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * get looped index from firstIndex in 1 ~ totalLength.\r\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\r\n   * if value is bigger than totalLength, change value to 1. and, return value.\r\n   *\r\n   * @static\r\n   * @method getLoopedLastIndex\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\r\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\r\n   */\r\n  math.getLoopedLastIndex = function getLoopedLastIndex(totalLength, loopGap, firstIndex) {\r\n    if (arguments.length < 3) throw new Error('math.getLoopedLastIndex() requires 3 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex)) {\r\n      throw new TypeError('math.getLoopedLastIndex() requires Integer Number parameters.');\r\n    }\r\n\r\n    if (totalLength < 1 || firstIndex < 1) {\r\n      throw new Error('totalLength, firstIndex parameter of math.getLoopedLastIndex() can not smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength || firstIndex > totalLength) {\r\n      throw new Error('loopGap, firstIndex parameter of math.getLoopedLastIndex() can not bigger than totalLength parameter.');\r\n    }\r\n\r\n    var index = firstIndex;\r\n    for (var i = 0; i < loopGap - 1; i++) {\r\n      index = (index + 1 > totalLength) ? 1 : index + 1;\r\n    }\r\n\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\r\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\r\n   * if value is smaller than 0, change value to totalLength. and return value.\r\n   *\r\n   * @static\r\n   * @method getReverseLoopedFirstIndex\r\n   * @param {Number} totalLength\r\n   * @param {Number} loopGap\r\n   * @param {Number} firstIndex\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\r\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\r\n   */\r\n  math.getReverseLoopedFirstIndex = function getReverseLoopedFirstIndex(totalLength, loopGap, lastIndex) {\r\n    if (arguments.length < 3) throw new Error('math.getReverseLoopedFirstIndex() requires 3 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(lastIndex)) {\r\n      throw new TypeError('math.getReverseLoopedFirstIndex() requires Integer Number parameters.');\r\n    }\r\n\r\n    if (totalLength < 1 || lastIndex < 1) {\r\n      throw new Error('totalLength, lastIndex parameter of math.getReverseLoopedFirstIndex can not smaller than 1.');\r\n    }\r\n\r\n    if (loopGap > totalLength || lastIndex > totalLength) {\r\n      throw new Error('loopGap, lastIndex parameter of math.getReverseLoopedFirstIndex can not bigger than totalLength parameter.');\r\n    }\r\n\r\n    var index = lastIndex;\r\n    for (var i = 0; i < loopGap - 1; i++) {\r\n      index = (index - 1 < 1) ? totalLength : index - 1;\r\n    }\r\n\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * get factorial value\r\n   *\r\n   * @static\r\n   * @method factorial\r\n   * @param {Number} Int number\r\n   * @returns {Number} return Int Number\r\n   * @example\r\n   * console.log( aid.math.factorial(-99) ); // 1\r\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\r\n   */\r\n  math.factorial = function factorial(number) {\r\n    if (!aid.isInteger(number)) throw new TypeError('math.factorial() requires Integer Number parameter.');\r\n\r\n    if (number < 1) return 1;\r\n    return number * aid.math.factorial(number - 1);\r\n  };\r\n\r\n  /**\r\n   * get board pagination info object.\r\n   *\r\n   * @static\r\n   * @method getObjForPagination\r\n   * @param {Number} totalPostNum\r\n   * @param {Number} displayPostNumPerPage\r\n   * @param {Number} displayPaginationBtnNum\r\n   * @param {Number} pageIndex\r\n   * @returns {Object} return object\r\n   * @example\r\n   * console.log( aid.math.getObjForPagination(39, 10, 5, 1) ); // {totalPostNum: 39, displayPostNumPerPage: 10, displayPaginationBtnNum: 5, pageIndex: 1, totalPageNum: 4, prevPageIndex: 0, firstPageIndex: 1, lastPageIndex: 4, nextPageIndex: 0}\r\n   */\r\n  math.getObjForPagination = function getObjForPagination(totalPostNum, displayPostNumPerPage, displayPaginationBtnNum, pageIndex) {\r\n    if (arguments.length < 4) throw new Error('math.getObjForPagination() requires 4 parameters.');\r\n\r\n    var isInteger = aid.isInteger;\r\n    if (!isInteger(totalPostNum) || !isInteger(displayPostNumPerPage) || !isInteger(displayPaginationBtnNum) || !isInteger(pageIndex)) {\r\n      throw new TypeError('math.getObjForPagination() requires Integer Number parameters.');\r\n    }\r\n\r\n    if (totalPostNum <= 0 || displayPostNumPerPage <= 0 || displayPaginationBtnNum <= 0 || pageIndex <= 0) {\r\n      throw new TypeError('math.getObjForPagination() requires positive Integer Number parameters.');\r\n    }\r\n\r\n    var totalPageNum = Math.ceil(totalPostNum / displayPostNumPerPage);\r\n    if (pageIndex < 1) pageIndex = 1;\r\n    if (pageIndex > totalPageNum) pageIndex = totalPageNum;\r\n\r\n    var paginationBtnGroupIndex = Math.floor((pageIndex - 1) / displayPaginationBtnNum),\r\n      prevPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum,\r\n      firstPageIndex = (paginationBtnGroupIndex * displayPaginationBtnNum) + 1,\r\n      lastPageIndex = firstPageIndex + displayPaginationBtnNum - 1,\r\n      nextPageIndex = lastPageIndex + 1;\r\n\r\n    if (lastPageIndex > totalPageNum) lastPageIndex = totalPageNum;\r\n    if (nextPageIndex > totalPageNum) nextPageIndex = 0;\r\n\r\n    return {\r\n      totalPostNum: totalPostNum,\r\n      displayPostNumPerPage: displayPostNumPerPage,\r\n      displayPaginationBtnNum: displayPaginationBtnNum,\r\n      pageIndex: pageIndex,\r\n\r\n      totalPageNum: totalPageNum,\r\n      prevPageIndex: prevPageIndex,\r\n      firstPageIndex: firstPageIndex,\r\n      lastPageIndex: lastPageIndex,\r\n      nextPageIndex: nextPageIndex\r\n    };\r\n  };\r\n\r\n  /**\r\n   * convert degree to radian.\r\n   *\r\n   * @static\r\n   * @method degreeToRadian\r\n   * @param {Number} number\r\n   * @returns {Number} return number\r\n   * @example\r\n   * console.log( aid.math.degreeToRadian(90) ); // 1.5707963267948966\r\n   */\r\n  math.degreeToRadian = function degreeToRadian(degree) {\r\n    if (!aid.isNumber(degree)) throw new TypeError('math.degreeToRadian() requires Number parameter.');\r\n\r\n    return degree * Math.PI / 180;\r\n  };\r\n\r\n  /**\r\n   * convert radian to radian.\r\n   *\r\n   * @static\r\n   * @method radianToDegree\r\n   * @param {Number} number\r\n   * @returns {Number} return number\r\n   * @example\r\n   * console.log( aid.math.radianToDegree(1.5707963267948966) ); // 90\r\n   */\r\n  math.radianToDegree = function radianToDegree(radian) {\r\n    if (!aid.isNumber(radian)) throw new TypeError('math.radianToDegree() requires Number parameter.');\r\n\r\n    return radian * 180 / Math.PI;\r\n  };\r\n\r\n  /**\r\n   * days name\r\n   *\r\n   * @static\r\n   * @property date.DAYS\r\n   * @returns {Array} return Array\r\n   * @example\r\n   */\r\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n  /**\r\n   * months name\r\n   *\r\n   * @static\r\n   * @property date.MONTHS\r\n   * @returns {Array} return Array\r\n   * @example\r\n   */\r\n  date.MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n  /**\r\n   * 1 minutes to second unit (60 sec)\r\n   *\r\n   * @static\r\n   * @property date.MIN_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.MIN_TO_SEC = 60;\r\n\r\n  /**\r\n   * 1 hour to second unit (60 * 60 = 3600 sec)\r\n   *\r\n   * @static\r\n   * @property date.HOUR_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.HOUR_TO_SEC = 3600;\r\n\r\n  /**\r\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\r\n   *\r\n   * @static\r\n   * @property date.DAY_TO_SEC\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   */\r\n  date.DAY_TO_SEC = 86400;\r\n\r\n  /**\r\n   * equal to Array.indexOf\r\n   *\r\n   * @static\r\n   * @method indexOf\r\n   * @param {Array} arr\r\n   * @param {Object} target\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\r\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\r\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\r\n   */\r\n  array.indexOf = function indexOf(arr, target) {\r\n    if (!aid.isArray(arr)) throw new TypeError('math.indexOf() requires Number parameter.');\r\n\r\n    for (var i = 0, max = arr.length; i < max; ++i) {\r\n      if (arr[i] === target) return i;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get index of minimum number in Array.\r\n   *\r\n   * @static\r\n   * @method indexOfMin\r\n   * @param {Array} arr\r\n   * @param {Number} startSearchIndex\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\r\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\r\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\r\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\r\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\r\n   */\r\n  array.indexOfMin = function indexOfMin(arr, startSearchIndex) {\r\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\r\n\r\n    var startIndex = (startSearchIndex > 0) ? startSearchIndex : 0;\r\n    if (arr.length <= startIndex) return -1;\r\n\r\n    var minVal = arr[startIndex],\r\n      minIndex = startIndex;\r\n\r\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\r\n      if (arr[i] < minVal) {\r\n        minVal = arr[i];\r\n        minIndex = i;\r\n      }\r\n    }\r\n\r\n    return minIndex;\r\n  };\r\n\r\n  /**\r\n   * swap two elements in Array.\r\n   *\r\n   * @static\r\n   * @method swap\r\n   * @param {Array} arr\r\n   * @param {Number} firstIndex\r\n   * @param {Number} secondIndex\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\r\n   */\r\n  array.swap = function swap(arr, firstIndex, secondIndex) {\r\n    if (arguments.length !== 3) return null;\r\n\r\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\r\n\r\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\r\n\r\n    var tmp = arr[firstIndex];\r\n    arr[firstIndex] = arr[secondIndex];\r\n    arr[secondIndex] = tmp;\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply selection sort in Array.\r\n   *\r\n   * @static\r\n   * @method selectionSort\r\n   * @param {Array} arr\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.selectionSort = function selectionSort(arr) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    var minIndex = 0;\r\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\r\n      minIndex = array.indexOfMin(arr, i);\r\n      array.swap(arr, i, minIndex);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply insertion sort in Array.\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\r\n   *\r\n   * @static\r\n   * @method insertionSort\r\n   * @param {Array} arr\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.insertionSort = function insertionSort(arr) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    var value;\r\n    for (var i = 1, max = arr.length; i < max; i++) {\r\n      value = arr[i];\r\n\r\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\r\n        arr[j + 1] = arr[j];\r\n      }\r\n      arr[j + 1] = value;\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\r\n   * this function is only used by aid.array.mergeSort function.\r\n   *\r\n   * @static\r\n   * @method merge\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} middleIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   */\r\n  array.merge = function merge(arr, startIndex, middleIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\r\n\r\n    var i = startIndex,\r\n      j = middleIndex + 1,\r\n      k = startIndex,\r\n      tmpArr = [];\r\n\r\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\r\n    while (i <= middleIndex && j <= endIndex) {\r\n      if (arr[i] <= arr[j]) {\r\n        tmpArr[k++] = arr[i++];\r\n\r\n      } else {\r\n        tmpArr[k++] = arr[j++];\r\n      }\r\n    }\r\n\r\n    if (i > middleIndex) {\r\n      // set rest right array\r\n      for (var r = j; r <= endIndex; r++) {\r\n        tmpArr[k] = arr[r];\r\n        k++;\r\n      }\r\n\r\n    } else {\r\n      // set rest left array\r\n      for (var l = i; l <= middleIndex; l++) {\r\n        tmpArr[k] = arr[l];\r\n        k++;\r\n      }\r\n    }\r\n\r\n    // set sorted values to arr.\r\n    for (var n = startIndex; n <= endIndex; n++) {\r\n      arr[n] = tmpArr[n];\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * apply merge sort in Array.\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\r\n   *\r\n   * @static\r\n   * @method mergeSort\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.mergeSort = function mergeSort(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (arr.length <= 1 || startIndex === endIndex) return null;\r\n\r\n    if (startIndex + 1 === endIndex) {\r\n      if (arr[startIndex] > arr[endIndex]) {\r\n        aid.array.swap(arr, startIndex, endIndex);\r\n      }\r\n\r\n      return arr;\r\n    }\r\n\r\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\r\n\r\n    aid.array.mergeSort(arr, startIndex, middleIndex);\r\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\r\n\r\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * quick sort with use pivot value.\r\n   * this function is only used by aid.array.quickSort function.\r\n   *\r\n   * @static\r\n   * @method getPivotIndexAfterPartition\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\r\n   */\r\n  array.getPivotIndexAfterPartition = function getPivotIndexAfterPartition(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\r\n\r\n    if (startIndex > endIndex) return -1;\r\n\r\n    if (arr.length <= 1) return 0;\r\n\r\n    var pivot = arr[endIndex],\r\n      swapIndex = startIndex;\r\n\r\n    for (var i = startIndex; i < endIndex; i++) {\r\n      if (arr[i] <= pivot) {\r\n        aid.array.swap(arr, i, swapIndex);\r\n        swapIndex++;\r\n      }\r\n    }\r\n\r\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\r\n\r\n    return swapIndex;\r\n  };\r\n\r\n  /**\r\n   * apply quick sort in Array.\r\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\r\n   *\r\n   * @static\r\n   * @method quickSort\r\n   * @param {Array} arr\r\n   * @param {Number} startIndex\r\n   * @param {Number} endIndex\r\n   * @returns {Array} return Array or null\r\n   * @example\r\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\r\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\r\n   */\r\n  array.quickSort = function quickSort(arr, startIndex, endIndex) {\r\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\r\n\r\n    if (arr.length <= 1 || startIndex === endIndex) return null;\r\n\r\n    if (startIndex < endIndex) {\r\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\r\n\r\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\r\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * remove element in Array, and return cloned Array.\r\n   *\r\n   * @static\r\n   * @method remove\r\n   * @param {Array} arr\r\n   * @param {Object} target\r\n   * @returns {Array} return Array\r\n   * @example\r\n   * var arr = [1, 2, 3, 4, 5, 99];\r\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\r\n   */\r\n  array.remove = function remove(arr, target) {\r\n    if (!aid.isArray(arr)) throw new TypeError('arr parameter type of array.remove() must be Array.');\r\n\r\n    var clonedArr = arr.slice(0),\r\n      index = array.indexOf(clonedArr, target);\r\n    if (index >= 0) clonedArr.splice(index, 1);\r\n\r\n    return clonedArr;\r\n  };\r\n\r\n  /**\r\n   * get 2 x 2 Matrix Array\r\n   *\r\n   * @static\r\n   * @method getMatrixArr\r\n   * @param {Number} rowNum\r\n   * @param {Number} columnNum\r\n   * @param {Object} initialVal\r\n   * @returns {Array} return array\r\n   * @example\r\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\r\n   */\r\n  array.getMatrixArr = function getMatrixArr(rowNum, columnNum, initialVal) {\r\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\r\n      throw new TypeError('rowNum, columnNum parameter of array.getMatrixArr() must be Integer Number.');\r\n    }\r\n\r\n    if (arguments.length !== 3) throw Error('array.getMatrixArr() requires 3 parameters.');\r\n\r\n    var arr = [], columns = [];\r\n    for (var i = 0; i < rowNum; ++i) {\r\n      columns = [];\r\n\r\n      for (var j = 0; j < columnNum; ++j) {\r\n        columns[j] = initialVal;\r\n      }\r\n\r\n      arr[i] = columns;\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * binary search version of Array.indexOf\r\n   *\r\n   * @static\r\n   * @method binaryIndexOf\r\n   * @param {Array} sortedArray\r\n   * @param {Object} target\r\n   * @returns {Number} return Int number\r\n   * @example\r\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\r\n   */\r\n  array.binaryIndexOf = function binaryIndexOf(sortedArray, target) {\r\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\r\n\r\n    var first = 0,\r\n      last = sortedArray.length - 1,\r\n      middle;\r\n\r\n    while (first <= last) {\r\n      middle = Math.floor((first + last) / 2);\r\n\r\n      if (target === sortedArray[middle]) {\r\n        return middle;\r\n\r\n      } else {\r\n        if (target < sortedArray[middle]) {\r\n          last = middle - 1;\r\n\r\n        } else {\r\n          first = middle + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  /**\r\n   * get object has property in array.\r\n   * this object is first matched element in array by value or regex.\r\n   *\r\n   * @static\r\n   * @method getFirstObjectHasProperty\r\n   * @param {Array} arrayHasObjects\r\n   * @param {String} propertyKey\r\n   * @param {Object} findPropertyValueOrRegex\r\n   * @returns {Object} return object\r\n   * @example\r\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\r\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\r\n   */\r\n  array.getFirstObjectHasProperty = function getFirstObjectHasProperty(arrayHasObjects, propertyKey, findPropertyValueOrRegex) {\r\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\r\n\r\n    if (!aid.isString(propertyKey)) return null;\r\n\r\n    var obj, result = null;\r\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\r\n      obj = arrayHasObjects[i];\r\n      if (!obj.hasOwnProperty(propertyKey)) continue;\r\n\r\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\r\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\r\n          result = obj;\r\n          break;\r\n        }\r\n\r\n      } else {\r\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\r\n          result = obj;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * check element is in viewport entirely.\r\n   *\r\n   * @static\r\n   * @method isEntirelyInViewport\r\n   * @param {Element} ele\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  element.isEntirelyInViewport = function isEntirelyInViewport(ele) {\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (!ele) return false;\r\n\r\n    var rect = ele.getBoundingClientRect();\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <= (global.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (global.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * check element is in viewport partially.\r\n   *\r\n   * @static\r\n   * @method isPartiallyInViewport\r\n   * @param {Element} ele\r\n   * @returns {Boolean} return boolean\r\n   * @example\r\n   */\r\n  element.isPartiallyInViewport = function isPartiallyInViewport(ele) {\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (!ele) return false;\r\n\r\n    var rect = ele.getBoundingClientRect(),\r\n      windowHeight = (global.innerHeight || document.documentElement.clientHeight),\r\n      windowWidth = (global.innerWidth || document.documentElement.clientWidth);\r\n\r\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\r\n    var verticallyInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0),\r\n      horizontallyInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\r\n\r\n    return (verticallyInView && horizontallyInView);\r\n  };\r\n\r\n  /**\r\n   * create script file, and append to target element.\r\n   *\r\n   * @static\r\n   * @method appendScriptFile\r\n   * @param {String} fileUrl\r\n   * @param {Element} targetElementToAppendFile\r\n   * @param {Function} loadCompleteCallback\r\n   * @example\r\n   * aid.file.appendScriptFile('https://apis.google.com/js/client.js', document.head, function() { console.log('load script file completely'); });\r\n   */\r\n  file.appendScriptFile = function appendScriptFile(fileUrl, targetElementToAppend, loadCompleteCallback) { // document.head, document.body\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n\r\n    if (typeof loadCompleteCallback === 'function') {\r\n      if (typeof script.onreadystatechange === 'undefined') {\r\n        script.onload = loadCompleteCallback;\r\n\r\n      } else {\r\n        script.onreadystatechange = function () {\r\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n            script.onreadystatechange = null;\r\n            loadCompleteCallback();\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    script.src = fileUrl;\r\n\r\n    var ele = targetElementToAppend;\r\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\r\n\r\n    if (ele) {\r\n      ele.appendChild(script);\r\n\r\n    } else {\r\n      var firstScript = document.getElementsByTagName('script')[0];\r\n      firstScript.parentNode.insertBefore(script, firstScript);\r\n    }\r\n  };\r\n\r\n  /*\r\n   * export\r\n   */\r\n  aid.platform = platform;\r\n  aid.operator = operator;\r\n  aid.browser = browser;\r\n  aid.string = string;\r\n  aid.math = math;\r\n  aid.date = date;\r\n  aid.array = array;\r\n  aid.element = element;\r\n  aid.file = file;\r\n\r\n  if (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n      exports = module.exports = aid;\r\n    }\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    define('aid', [], function () {\r\n      return aid;\r\n    });\r\n  } else {\r\n    global.aid = aid;\r\n  }\r\n}());"]}