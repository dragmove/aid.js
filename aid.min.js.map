{"version":3,"sources":["aid.js"],"names":["global","self","this","_slice","Array","prototype","slice","aid","operator","platform","browser","string","math","date","array","element","file","clipboard","existy","obj","isDefined","isBoolean","constructor","Boolean","isNumber","isNaN","Number","isInteger","isFinite","Math","floor","isString","String","isArray","isObject","Object","isFunction","Function","isRegExp","RegExp","extend","destination","source","TypeError","key","hasOwnProperty","inherit","F","ChildClass","ParentClass","super","namespace","parent","ns","parts","split","i","max","length","borrow","borrower","donor","functionName","Error","args","call","arguments","apply","bind","func","context","compose","func_a","func_b","not","each","dataCanLoop","_context","truthy","falsy","nth","index","allOf","every","val","anyOf","some","constant","plucker","field","best","conditionFunc","reduce","previousValue","currentValue","iterateUntil","calculateFunc","initialValue","result","push","curry","arg","curry2","secondArg","firstArg","curryAll","curryArgsNum","arity","curried","rest","concat","beginIndex","begin","pipeline","seed","restArgs","value","prev","current","lazyChain","calls","invoke","methodName","target","method","name","force","ret","thunk","eq","lhs","rhs","Stack","_dataStore","_top","pop","peek","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","find","node","findPrevious","insert","prevNodeData","insertNode","prevNode","remove","getAllNodes","nodes","createLinkedList","object_a","object_b","isWindow","userAgent","test","isMac","isIOS","MSStream","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isSafari","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie8","regex_msie9","regex_msie10","regex_msie11","regex_trident","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","getCookie","cookieArr","cookie","splitArr","keyStr","valueStr","decodeURIComponent","setCookie","expireSecond","path","domain","expires","pathStr","domainStr","Date","setTime","getTime","toGMTString","encodeURIComponent","trim","str","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","emailStr","exec","isIFrame","iframeStr","getUriParam","uri","parameterName","tmpArr","keyValueArr","paramStr","params","getUriParams","getUriCombinedParams","parameters","hashStr","indexOf","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","v","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","getElementPrefixedStyle","style","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","values","match","isPalindrome","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","min","getSizeWidthFit","isEpsilonEqual","number_a","number_b","epsilon","EPSILON","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","getLoopedLastIndex","getReverseLoopedFirstIndex","lastIndex","factorial","getObjForPagination","totalPostNum","displayPostNumPerPage","displayPaginationBtnNum","pageIndex","totalPageNum","paginationBtnGroupIndex","prevPageIndex","firstPageIndex","lastPageIndex","nextPageIndex","degreeToRadian","degree","PI","radianToDegree","radian","getHeightOfRightTriangle","baseLineWidth","acuteAngleDegree","tan","getDistanceBetweenTwoPoints","point1","point2","sqrt","pow","getOrthogonalPointBetweenLineAndSomePoint","collinearPoint1","collinearPoint2","somePoint","diffX","diffY","lineSlope","somePointLineSlope","orthogonalPoint","gt","lt","gte","lte","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","overlappedConditionSortByProperty","sortConditions","datas","conditionIndex","condition","sort","prevProperty","property","nextConditionIndex","nextCondition","memoObj","memoArr","len","acc","curVal","isEntirelyInViewport","ele","jQuery","get","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","verticallyInView","horizontallyInView","appendScriptFile","fileUrl","targetElementToAppend","loadCompleteCallback","script","onreadystatechange","onload","readyState","src","appendChild","firstScript","getElementsByTagName","parentNode","insertBefore","copyText","successCallback","errorCallback","console","log","writeText","then","error","textArea","position","body","focus","select","execCommand","removeChild","exports","module","define","amd"],"mappings":"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","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.68\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2018 Hyun-Seok.Kim, dragmove@gmail.com\n */\n(function() {\n  'use strict';\n\n  // Establish the global object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var global =\n    (typeof self == 'object' && self.self === self && self) ||\n    (typeof global == 'object' && global.global === global && global) ||\n    this ||\n    {};\n\n  var _slice = Array.prototype.slice;\n\n  var aid = {},\n    operator = {},\n    platform = {},\n    browser = {},\n    string = {},\n    math = {},\n    date = {},\n    array = {},\n    element = {},\n    file = {},\n    clipboard = {};\n\n  /**\n   * get object is null/undefined or other\n   *\n   * @static\n   * @method existy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.existy(undefined) ); // false\n   * console.log( aid.existy(null) ); // false\n   * console.log( aid.existy('') ); // true\n   */\n  aid.existy = function existy(obj) {\n    return obj != null;\n  };\n\n  /**\n   * check object is defined\n   *\n   * @static\n   * @method isDefined\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isDefined(undefined) ); // false\n   * console.log( aid.isDefined(null) ); // false\n   * console.log( aid.isDefined(0) ); // true\n   */\n  aid.isDefined = function isDefined(obj) {\n    if (obj === null || typeof obj === 'undefined') return false;\n\n    return true;\n  };\n\n  /**\n   * check object type is Boolean\n   *\n   * @static\n   * @method isBoolean\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isBoolean(false) ); // true\n   */\n  aid.isBoolean = function isBoolean(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === Boolean;\n  };\n\n  /**\n   * check object type is Number\n   *\n   * @static\n   * @method isNumber\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isNumber(-1) ); // true\n   */\n  aid.isNumber = function isNumber(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return !isNaN(obj) && obj.constructor === Number;\n  };\n\n  /**\n   * check object type is Integer Number\n   *\n   * @static\n   * @method isInteger\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isInteger(-1) ); // true\n   */\n  aid.isInteger = function isInteger(obj) {\n    if (!aid.isNumber(obj)) return false;\n\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    return isFinite(obj) && Math.floor(obj) === obj;\n  };\n\n  /**\n   * check object type is String\n   *\n   * @static\n   * @method isString\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isString('') ); // true\n   */\n  aid.isString = function isString(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === String;\n  };\n\n  /**\n   * check object type is Array\n   *\n   * @static\n   * @method isArray\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isArray([]) ); // true\n   */\n  aid.isArray = function isArray(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === Array;\n  };\n\n  /**\n   * check object type is Object\n   *\n   * @static\n   * @method isObject\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isObject({}) ); // true\n   */\n  aid.isObject = function isObject(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === Object;\n  };\n\n  /**\n   * check object type is Function\n   *\n   * @static\n   * @method isFunction\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isFunction(function(){}) ); // true\n   */\n  aid.isFunction = function isFunction(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === Function;\n  };\n\n  /**\n   * check object type is RegExp\n   *\n   * @static\n   * @method isRegExp\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\n   * console.log( aid.isRegExp(/^aid/) ); // true\n   */\n  aid.isRegExp = function isRegExp(obj) {\n    if (!aid.isDefined(obj)) return false;\n\n    return obj.constructor === RegExp;\n  };\n\n  /**\n   * extend function\n   *\n   * @static\n   * @method extend\n   * @param {Object} prototype of class function, or object has variables or methods.\n   * @param {Object} object has variables or methods\n   * @example\n   * function Destination() {\n   *   this.name = 'destination';\n   *   this.type = 'json';\n   * };\n   *\n   * var source = {\n   *   getName: function() { return this.name; },\n   *   getType: function() { return this.type; }\n   * };\n   *\n   * aid.extend(Destination.prototype, source);\n   *\n   * var destination = new Destination();\n   * console.log( destination.getName() ); // 'destination'\n   * console.log( destination.getType() ); // 'json'\n   */\n  aid.extend = function extend(destination, source) {\n    if (!(destination instanceof Object) || !(typeof destination === 'object')) {\n      throw new TypeError('destination parameter type of aid.extend() must be instance of Object, and object type.');\n    }\n\n    if (!(typeof source === 'object'))\n      throw new TypeError('source parameter type of aid.extend() must be object type.');\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n\n    return destination;\n  };\n\n  /**\n   * inherit Class function\n   *\n   * @static\n   * @method inherit\n   * @param {class} ChildClass - child class function\n   * @param {class} ParentClass - parent class function\n   * @example\n   */\n  aid.inherit = (function() {\n    // use closure, protect gabarge collection.\n    var F = function() {};\n\n    return function inherit(ChildClass, ParentClass) {\n      F.prototype = ParentClass.prototype;\n\n      ChildClass.prototype = new F();\n      ChildClass.prototype.constructor = ChildClass;\n      ChildClass.super = ParentClass.prototype;\n    };\n  })();\n\n  /**\n   * create namespace\n   *\n   * @static\n   * @method namespace\n   * @param {String} namespace\n   * @param {Object} parent\n   * @returns {Object} return object\n   * @example\n   * aid.namespace('first.second.third'); // create first.second.third object\n   */\n  aid.namespace = function(namespace, parent) {\n    if (!aid.isString(namespace)) throw new TypeError('namespace parameter type of aid.namespace() must be String.');\n\n    if (!(aid.isObject(parent) || !aid.isDefined(parent))) {\n      throw new TypeError('parent parameter type of aid.namespace() must be Object or null or undefined.');\n    }\n\n    var ns = parent || global;\n\n    if (namespace) {\n      var parts = namespace.split('.');\n\n      for (var i = 0, max = parts.length; i < max; i++) {\n        if (!ns[parts[i]]) ns[parts[i]] = {};\n        ns = ns[parts[i]];\n      }\n    }\n\n    return ns;\n  };\n\n  /**\n   * borrow method from donor object\n   *\n   * @static\n   * @method borrow\n   * @param {Object} borrower\n   * @param {Object} donor\n   * @param {String} functionName\n   * @example\n   * var borrower = {}, donor = { say: function() { return 'hello, world'; } };\n   * aid.borrow(borrower, donor, 'say');\n   * console.log( borrower.say() ); // 'hello, world'\n   */\n  aid.borrow = function borrow(borrower, donor, functionName) {\n    if (!aid.isObject(borrower) || !aid.isObject(donor))\n      throw new TypeError('borrower, donor parameter type of aid.borrow() must be Object.');\n\n    if (!aid.isString(functionName)) throw new TypeError('functionName parameter type of aid.borrow() must be String.');\n\n    if (!aid.isDefined(donor[functionName]))\n      throw new Error('donor object parameter of aid.borrow() has not function with functionName.');\n\n    if (aid.isDefined(borrower[functionName]))\n      throw new Error('borrower object parameter of aid.borrow() already has function with functionName.');\n\n    borrower[functionName] = function() {\n      var args = _slice.call(arguments);\n      return donor[functionName].apply(this, args);\n    };\n  };\n\n  /**\n   * return function bind context and parameters\n   *\n   * @static\n   * @method bind\n   * @param {Function} func\n   * @param {Object} context\n   * @returns {Function} return function\n   * @example\n   * this.title = 'global - aid.js';\n   * var obj = { title: 'obj - aid.js', getTitle: function() { return this.title; } };\n   * var getObjTitle = bind(obj.getTitle, obj), getGlobalTitle = bind(obj.getTitle, window);\n   * console.log( getObjTitle() ); // 'obj - aid.js';\n   * console.log( getGlobalTitle() ); // 'global - aid.js';\n   */\n  aid.bind = function bind(func, context) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.bind() must be Function.');\n\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  /**\n   * return function composed function_a and function_b\n   *\n   * @static\n   * @method compose\n   * @param {Function} func_a\n   * @param {Function} func_b\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.compose = function compose(func_a, func_b) {\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) {\n      throw new TypeError('func_a, func_b parameter type of aid.compose() must be Function.');\n    }\n\n    return function() {\n      return func_a(func_b.apply(null, arguments));\n    };\n  };\n\n  /**\n   * return function negate object parameter\n   *\n   * @static\n   * @method not\n   * @param {Function} func\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.not(isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.not = function not(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.not() must be Function.');\n\n    return function() {\n      return !func.apply(null, arguments);\n    };\n  };\n\n  /**\n   * each method for data can loop\n   *\n   * @static\n   * @method each\n   * @param {Array or String} dataCanLoop\n   * @param {Function} func\n   * @param {Object} context\n   * @example\n   * var result = [];\n   * aid.each('aid.js', function(v) { result.push(v); }, null);\n   * console.log( result.join('') ); // 'aid.js'\n   */\n  aid.each = function each(dataCanLoop, func, context) {\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) {\n      throw new TypeError('dataCanLoop parameter type of aid.each() must be Array or String.');\n    }\n\n    var _context = aid.existy(context) ? context : null;\n\n    for (var i = 0, max = dataCanLoop.length; i < max; i++) {\n      func.call(_context, dataCanLoop[i]);\n    }\n  };\n\n  /**\n   * check object is truthy\n   *\n   * @static\n   * @method truthy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.truthy(true) ); // true\n   * console.log( aid.truthy([]) ); // true\n   * console.log( aid.truthy(0) ); // false\n   * console.log( aid.truthy('') ); // false\n   */\n  aid.truthy = function truthy(obj) {\n    return !!obj;\n  };\n\n  /**\n   * check object is falsy\n   *\n   * @static\n   * @method falsy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.falsy(true) ); // false\n   * console.log( aid.falsy([]) ); // false\n   * console.log( aid.falsy(0) ); // true\n   * console.log( aid.falsy('') ); // true\n   */\n  aid.falsy = function falsy(obj) {\n    return !!!obj;\n  };\n\n  /**\n   * get indexed value of array or string\n   *\n   * @static\n   * @method nth\n   * @param {Array or String} dataCanLoop\n   * @param {Number} index\n   * @example\n   * console.log( aid.nth('string', 1) ); // 't'\n   * console.log( aid.nth('string', -1) ); // null\n   * console.log( aid.nth([0, 'str', true], 2) ); // true\n   * console.log( aid.nth([0, 'str', true], 99) ); // null\n   */\n  aid.nth = function nth(dataCanLoop, index) {\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) {\n      throw new TypeError('dataCanLoop parameter type of aid.nth() must be Array or String.');\n    }\n\n    if (!aid.isInteger(index)) throw new TypeError('index parameter type of aid.nth() must be Integer Number.');\n\n    return index < 0 || index > dataCanLoop.length - 1 ? null : dataCanLoop[index];\n  };\n\n  /**\n   * check all arguments are true\n   *\n   * @static\n   * @method allOf\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.allOf(true, true) ); // true\n   * console.log( aid.allOf(true, false) ); // false\n   */\n  aid.allOf = function allOf(/*args*/) {\n    var args = _slice.call(arguments);\n\n    return args.every(function(val) {\n      return val === true;\n    });\n  };\n\n  /**\n   * check some argument is true\n   *\n   * @static\n   * @method anyOf\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( anyOf(true, false) ); // true\n   * console.log( anyOf(false, false) ); // false\n   */\n  aid.anyOf = function anyOf(/*args*/) {\n    var args = _slice.call(arguments);\n\n    return args.some(function(val) {\n      return val === true;\n    });\n  };\n\n  /**\n   * return function always return constant value\n   * http://underscorejs.org/#constant\n   *\n   * @static\n   * @method constant\n   * @param {Object} obj\n   * @returns {Function} return function\n   * @example\n   * var obj = {name: 'aid.js'};\n   * console.log( aid.constant(obj)() === obj ); // true\n   */\n  aid.constant = function constant(obj) {\n    return function() {\n      return obj;\n    };\n  };\n\n  /**\n   * return function pluck field of object, array, string\n   *\n   * @static\n   * @method plucker\n   * @param {String or Number} field of object, array, string\n   * @returns {Function} return function\n   * @example\n   * var getTitle = aid.plucker('title');\n   * var obj = {title: 'aid.js', description: 'A bundle of Javascript util Library for help developers. No dependency to other Libraries.'};\n   * console.log( getTitle(obj) ); // 'aid.js'\n   *\n   * var getFirst = aid.plucker(0);\n   * var str = 'aid.js';\n   * console.log( getFirst(str) ); // 'a'\n   *\n   * var getLength = aid.plucker('length');\n   * var arr = [1, 2, 3, 4, 5];\n   * console.log( getLength(arr) ); // 5\n   */\n  aid.plucker = function plucker(field) {\n    if (!(aid.isString(field) || aid.isNumber(field))) {\n      throw new TypeError('field parameter type of aid.plucker() must be String or Number.');\n    }\n\n    return function(obj) {\n      if (!(aid.isObject(obj) || aid.isArray(obj) || aid.isString(obj))) {\n        throw new TypeError(\n          'obj parameter type of function (get from aid.plucker()) must be Object or Array or String.'\n        );\n      }\n\n      return obj[field];\n    };\n  };\n\n  /**\n   * return best(optimized by condition function) value.\n   *\n   * @static\n   * @method best\n   * @param {Function} condition function to find best value.\n   * @param {Array} array\n   * @example\n   * console.log( aid.best(function(x, y) { return x > y; }, [2, 4, 1, 5, 3]) ); // 5\n   */\n  aid.best = function best(conditionFunc, array) {\n    if (!aid.isFunction(conditionFunc))\n      throw new TypeError('conditionFunc parameter type of aid.best() must be Function.');\n\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.best() must be Array.');\n\n    return array.reduce(function(previousValue, currentValue) {\n      return conditionFunc(previousValue, currentValue) ? previousValue : currentValue;\n    });\n  };\n\n  /**\n   * return array has values filtered\n   *\n   * @static\n   * @method iterateUntil\n   * @param {Function} function return value\n   * @param {Function} function has condition\n   * @param {Object} initial value\n   * @returns {Array} return array has values filtered.\n   * @example\n   * console.log( aid.iterateUntil(function(n) { return n + n; }, function(n) { return n <= 1042 }, 1) ); // [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\n   */\n  aid.iterateUntil = function iterateUntil(calculateFunc, conditionFunc, initialValue) {\n    if (!aid.isFunction(calculateFunc))\n      throw new TypeError('calculateFunc parameter type of aid.iterateUntil() must be Function.');\n\n    if (!aid.isFunction(conditionFunc))\n      throw new TypeError('conditionFunc parameter type of aid.iterateUntil() must be Function.');\n\n    var array = [],\n      result = calculateFunc(initialValue);\n\n    while (conditionFunc(result)) {\n      array.push(result);\n      result = calculateFunc(result);\n    }\n\n    return array;\n  };\n\n  /**\n   * curry function can use one parameter\n   *\n   * @static\n   * @method curry\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   */\n  aid.curry = function curry(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry() must be Function.');\n\n    return function(arg) {\n      return func(arg);\n    };\n  };\n\n  /**\n   * curry function can use two parameter\n   *\n   * @static\n   * @method curry2\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * var parseBinaryStr = aid.curry2(parseInt)(2);\n   * console.log( parseBinaryStr('111') ); // 7\n   */\n  aid.curry2 = function curry2(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry2() must be Function.');\n\n    return function(secondArg) {\n      return function(firstArg) {\n        return func(firstArg, secondArg);\n      };\n    };\n  };\n\n  /**\n   * curry function for variadic functions.\n   *\n   * @static\n   * @method curryAll\n   * @param {Function} function\n   * @param {Number} minimum number of arguments to curry\n   * @returns {Function} return function\n   * @example\n   * console.log( curryAll(Math.max, 2)(1, 99) ); // 99\n   * console.log( curryAll(Math.max, 2)(1)(99) ); // 99\n   */\n  aid.curryAll = function curryAll(func, curryArgsNum) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curryAll() must be Function.');\n\n    var arity = curryArgsNum || func.length;\n\n    return function curried() {\n      var args = _slice.call(arguments),\n        context = this;\n\n      return args.length >= arity\n        ? func.apply(context, args)\n        : function() {\n            var rest = _slice.call(arguments);\n            return curried.apply(context, args.concat(rest));\n          };\n    };\n  };\n\n  /**\n   * rest\n   * // refer to _.rest function of underscore.js - https://github.com/jashkenas/underscore/blob/master/underscore.js\n   *\n   * @static\n   * @method rest\n   * @param {Array} array\n   * @param {Number} begin index to slice arguments.\n   * @returns {Array} return array\n   * @example\n   * var array = [1, 2, 3, 4, 5];\n   * console.log( aid.rest(array) ); // [2, 3, 4, 5]\n   * console.log( aid.rest(array, 2) ); // [3, 4, 5]\n   */\n  aid.rest = function rest(array, beginIndex) {\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.rest() must be Array.');\n\n    var begin = !aid.existy(beginIndex) ? 1 : beginIndex;\n\n    return _slice.call(array, begin);\n  };\n\n  /**\n   * pipeline\n   *\n   * @static\n   * @method pipeline\n   * @param {Object} seed\n   * @returns {Object} return value\n   * @example\n   * function negative(n) { return n * -1; }\n   * function half(n) { return n / 2; }\n   * function negativeHalf(n) { return aid.pipeline(n, negative, half); }\n   * console.log( aid.pipeline(80, negative) ); // -80\n   * console.log( negativeHalf(80) ); // 80 * -1 / 2\n   */\n  aid.pipeline = function pipeline(seed /* args */) {\n    var restArgs = aid.rest(_slice.call(arguments));\n\n    aid.each(\n      restArgs,\n      function(value) {\n        if (!aid.isFunction(value)) throw new TypeError('rest parameters type of aid.pipeline() must be Function.');\n      },\n      null\n    );\n\n    return restArgs.reduce(function(prev, current) {\n      return current(prev);\n    }, seed);\n  };\n\n  /**\n   * lazyChain\n   *\n   * @static\n   * @method lazyChain\n   * @param {Object} object\n   * @returns {Object} return {invoke, force}\n   * @example\n   * var lazy = aid.lazyChange([2, 1, 3]).invoke('concat', [7, 7, 8, 9, 0]).invoke('sort');\n   * console.log( lazy.force() ); // [0, 1, 2, 3, 7, 7, 8, 9]\n   *\n   * // with aid.pipeline\n   * function double(array) { return array.map(function(v) { return v * 2; }); }\n   * function lazyReverseAndNegative(array) { return aid.lazyChain(array).invoke('reverse').invoke('map', function(v) { return v * -1; }); }\n   * console.log( aid.pipeline([1, 2, 3], double, lazyReverseAndNegative).force() ); // [-6, -4, -2]\n   */\n  aid.lazyChain = function lazyChain(obj) {\n    var calls = [];\n\n    return {\n      invoke: function(methodName /*, args */) {\n        var args = aid.rest(_slice.call(arguments));\n\n        calls.push(function(target) {\n          var method = target[methodName];\n\n          if (!aid.isDefined(method)) {\n            throw Error(target.constructor.name + ' has not ' + methodName + ' method.');\n          }\n\n          return method.apply(target, args);\n        });\n\n        return this;\n      },\n\n      force: function() {\n        return calls.reduce(function(ret, thunk) {\n          return thunk(ret);\n        }, obj);\n      }\n    };\n  };\n\n  /**\n   * check two parameters are equal\n   *\n   * @static\n   * @method eq\n   * @param {Object} obj\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.eq(99)(99) ); // true\n   */\n  aid.eq = aid.curry2(function(lhs, rhs) {\n    return lhs === rhs;\n  });\n\n  /*\n   * Data Structure\n   */\n  // Stack\n  var Stack = function() {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  Stack.prototype.push = function push(element) {\n    if (this._top < 0) this._top = 0;\n    this._dataStore[this._top++] = element;\n  };\n\n  Stack.prototype.pop = function pop() {\n    return this._dataStore[--this._top];\n  };\n\n  Stack.prototype.peek = function peek() {\n    return this._dataStore[this._top - 1];\n  };\n\n  Stack.prototype.length = function length() {\n    return this._top > 0 ? this._top : 0;\n  };\n\n  Stack.prototype.clear = function clear() {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  aid.createStack = function() {\n    return new Stack();\n  };\n\n  // Queue\n  var Queue = function() {\n    this._dataStore = [];\n  };\n\n  Queue.prototype.enqueue = function enqueue(element) {\n    this._dataStore.push(element);\n  };\n\n  Queue.prototype.dequeue = function dequeue() {\n    return this._dataStore.shift();\n  };\n\n  Queue.prototype.front = function front() {\n    return this._dataStore[0];\n  };\n\n  Queue.prototype.rear = function rear() {\n    return this._dataStore[this._dataStore.length - 1];\n  };\n\n  Queue.prototype.length = function length() {\n    return this._dataStore.length;\n  };\n\n  Queue.prototype.isEmpty = function isEmpty() {\n    if (this._dataStore.length <= 0) return true;\n    return false;\n  };\n\n  aid.createQueue = function createQueue() {\n    return new Queue();\n  };\n\n  // LinkedList node\n  var LinkedListNode = function(data) {\n    this.data = data;\n    this.next = null;\n  };\n\n  // LinkedList\n  var LinkedList = function() {\n    this.head = new LinkedListNode('head');\n  };\n\n  LinkedList.prototype.find = function find(data) {\n    var node = this.head;\n    while (node.data !== data) {\n      node = node.next;\n      if (node === null) return node;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.findPrevious = function findPrevious(data) {\n    if (this.head.data === data) return null;\n\n    var node = this.head;\n    while (node.next !== null && node.next.data !== data) {\n      node = node.next;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.insert = function insert(data, prevNodeData) {\n    var insertNode = new LinkedListNode(data),\n      prevNode = this.find(prevNodeData);\n\n    insertNode.next = prevNode.next;\n    prevNode.next = insertNode;\n  };\n\n  LinkedList.prototype.remove = function remove(data) {\n    var prevNode = this.findPrevious(data);\n\n    if (prevNode.next !== null) {\n      prevNode.next = prevNode.next.next;\n    }\n  };\n\n  LinkedList.prototype.getAllNodes = function getAllNodes() {\n    var nodes = [this.head],\n      node = this.head;\n\n    while (node.next !== null) {\n      nodes.push(node.next);\n      node = node.next;\n    }\n    return nodes;\n  };\n\n  aid.createLinkedList = function createLinkedList() {\n    return new LinkedList();\n  };\n\n  /**\n   * plus(+) operator\n   *\n   * @static\n   * @method +\n   * @param {Object} object_a\n   * @param {Object} object_b\n   * @returns {Object} return object\n   * @example\n   * var plus = aid.operator['+'];\n   * console.log( plus(1, 2) ); // 3\n   */\n  operator['+'] = function plus(object_a, object_b) {\n    return object_a + object_b;\n  };\n\n  /**\n   * identity(===) operator\n   *\n   * @static\n   * @method ===\n   * @param {Object} object_a\n   * @param {Object} object_b\n   * @returns {Boolean} return boolean\n   * @example\n   * var identity = aid.operator['==='];\n   * console.log( identity(1, 1) ); // true\n   */\n  operator['==='] = function identity(object_a, object_b) {\n    return object_a === object_b;\n  };\n\n  /**\n   * logical not(!) operator\n   *\n   * @static\n   * @method !\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  operator['!'] = function not(obj) {\n    return !obj;\n  };\n\n  /**\n   * is window platform\n   *\n   * @static\n   * @method isWindow\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\n   */\n  platform.isWindow = function isWindow(userAgent) {\n    return /Windows/i.test(userAgent);\n  };\n\n  /**\n   * is Macintosh platform\n   *\n   * @static\n   * @method isMac\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\n   */\n  platform.isMac = function isMac(userAgent) {\n    return /Macintosh/i.test(userAgent);\n  };\n\n  /**\n   * is iOS platform\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\n   *\n   * @static\n   * @method isIOS\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\n   */\n  platform.isIOS = function isIOS(userAgent) {\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\n  };\n\n  /**\n   * is Android platform\n   *\n   * @static\n   * @method isAndroid\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\n   */\n  platform.isAndroid = function isAndroid(userAgent) {\n    return /android/i.test(userAgent);\n  };\n\n  /**\n   * is IE browser\n   *\n   * @static\n   * @method isIE\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\n   */\n  browser.isIE = function isIE(userAgent) {\n    return /msie/i.test(userAgent) || /trident/i.test(userAgent);\n  };\n\n  /**\n   * is Edge browser\n   *\n   * @static\n   * @method isEdge\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\n   */\n  browser.isEdge = function isEdge(userAgent) {\n    return /Gecko/i.test(userAgent) && /Edge/i.test(userAgent);\n  };\n\n  /**\n   * is Firefox browser\n   *\n   * @static\n   * @method isFF\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\n   */\n  browser.isFF = function isFF(userAgent) {\n    return /Firefox/i.test(userAgent);\n  };\n\n  /**\n   * is Opera browser\n   *\n   * @static\n   * @method isOpera\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\n   */\n  browser.isOpera = function isOpera(userAgent) {\n    return /Opera/i.test(userAgent) || /OPR\\//i.test(userAgent);\n  };\n\n  /**\n   * is Chrome browser\n   *\n   * @static\n   * @method isChrome\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\n   */\n  browser.isChrome = function isChrome(userAgent) {\n    return !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/i.test(userAgent);\n  };\n\n  /**\n   * is Safari browser\n   *\n   * @static\n   * @method isSafari\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\n   */\n  browser.isSafari = function isSafari(userAgent) {\n    return !/Chrome/i.test(userAgent) && /Safari/i.test(userAgent);\n  };\n\n  /**\n   * get IE version\n   *\n   * @static\n   * @method getIEVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\n   */\n  browser.getIEVersion = function getIEVersion(userAgent) {\n    if (browser.isIE(userAgent)) {\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Firefox version\n   *\n   * @static\n   * @method getFFVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\n   */\n  browser.getFFVersion = function getFFVersion(userAgent) {\n    if (browser.isFF(userAgent)) {\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Opera version\n   *\n   * @static\n   * @method getOperaVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\n   */\n  browser.getOperaVersion = function getOperaVersion(userAgent) {\n    if (browser.isOpera(userAgent)) {\n      if (/Opera/i.test(userAgent)) {\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      }\n\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Chrome version\n   *\n   * @static\n   * @method getChromeVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\n   */\n  browser.getChromeVersion = function getChromeVersion(userAgent) {\n    if (browser.isChrome(userAgent)) {\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get Safari version\n   *\n   * @static\n   * @method getSafariVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\n   */\n  browser.getSafariVersion = function getSafariVersion(userAgent) {\n    if (browser.isSafari(userAgent)) {\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n\n    return -1;\n  };\n\n  /**\n   * get IE browser Compatibility info object.\n   *\n   * @static\n   * @method getIECompatibility\n   * @param {String} optionUserAgent\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\n   * @example\n   * console.log( aid.browser.getIECompatibility() );\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\n   */\n  browser.getIECompatibility = function getIECompatibility(optionUserAgent) {\n    var ua = optionUserAgent ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\n      regex_msie = /msie/i,\n      regex_msie7 = /msie 7/i,\n      regex_msie8 = /msie 8/i,\n      regex_msie9 = /msie 9/i,\n      regex_msie10 = /msie 10/i,\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\n      regex_trident = /trident/i,\n      regex_trident7 = /trident\\/7/;\n\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\n      // not IE\n      return {\n        isIE: false,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\n      // IE11 standard\n      return {\n        isIE: true,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\n      // IE11 compatibility mode\n      if (regex_msie7.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 7\n        };\n\n      if (regex_msie8.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 8\n        };\n\n      if (regex_msie9.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 9\n        };\n\n      if (regex_msie10.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 10\n        };\n    }\n\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\n      // IE8 ~ 10 compatibility mode\n      return {\n        isIE: true,\n        isCompatibilityMode: true,\n        compatibilityVersion: 7\n      };\n    }\n\n    // IE8 ~ 10 standard\n    return {\n      isIE: true,\n      isCompatibilityMode: false,\n      compatibilityVersion: -1\n    };\n  };\n\n  /**\n   * is browser support draggable attribute of element.\n   *\n   * @static\n   * @method isSupportDraggable\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDraggable() );\n   */\n  browser.isSupportDraggable = function isSupportDraggable() {\n    var div = document.createElement('div');\n\n    return 'draggable' in div;\n  };\n\n  /**\n   * is browser support element methods related drag(ondragstart, ondrop, etc...).\n   *\n   * @static\n   * @method isSupportDragAndDrop\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDragAndDrop() );\n   */\n  browser.isSupportDragAndDrop = function isSupportDragAndDrop() {\n    var div = document.createElement('div');\n\n    return 'ondragstart' in div && 'ondrop' in div;\n  };\n\n  /**\n   * is browser support html5 File API.\n   *\n   * @static\n   * @method isSupportFileApi\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportFileApi() );\n   */\n  browser.isSupportFileApi = function isSupportFileApi() {\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\n  };\n\n  /**\n   * is chrome extension.\n   *\n   * @static\n   * @method isChromeExtension\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\n   */\n  browser.isChromeExtension = function isChromeExtension(userAgent) {\n    if (browser.isChrome(userAgent) && global.chrome) {\n      if (!global.chrome.cookies) {\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\n      }\n\n      if (global.chrome.cookies) return true;\n\n      return false;\n    }\n\n    return false;\n  };\n\n  /**\n   * get cookie\n   *\n   * @static\n   * @method getCookie\n   * @param {String} key\n   * @returns {String} return string\n   * @example\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\n   */\n  browser.getCookie = function getCookie(key) {\n    var cookieArr = document.cookie.split('; '),\n      splitArr = [],\n      keyStr = '',\n      valueStr = '';\n\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\n      splitArr = cookieArr[i].split('=');\n      keyStr = splitArr[0];\n      valueStr = global.decodeURIComponent(splitArr[1]);\n\n      if (keyStr === key) return valueStr;\n    }\n\n    return null;\n  };\n\n  /**\n   * set cookie\n   *\n   * @static\n   * @method setCookie\n   * @param {String} key\n   * @param {String} value\n   * @param {Number} expireSecond\n   * @param {String} path\n   * @param {String} domain\n   * @example\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\n   */\n  browser.setCookie = function setCookie(key, value, expireSecond, path, domain) {\n    var expires = '',\n      pathStr = '; path=' + (path ? path : '/'),\n      domainStr = domain ? '; domain=' + domain : '';\n\n    if (expireSecond) {\n      var date = new Date();\n      date.setTime(date.getTime() + expireSecond * 1000);\n\n      expires = '; expires=' + date.toGMTString();\n    }\n\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\n  };\n\n  /**\n   * trim string\n   *\n   * @static\n   * @method trim\n   * @param {String} str\n   * @returns {String} return trimmed string\n   * @example\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\n   */\n  string.trim = function trim(str) {\n    if (!aid.isString(str)) throw new TypeError('string.trim() requires String parameter.');\n\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n\n  /**\n   * check string has unique characters\n   *\n   * @static\n   * @method hasUniqueChars\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\n   */\n  string.hasUniqueChars = function hasUniqueChars(str) {\n    if (!aid.isString(str)) throw new TypeError('string.hasUniqueChars() requires String parameter.');\n\n    if (!str.length) return true;\n\n    var obj = {},\n      char = '';\n    for (var i = 0, max = str.length; i < max; i++) {\n      char = str.charAt(i);\n\n      if (obj[char] === true) return false;\n      obj[char] = true;\n    }\n\n    return true;\n  };\n\n  /**\n   * get extension(png, jpg ...) string.\n   *\n   * @static\n   * @method getFileExtension\n   * @param {String} fileName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\n   */\n  string.getFileExtension = function getFileExtension(fileName) {\n    if (!aid.isString(fileName)) throw new TypeError('string.getFileExtension() requires String parameter.');\n\n    if (fileName.length <= 0) return '';\n\n    var lastDotIndex = fileName.lastIndexOf('.'),\n      extension = fileName.substr(lastDotIndex + 1);\n\n    return extension;\n  };\n\n  /**\n   * check email string.\n   *\n   * @static\n   * @method isEmail\n   * @param {String} emailStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\n   */\n  string.isEmail = function isEmail(emailStr) {\n    if (!aid.isString(emailStr)) throw new TypeError('string.isEmail() requires String parameter.');\n\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n    var emailRegex = new RegExp(\n      \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"\n    );\n    return emailRegex.exec(emailStr) ? true : false;\n  };\n\n  /**\n   * check iframe string.\n   *\n   * @static\n   * @method isIFrame\n   * @param {String} iframeStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\n   */\n  string.isIFrame = function isIFrame(iframeStr) {\n    if (!aid.isString(iframeStr)) throw new TypeError('string.isIFrame() requires String parameter.');\n\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeStr);\n  };\n\n  /**\n   * get param value from uri.\n   *\n   * @static\n   * @method getUriParam\n   * @param {String} uri\n   * @param {String} parameterName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\n   */\n  string.getUriParam = function getUriParam(uri, parameterName) {\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\n      throw new TypeError('string.getUriParam() requires String parameters.');\n    }\n\n    if (uri.length < 1) return '';\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return '';\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    var keyValueArr;\n    for (var i = 0, max = params.length; i < max; ++i) {\n      keyValueArr = params[i].split('=');\n\n      if (keyValueArr.length <= 1) keyValueArr.push('');\n      if (keyValueArr[0] === parameterName) return global.decodeURIComponent(keyValueArr[1]);\n    }\n\n    return '';\n  };\n\n  /**\n   * get param values from uri.\n   *\n   * @static\n   * @method getUriParams\n   * @param {String} uri\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\n   */\n  string.getUriParams = function getUriParams(uri) {\n    if (!aid.isString(uri)) throw new TypeError('string.getUriParams() requires String parameter.');\n\n    if (uri.length < 1) return null;\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return null;\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    var keyValueArr,\n      obj = {};\n    for (var i = 0, max = params.length; i < max; ++i) {\n      keyValueArr = params[i].split('=');\n      if (keyValueArr.length <= 1) return null;\n\n      obj[keyValueArr[0]] = keyValueArr[1];\n    }\n\n    return obj;\n  };\n\n  /**\n   * get uri combined parameters\n   *\n   * @static\n   * @method getUriCombinedParams\n   * @param {String} uri\n   * @param {Object} parameters\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\n   */\n  string.getUriCombinedParams = function getUriCombinedParams(uri, parameters) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getUriCombinedParams() must be String.');\n\n    if (!aid.isObject(parameters))\n      throw new TypeError('parameters parameter type of string.getUriCombinedParams() must be Object.');\n\n    if (!uri) return '';\n    if (!parameters) return uri;\n\n    var str = '';\n    for (var key in parameters) {\n      str += '&' + key + '=' + String(parameters[key]);\n    }\n\n    if (str === '') return uri;\n\n    var tmpArr = uri.split('#'),\n      hashStr = aid.isDefined(tmpArr[1]) ? '#' + tmpArr[1] : '';\n\n    uri = tmpArr[0];\n    uri = (uri.indexOf('?') >= 0 ? uri + str : uri + '?' + str.substr(1)) + hashStr;\n\n    return uri;\n  };\n\n  /**\n   * check youtube video id.\n   *\n   * @static\n   * @method isValidYoutubeVideoId\n   * @param {String} youtubeId\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\n   */\n  string.isValidYoutubeVideoId = function isValidYoutubeVideoId(youtubeId) {\n    if (!aid.isString(youtubeId))\n      throw new TypeError('youtubeId parameter type of string.isValidYoutubeVideoId() must be String.');\n\n    var regex = /^(\\w|-|_){11}$/;\n    return regex.exec(youtubeId) ? true : false;\n  };\n\n  /**\n   * check youtube uri is valid.\n   *\n   * @static\n   * @method getObjCheckYoutubeURI\n   * @param {String} uri\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\n   * @example\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   */\n  string.getObjCheckYoutubeURI = function getObjCheckYoutubeURI(uri) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckYoutubeURI() must be String.');\n\n    var YOUTUBE_REGEXES = {\n      watch: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\n      embed: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\n      v: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/\n    };\n\n    var uriType = null;\n    for (var key in YOUTUBE_REGEXES) {\n      var val = YOUTUBE_REGEXES[key];\n      if (!val) continue;\n\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        break;\n      }\n    }\n\n    var youtubeId = '',\n      tmpArr = [];\n    switch (uriType) {\n      case 'watch':\n        youtubeId = string.getUriParam(uri, 'v') || '';\n        break;\n\n      case 'embed':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'v':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'youtu.be':\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      default:\n    }\n\n    var isValidURI = youtubeId !== '' && string.isValidYoutubeVideoId(youtubeId);\n\n    return {\n      type: 'youtube',\n      uri: uri,\n      youtubeId: youtubeId,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * check twitch uri is valid.\n   *\n   * @static\n   * @method getObjCheckTwitchURI\n   * @param {String} uri\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\n   * @example\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   */\n  string.getObjCheckTwitchURI = function getObjCheckTwitchURI(uri) {\n    /*\n     + Live Video\n     https://www.twitch.tv/surrenderhs // channel link\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\n\n     + Past Video\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\n\n     + URI TEST\n     https://www.twitch.tv/surrenderhs\n     www.twitch.tv/surrenderhs\n     twitch.tv/surrenderhs\n\n     https://player.twitch.tv/?channel=surrenderhs\n     player.twitch.tv/?channel=surrenderhs\n\n     https://www.twitch.tv/surrenderhs/v/56097351\n     www.twitch.tv/surrenderhs/v/56097351\n\n     https://player.twitch.tv/?video=v56097351\n     player.twitch.tv/?video=v56097351\n     */\n\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckTwitchURI() must be String.');\n\n    var TWITCH_REGEXES = {\n      liveChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\n      liveVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\n      chatting: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\n      pastChannel: /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\n      pastVideo: /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/\n    };\n\n    var channelName = '',\n      videoId = '',\n      isChatting = false,\n      isValidURI = false;\n\n    var uriType = null;\n    for (var key in TWITCH_REGEXES) {\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\n      if (!val) continue;\n\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        isValidURI = true;\n        break;\n      }\n    }\n\n    var tmpArr = [];\n    switch (uriType) {\n      // https://www.twitch.tv/surrenderhs\n      case 'liveChannel':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://player.twitch.tv/?channel=surrenderhs\n      case 'liveVideo':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://www.twitch.tv/surrenderhs/chat?popout=\n      case 'chatting':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        isChatting = true;\n        break;\n\n      // https://www.twitch.tv/surrenderhs/v/56097351\n      case 'pastChannel':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        videoId = tmpArr[2];\n        break;\n\n      // https://player.twitch.tv/?video=v56097351\n      case 'pastVideo':\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        videoId = tmpArr[1];\n        break;\n\n      default:\n    }\n\n    isValidURI = channelName || videoId ? true : false;\n\n    return {\n      type: 'twitch',\n      uri: uri,\n      channelName: channelName,\n      videoId: videoId,\n      isChatting: isChatting,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * get prefixed document property string\n   *\n   * @static\n   * @method getDocumentPrefixedProperty\n   * @param {String} propertyName\n   * @param {Boolean} isPropertyFirstCharToUpperCase\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\n   */\n  string.getDocumentPrefixedProperty = function getDocumentPrefixedProperty(\n    propertyName,\n    isPropertyFirstCharToUpperCase\n  ) {\n    if (!aid.isString(propertyName))\n      throw new TypeError('propertyName parameter type of string.getDocumentPrefixedProperty() must be String.');\n\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\n      throw new TypeError(\n        'isPropertyFirstCharToUpperCase parameter type of string.getDocumentPrefixedProperty() must be Boolean.'\n      );\n\n    if (propertyName in global.document) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in document) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * get prefixed element style property string\n   *\n   * @static\n   * @method getElementPrefixedStyle\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\n   */\n  string.getElementPrefixedStyle = function getElementPrefixedStyle(propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName))\n      throw new TypeError('propertyName parameter type of string.getElementPrefixedStyle() must be String.');\n\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase))\n      throw new TypeError(\n        'isPropertyFirstCharToUpperCase parameter type of string.getElementPrefixedStyle() must be Boolean.'\n      );\n\n    var style = global.document.createElement('div').style;\n    if (propertyName in style) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = isPropertyFirstCharToUpperCase === true ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = isPropFirstCharUppercase ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in style) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\n   *\n   * @static\n   * @method absentToEmpty\n   * @param {String} absentableStr\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\n   */\n  string.absentToEmpty = function absentToEmpty(absentableStr) {\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\n\n    return absentableStr;\n  };\n\n  /**\n   * convert number to string type with commas.\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n   *\n   * @static\n   * @method numberWithCommas\n   * @param {Number} number\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.numberWithCommas(1000000) ); // '1,000,000'\n   */\n  string.numberWithCommas = function numberWithCommas(number) {\n    if (!aid.isInteger(number)) throw new TypeError('string.numberWithCommas() requires Integer Number parameter.');\n\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  /**\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }.\n   *\n   * @static\n   * @method getPositionFromTranslateStr\n   * @param {String} str\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px)') ); // {x: 99, y: 0}\n   * console.log( aid.string.getPositionFromTranslateStr('translate(99px, 999px)') ); // {x: 99, y: 999}\n   * console.log( aid.string.getPositionFromTranslateStr('translateX(99px)') ); // {x: 99, y: 0}\n   * console.log( aid.string.getPositionFromTranslateStr('translateY(99px)') ); // {x: 0, y: 99}\n   */\n  string.getPositionFromTranslateStr = function getPositionFromTranslateStr(str) {\n    if (!aid.isString(str)) throw new TypeError('string.getPositionFromTranslateStr() requires String parameter.');\n\n    var obj = {\n      x: 0,\n      y: 0\n    };\n    if (!aid.isDefined(str)) return obj;\n\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\n    if (values.length <= 0) return obj;\n\n    if (/translateX/g.test(str)) {\n      obj.x = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    if (/translateY/g.test(str)) {\n      obj.y = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    obj.x = parseFloat(values[0], 10);\n    if (values.length > 1) obj.y = parseFloat(values[1], 10);\n\n    return obj;\n  };\n\n  /**\n   * get flag string is palindrome.\n   *\n   * @static\n   * @method isPalindrome\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\n   * console.log( aid.string.isPalindrome('motor') ); // false\n   */\n  string.isPalindrome = function isPalindrome(str) {\n    if (!aid.isString(str)) throw new TypeError('string.isPalindrome() requires String parameter.');\n\n    if (str.length <= 1) return true;\n\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\n\n    return aid.string.isPalindrome(str.slice(-1, 1));\n  };\n\n  /**\n   * get aspectFill content size\n   *\n   * @static\n   * @method getSizeAspectFill\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fillWidth\n   * @param {Number} fillHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFill = function getSizeAspectFill(srcWidth, srcHeight, fillWidth, fillHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fillWidth) || !isNumber(fillHeight)) {\n      throw new TypeError('math.getSizeAspectFill() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fillWidth,\n      modifiedSizeH = Math.ceil(fillWidth / srcWidth * srcHeight);\n\n    if (modifiedSizeH < fillHeight) {\n      modifiedSizeW = Math.ceil(fillHeight / srcHeight * srcWidth);\n      modifiedSizeH = fillHeight;\n    }\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get aspectFit content size\n   *\n   * @static\n   * @method getSizeAspectFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @param {Number} fitHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFit = function getSizeAspectFit(srcWidth, srcHeight, fitWidth, fitHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth) || !isNumber(fitHeight)) {\n      throw new TypeError('math.getSizeAspectFit() requires Number parameters.');\n    }\n\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get widthFit content size\n   *\n   * @static\n   * @method getSizeWidthFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\n   */\n  math.getSizeWidthFit = function getSizeWidthFit(srcWidth, srcHeight, fitWidth) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth)) {\n      throw new TypeError('math.getSizeWidthFit() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fitWidth,\n      modifiedSizeH = Math.ceil(fitWidth / srcWidth * srcHeight);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get flag whether 2 numbers are equal by Number.EPSILON (2.220446049250313e-16)\n   *\n   * @static\n   * @method isEpsilonEqual\n   * @param {Number} number_a\n   * @param {Number} number_b\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\n   */\n  math.isEpsilonEqual = function isEpsilonEqual(number_a, number_b) {\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\n      throw new TypeError('math.isEpsilonEqual() requires Number parameters.');\n    }\n\n    var epsilon = aid.isDefined(Number.EPSILON) ? Number.EPSILON : 2.220446049250313e-16;\n\n    return Math.abs(number_a - number_b) < epsilon;\n  };\n\n  /**\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\n   * value increases from startIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1.\n   * if searchIndex in values, return true.\n   * otherwise, return false.\n   *\n   * @static\n   * @method isIndexInLoop\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @param {Number} searchIndex\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\n   */\n  math.isIndexInLoop = function isIndexInLoop(totalLength, loopGap, firstIndex, searchIndex) {\n    if (arguments.length < 4) throw new Error('math.isIndexInLoop() requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex) || !isInteger(searchIndex)) {\n      throw new TypeError('math.isIndexInLoop() requires Integer Number parameters.');\n    }\n\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.isIndexInLoop() cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength) {\n      throw new Error('loopGap parameter of math.isIndexInLoop() cannot bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap; i++) {\n      if (index === searchIndex) return true;\n      index = index + 1 > totalLength ? 1 : index + 1;\n    }\n\n    return false;\n  };\n\n  /**\n   * get looped index from firstIndex in 1 ~ totalLength.\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1. and, return value.\n   *\n   * @static\n   * @method getLoopedLastIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\n   */\n  math.getLoopedLastIndex = function getLoopedLastIndex(totalLength, loopGap, firstIndex) {\n    if (arguments.length < 3) throw new Error('math.getLoopedLastIndex() requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex)) {\n      throw new TypeError('math.getLoopedLastIndex() requires Integer Number parameters.');\n    }\n\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.getLoopedLastIndex() cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength || firstIndex > totalLength) {\n      throw new Error(\n        'loopGap, firstIndex parameter of math.getLoopedLastIndex() cannot bigger than totalLength parameter.'\n      );\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = index + 1 > totalLength ? 1 : index + 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\n   * if value is smaller than 0, change value to totalLength. and return value.\n   *\n   * @static\n   * @method getReverseLoopedFirstIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\n   */\n  math.getReverseLoopedFirstIndex = function getReverseLoopedFirstIndex(totalLength, loopGap, lastIndex) {\n    if (arguments.length < 3) throw new Error('math.getReverseLoopedFirstIndex() requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(lastIndex)) {\n      throw new TypeError('math.getReverseLoopedFirstIndex() requires Integer Number parameters.');\n    }\n\n    if (totalLength < 1 || lastIndex < 1) {\n      throw new Error('totalLength, lastIndex parameter of math.getReverseLoopedFirstIndex() cannot smaller than 1.');\n    }\n\n    if (loopGap > totalLength || lastIndex > totalLength) {\n      throw new Error(\n        'loopGap, lastIndex parameter of math.getReverseLoopedFirstIndex() cannot bigger than totalLength parameter.'\n      );\n    }\n\n    var index = lastIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = index - 1 < 1 ? totalLength : index - 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get factorial value\n   *\n   * @static\n   * @method factorial\n   * @param {Number} Int number\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.factorial(-99) ); // 1\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\n   */\n  math.factorial = function factorial(number) {\n    if (!aid.isInteger(number)) throw new TypeError('math.factorial() requires Integer Number parameter.');\n\n    if (number < 1) return 1;\n    return number * aid.math.factorial(number - 1);\n  };\n\n  /**\n   * get board pagination info object.\n   *\n   * @static\n   * @method getObjForPagination\n   * @param {Number} totalPostNum\n   * @param {Number} displayPostNumPerPage\n   * @param {Number} displayPaginationBtnNum\n   * @param {Number} pageIndex\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.math.getObjForPagination(39, 10, 5, 1) ); // {totalPostNum: 39, displayPostNumPerPage: 10, displayPaginationBtnNum: 5, pageIndex: 1, totalPageNum: 4, prevPageIndex: 0, firstPageIndex: 1, lastPageIndex: 4, nextPageIndex: 0}\n   */\n  math.getObjForPagination = function getObjForPagination(\n    totalPostNum,\n    displayPostNumPerPage,\n    displayPaginationBtnNum,\n    pageIndex\n  ) {\n    if (arguments.length < 4) throw new Error('math.getObjForPagination() requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (\n      !isInteger(totalPostNum) ||\n      !isInteger(displayPostNumPerPage) ||\n      !isInteger(displayPaginationBtnNum) ||\n      !isInteger(pageIndex)\n    ) {\n      throw new TypeError('math.getObjForPagination() requires Integer Number parameters.');\n    }\n\n    if (totalPostNum <= 0 || displayPostNumPerPage <= 0 || displayPaginationBtnNum <= 0 || pageIndex <= 0) {\n      throw new TypeError('math.getObjForPagination() requires positive Integer Number parameters.');\n    }\n\n    var totalPageNum = Math.ceil(totalPostNum / displayPostNumPerPage);\n    if (pageIndex < 1) pageIndex = 1;\n    if (pageIndex > totalPageNum) pageIndex = totalPageNum;\n\n    var paginationBtnGroupIndex = Math.floor((pageIndex - 1) / displayPaginationBtnNum),\n      prevPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum,\n      firstPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum + 1,\n      lastPageIndex = firstPageIndex + displayPaginationBtnNum - 1,\n      nextPageIndex = lastPageIndex + 1;\n\n    if (lastPageIndex > totalPageNum) lastPageIndex = totalPageNum;\n    if (nextPageIndex > totalPageNum) nextPageIndex = 0;\n\n    return {\n      totalPostNum: totalPostNum,\n      displayPostNumPerPage: displayPostNumPerPage,\n      displayPaginationBtnNum: displayPaginationBtnNum,\n      pageIndex: pageIndex,\n\n      totalPageNum: totalPageNum,\n      prevPageIndex: prevPageIndex,\n      firstPageIndex: firstPageIndex,\n      lastPageIndex: lastPageIndex,\n      nextPageIndex: nextPageIndex\n    };\n  };\n\n  /**\n   * convert degree to radian.\n   *\n   * @static\n   * @method degreeToRadian\n   * @param {Number} degree\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.degreeToRadian(90) ); // 1.5707963267948966\n   */\n  math.degreeToRadian = function degreeToRadian(degree) {\n    if (!aid.isNumber(degree)) throw new TypeError('math.degreeToRadian() requires Number parameter.');\n\n    return degree * Math.PI / 180;\n  };\n\n  /**\n   * convert radian to radian.\n   *\n   * @static\n   * @method radianToDegree\n   * @param {Number} radian\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.radianToDegree(1.5707963267948966) ); // 90\n   */\n  math.radianToDegree = function radianToDegree(radian) {\n    if (!aid.isNumber(radian)) throw new TypeError('math.radianToDegree() requires Number parameter.');\n\n    return radian * 180 / Math.PI;\n  };\n\n  /**\n   * get height of right triangle from base line width, acute angle\n   *\n   * @static\n   * @method getHeightOfRightTriangle\n   * @param {Number} baseLineWidth\n   * @param {Number} acuteAngleDegree\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.getHeightOfRightTriangle(100, 30) ); // 57.73502691896256\n   */\n  math.getHeightOfRightTriangle = function getHeightOfRightTriangle(baseLineWidth, acuteAngleDegree) {\n    if (!aid.isNumber(baseLineWidth) || !aid.isNumber(acuteAngleDegree)) {\n      throw new TypeError('math.getHeightOfRightTriangle() requires Number parameters.');\n    }\n\n    if (acuteAngleDegree >= 90)\n      throw new Error(\n        'acuteAngleDegree parameter of math.getHeightOfRightTriangle() cannot greater than or equal to 90.'\n      );\n\n    return baseLineWidth * Math.tan(math.degreeToRadian(acuteAngleDegree));\n  };\n\n  /**\n   * get distance between two points\n   *\n   * @static\n   * @method getDistanceBetweenTwoPoints\n   * @param {Object} point1\n   * @param {Object} point2\n   * @returns {Number} return number\n   * @example\n   * var point1 = {x: 0, y: 0}\n   * var point2 = {x: 100, y: 100};\n   * console.log( aid.math.getDistanceBetweenTwoPoints(point1, point2) ); // 141.4213562373095\n   */\n  math.getDistanceBetweenTwoPoints = function getDistanceBetweenTwoPoints(point1, point2) {\n    if (!aid.isObject(point1) || !aid.isObject(point2)) {\n      throw new TypeError('math.getDistanceBetweenTwoPoints() requires Object parameters.');\n    }\n\n    var isNumber = aid.isNumber;\n    if (!isNumber(point1.x) || !isNumber(point1.y) || !isNumber(point2.x) || !isNumber(point2.y)) {\n      throw new TypeError('math.getDistanceBetweenTwoPoints() requires object parameters have x, y property.');\n    }\n\n    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n\n    return distance;\n  };\n\n  /**\n   * get orthogonal point between line and some point\n   *\n   * @static\n   * @method getOrthogonalPointBetweenLineAndSomePoint\n   * @param {Object} collinearPoint1\n   * @param {Object} collinearPoint2\n   * @param {Object} somePoint\n   * @returns {Object} return object\n   * @example\n   * var collinearPoint1 = {x: 0, y: 0};\n   * var collinearPoint2 = {x: 100, y: 100};\n   * var somePoint = {x: 50, y: 100};\n   * console.log( aid.math.getOrthogonalPointBetweenLineAndSomePoint(collinearPoint1, collinearPoint2, somePoint) ); // {x: 75, y: 75}\n   */\n  math.getOrthogonalPointBetweenLineAndSomePoint = function getOrthogonalPointBetweenLineAndSomePoint(\n    collinearPoint1,\n    collinearPoint2,\n    somePoint\n  ) {\n    var isObject = aid.isObject;\n    if (!isObject(collinearPoint1) || !isObject(collinearPoint2) || !isObject(somePoint)) {\n      throw new TypeError('math.getOrthogonalPointBetweenLineAndSomePoint() requires Object parameters.');\n    }\n\n    var isNumber = aid.isNumber;\n    if (\n      !isNumber(collinearPoint1.x) ||\n      !isNumber(collinearPoint1.y) ||\n      !isNumber(collinearPoint2.x) ||\n      !isNumber(collinearPoint2.y) ||\n      !isNumber(somePoint.x) ||\n      !isNumber(somePoint.y)\n    ) {\n      throw new TypeError(\n        'math.getOrthogonalPointBetweenLineAndSomePoint() requires object parameters have x, y property.'\n      );\n    }\n\n    if (collinearPoint1.x === collinearPoint2.x && collinearPoint1.y === collinearPoint2.y) {\n      // collinearPoint1 is equal to collinearPoint2. no line.\n      return null;\n    }\n\n    var diffX = collinearPoint2.x - collinearPoint1.x,\n      diffY = collinearPoint2.y - collinearPoint1.y;\n\n    if (diffX === 0)\n      return {\n        x: collinearPoint1.x,\n        y: somePoint.y\n      };\n\n    if (diffY === 0)\n      return {\n        x: somePoint.x,\n        y: collinearPoint1.y\n      };\n\n    var lineSlope = diffY / diffX,\n      somePointLineSlope = -1 / lineSlope;\n\n    var orthogonalPoint = {};\n    orthogonalPoint.x =\n      (somePointLineSlope * somePoint.x - lineSlope * collinearPoint1.x + collinearPoint1.y - somePoint.y) /\n      (somePointLineSlope - lineSlope);\n    orthogonalPoint.y = somePointLineSlope * (orthogonalPoint.x - somePoint.x) + somePoint.y;\n\n    return orthogonalPoint;\n  };\n\n  /**\n   * greater than\n   *\n   * @static\n   * @method gt\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.gt(1)(9) ); // true\n   */\n  math.gt = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs))) throw new TypeError('math.gt requires Number parameters');\n\n    return lhs > rhs;\n  });\n\n  /**\n   * less than\n   *\n   * @static\n   * @method lt\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.lt(9)(1) ); // true\n   */\n  math.lt = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs))) throw new TypeError('math.lt requires Number parameters');\n\n    return lhs < rhs;\n  });\n\n  /**\n   * greater than equal\n   *\n   * @static\n   * @method gte\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.gte(1)(1) ); // true\n   * console.log( aid.math.gte(1)(9) ); // true\n   */\n  math.gte = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs))) throw new TypeError('math.gte requires Number parameters');\n\n    return lhs >= rhs;\n  });\n\n  /**\n   * less than equal\n   *\n   * @static\n   * @method lte\n   * @param {Number} number\n   * @param {Number} number\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.lte(1)(1) ); // true\n   * console.log( aid.math.lte(9)(1) ); // true\n   */\n  math.lte = aid.curry2(function(lhs, rhs) {\n    if (!aid.allOf(aid.isNumber(lhs), aid.isNumber(rhs))) throw new TypeError('math.lte requires Number parameters');\n\n    return lhs <= rhs;\n  });\n\n  /**\n   * days name\n   *\n   * @static\n   * @property date.DAYS\n   * @returns {Array} return array\n   * @example\n   */\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  /**\n   * months name\n   *\n   * @static\n   * @property date.MONTHS\n   * @returns {Array} return array\n   * @example\n   */\n  date.MONTHS = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ];\n\n  /**\n   * 1 minutes to second unit (60 sec)\n   *\n   * @static\n   * @property date.MIN_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.MIN_TO_SEC = 60;\n\n  /**\n   * 1 hour to second unit (60 * 60 = 3600 sec)\n   *\n   * @static\n   * @property date.HOUR_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.HOUR_TO_SEC = 3600;\n\n  /**\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\n   *\n   * @static\n   * @property date.DAY_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.DAY_TO_SEC = 86400;\n\n  /**\n   * equal to Array.indexOf\n   *\n   * @static\n   * @method indexOf\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\n   */\n  array.indexOf = function indexOf(arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('array.indexOf() requires Number parameter.');\n\n    for (var i = 0, max = arr.length; i < max; ++i) {\n      if (arr[i] === target) return i;\n    }\n\n    return -1;\n  };\n\n  /**\n   * get index of minimum number in Array.\n   *\n   * @static\n   * @method indexOfMin\n   * @param {Array} arr\n   * @param {Number} startSearchIndex\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\n   */\n  array.indexOfMin = function indexOfMin(arr, startSearchIndex) {\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\n\n    var startIndex = startSearchIndex > 0 ? startSearchIndex : 0;\n    if (arr.length <= startIndex) return -1;\n\n    var minVal = arr[startIndex],\n      minIndex = startIndex;\n\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\n      if (arr[i] < minVal) {\n        minVal = arr[i];\n        minIndex = i;\n      }\n    }\n\n    return minIndex;\n  };\n\n  /**\n   * swap two elements in Array.\n   *\n   * @static\n   * @method swap\n   * @param {Array} arr\n   * @param {Number} firstIndex\n   * @param {Number} secondIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\n   */\n  array.swap = function swap(arr, firstIndex, secondIndex) {\n    if (arguments.length !== 3) return null;\n\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\n\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\n\n    var tmp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = tmp;\n\n    return arr;\n  };\n\n  /**\n   * apply selection sort in Array.\n   *\n   * @static\n   * @method selectionSort\n   * @param {Array} arr\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.selectionSort = function selectionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var minIndex = 0;\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\n      minIndex = array.indexOfMin(arr, i);\n      array.swap(arr, i, minIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply insertion sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\n   *\n   * @static\n   * @method insertionSort\n   * @param {Array} arr\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.insertionSort = function insertionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var value;\n    for (var i = 1, max = arr.length; i < max; i++) {\n      value = arr[i];\n\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\n        arr[j + 1] = arr[j];\n      }\n      arr[j + 1] = value;\n    }\n\n    return arr;\n  };\n\n  /**\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\n   * this function is only used by aid.array.mergeSort function.\n   *\n   * @static\n   * @method merge\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} middleIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   */\n  array.merge = function merge(arr, startIndex, middleIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\n\n    var i = startIndex,\n      j = middleIndex + 1,\n      k = startIndex,\n      tmpArr = [];\n\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\n    while (i <= middleIndex && j <= endIndex) {\n      if (arr[i] <= arr[j]) {\n        tmpArr[k++] = arr[i++];\n      } else {\n        tmpArr[k++] = arr[j++];\n      }\n    }\n\n    if (i > middleIndex) {\n      // set rest right array\n      for (var r = j; r <= endIndex; r++) {\n        tmpArr[k] = arr[r];\n        k++;\n      }\n    } else {\n      // set rest left array\n      for (var l = i; l <= middleIndex; l++) {\n        tmpArr[k] = arr[l];\n        k++;\n      }\n    }\n\n    // set sorted values to arr.\n    for (var n = startIndex; n <= endIndex; n++) {\n      arr[n] = tmpArr[n];\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply merge sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\n   *\n   * @static\n   * @method mergeSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.mergeSort = function mergeSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex + 1 === endIndex) {\n      if (arr[startIndex] > arr[endIndex]) {\n        aid.array.swap(arr, startIndex, endIndex);\n      }\n\n      return arr;\n    }\n\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\n\n    aid.array.mergeSort(arr, startIndex, middleIndex);\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\n\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\n\n    return arr;\n  };\n\n  /**\n   * quick sort with use pivot value.\n   * this function is only used by aid.array.quickSort function.\n   *\n   * @static\n   * @method getPivotIndexAfterPartition\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\n   */\n  array.getPivotIndexAfterPartition = function getPivotIndexAfterPartition(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\n\n    if (startIndex > endIndex) return -1;\n\n    if (arr.length <= 1) return 0;\n\n    var pivot = arr[endIndex],\n      swapIndex = startIndex;\n\n    for (var i = startIndex; i < endIndex; i++) {\n      if (arr[i] <= pivot) {\n        aid.array.swap(arr, i, swapIndex);\n        swapIndex++;\n      }\n    }\n\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\n\n    return swapIndex;\n  };\n\n  /**\n   * apply quick sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\n   *\n   * @static\n   * @method quickSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.quickSort = function quickSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex < endIndex) {\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\n\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * remove element in Array, and return cloned Array.\n   *\n   * @static\n   * @method remove\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Array} return array\n   * @example\n   * var arr = [1, 2, 3, 4, 5, 99];\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\n   */\n  array.remove = function remove(arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('arr parameter type of array.remove() must be Array.');\n\n    var clonedArr = arr.slice(0),\n      index = array.indexOf(clonedArr, target);\n    if (index >= 0) clonedArr.splice(index, 1);\n\n    return clonedArr;\n  };\n\n  /**\n   * get 2 x 2 Matrix Array\n   *\n   * @static\n   * @method getMatrixArr\n   * @param {Number} rowNum\n   * @param {Number} columnNum\n   * @param {Object} initialVal\n   * @returns {Array} return array\n   * @example\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\n   */\n  array.getMatrixArr = function getMatrixArr(rowNum, columnNum, initialVal) {\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\n      throw new TypeError('rowNum, columnNum parameter of array.getMatrixArr() must be Integer Number.');\n    }\n\n    if (arguments.length !== 3) throw Error('array.getMatrixArr() requires 3 parameters.');\n\n    var arr = [],\n      columns = [];\n    for (var i = 0; i < rowNum; ++i) {\n      columns = [];\n\n      for (var j = 0; j < columnNum; ++j) {\n        columns[j] = initialVal;\n      }\n\n      arr[i] = columns;\n    }\n\n    return arr;\n  };\n\n  /**\n   * binary search version of Array.indexOf\n   *\n   * @static\n   * @method binaryIndexOf\n   * @param {Array} sortedArray\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\n   */\n  array.binaryIndexOf = function binaryIndexOf(sortedArray, target) {\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\n\n    var first = 0,\n      last = sortedArray.length - 1,\n      middle;\n\n    while (first <= last) {\n      middle = Math.floor((first + last) / 2);\n\n      if (target === sortedArray[middle]) {\n        return middle;\n      } else {\n        if (target < sortedArray[middle]) {\n          last = middle - 1;\n        } else {\n          first = middle + 1;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * get object has property in array.\n   * this object is first matched element in array by value or regex.\n   *\n   * @static\n   * @method getFirstObjectHasProperty\n   * @param {Array} arrayHasObjects\n   * @param {String} propertyKey\n   * @param {Object} findPropertyValueOrRegex\n   * @returns {Object} return object\n   * @example\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\n   */\n  array.getFirstObjectHasProperty = function getFirstObjectHasProperty(\n    arrayHasObjects,\n    propertyKey,\n    findPropertyValueOrRegex\n  ) {\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\n\n    if (!aid.isString(propertyKey)) return null;\n\n    var obj,\n      result = null;\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\n      obj = arrayHasObjects[i];\n      if (!obj.hasOwnProperty(propertyKey)) continue;\n\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\n          result = obj;\n          break;\n        }\n      } else {\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\n          result = obj;\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * apply overlapped condition sort in array.\n   *\n   * @static\n   * @method overlappedConditionSortByProperty\n   * @param {Array} arrayHasObjects\n   * @param {Array} sortConditions. condition is object has property, func property\n   * @returns {Array} return array\n   * @example\n   * var arrayHasObjects = [{group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}];\n   * var result = array.overlappedConditionSortByProperty(arr, [\n   * { property: 'group', func: function (a, b) { return a.group - b.group; } },\n   * { property: 'level', func: function (a, b) { return a.level - b.level; } },\n   * { property: 'date', func: function (a, b) { return new Date(a.date).getTime() - new Date(b.date).getTime(); } }\n   * ]);\n   * console.log(result); // [{group: 1, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 1, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 1, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 2, date: '2017-01-01T00:00:00.000Z'}, {group: 2, level: 3, date: '2017-01-01T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 1, date: '2017-02-04T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-01-03T00:00:00.000Z'}, {group: 3, level: 2, date: '2017-02-04T00:00:00.000Z'}, {group: 4, level: 1, date: '2017-01-01T00:00:00.000Z'}]\n   */\n  array.overlappedConditionSortByProperty = function overlappedConditionSortByProperty(\n    arrayHasObjects,\n    sortConditions\n  ) {\n    if (!aid.isArray(arrayHasObjects)) return null;\n\n    var datas = _slice.call(arrayHasObjects);\n\n    if (datas.length <= 1) return datas;\n    if (!aid.isDefined(sortConditions) || !aid.isArray(sortConditions) || sortConditions.length <= 0) return datas;\n\n    var restArgs = aid.rest(_slice.call(arguments), 2),\n      conditionIndex = restArgs.length >= 1 ? restArgs[0] : 0,\n      condition = sortConditions[conditionIndex];\n\n    if (conditionIndex <= 0) datas.sort(condition.func);\n\n    if (sortConditions.length <= 1) return datas;\n\n    // overlapped conditional sort\n    if (conditionIndex < sortConditions.length - 1) {\n      var prevProperty = condition.property,\n        nextConditionIndex = conditionIndex + 1,\n        nextCondition = sortConditions[nextConditionIndex];\n\n      var memoObj = {},\n        memoArr = [],\n        arr;\n\n      var obj, prop;\n      for (var i = 0, max = datas.length; i < max; i++) {\n        obj = datas[i];\n        prop = String(obj[prevProperty]);\n\n        if (!memoObj[prop]) {\n          memoObj[prop] = [];\n          memoArr.push(memoObj[prop]);\n        }\n\n        arr = memoObj[prop];\n        arr.push(obj);\n      }\n\n      for (var j = 0, len = memoArr.length; j < len; j++) {\n        arr = memoArr[j];\n        arr.sort(nextCondition.func);\n\n        memoArr[j] = array.overlappedConditionSortByProperty(arr, sortConditions, nextConditionIndex);\n      }\n\n      return memoArr.reduce(function(acc, curVal) {\n        return acc.concat(curVal);\n      });\n    }\n\n    return datas;\n  };\n\n  /**\n   * check element is in viewport entirely.\n   *\n   * @static\n   * @method isEntirelyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isEntirelyInViewport = function isEntirelyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (global.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (global.innerWidth || document.documentElement.clientWidth)\n    );\n  };\n\n  /**\n   * check element is in viewport partially.\n   *\n   * @static\n   * @method isPartiallyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isPartiallyInViewport = function isPartiallyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect(),\n      windowHeight = global.innerHeight || document.documentElement.clientHeight,\n      windowWidth = global.innerWidth || document.documentElement.clientWidth;\n\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\n    var verticallyInView = rect.top <= windowHeight && rect.top + rect.height >= 0,\n      horizontallyInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n\n    return verticallyInView && horizontallyInView;\n  };\n\n  /**\n   * create script file, and append to target element.\n   *\n   * @static\n   * @method appendScriptFile\n   * @param {String} fileUrl\n   * @param {Element} targetElementToAppendFile\n   * @param {Function} loadCompleteCallback\n   * @example\n   * aid.file.appendScriptFile('https://apis.google.com/js/client.js', document.head, function() { console.log('load script file completely'); });\n   */\n  file.appendScriptFile = function appendScriptFile(fileUrl, targetElementToAppend, loadCompleteCallback) {\n    // document.head, document.body\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n\n    if (typeof loadCompleteCallback === 'function') {\n      if (typeof script.onreadystatechange === 'undefined') {\n        script.onload = loadCompleteCallback;\n      } else {\n        script.onreadystatechange = function() {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            loadCompleteCallback();\n          }\n        };\n      }\n    }\n\n    script.src = fileUrl;\n\n    var ele = targetElementToAppend;\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (ele) {\n      ele.appendChild(script);\n    } else {\n      var firstScript = document.getElementsByTagName('script')[0];\n      firstScript.parentNode.insertBefore(script, firstScript);\n    }\n  };\n\n  /**\n   * writes text to the system clipboard.\n   *\n   * @static\n   * @method copyText\n   * @param {String} str\n   * @param {Function} successCallback\n   * @param {Function} errorCallback\n   * @example\n   * aid.clipboard.copyText('aid.js', function(str) { console.log(str); // 'aid.js' }, function(error) { console.log(error); });\n   */\n  clipboard.copyText = function copyText(str, successCallback, errorCallback) {\n    if (!isString(str)) {\n      console.log('oh no');\n      throw new TypeError('str parameter type of clipboard.copyText() must be String.');\n    }\n\n    if (isDefined(successCallback) && !isFunction(successCallback))\n      throw new TypeError(\n        'successCallback parameter type of clipboard.copyText() must be undefined or null or Function.'\n      );\n\n    if (isDefined(errorCallback) && !isFunction(errorCallback))\n      throw new TypeError(\n        'errorCallback parameter type of clipboard.copyText() must be undefined or null or Function.'\n      );\n\n    if (!navigator.clipboard) {\n      // fallback. no support\n      var textArea = document.createElement('textarea');\n      textArea.style.position = 'fixed';\n      textArea.style.top = '-9999px';\n      textArea.style.left = '-9999px';\n      textArea.style.width = '2em'; // setting to 1px / 1em doesn't work as this gives a negative w/h on some browsers.\n      textArea.style.height = '2em';\n      textArea.value = str;\n      document.body.appendChild(textArea);\n\n      textArea.focus();\n      textArea.select();\n\n      try {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n        var isSuccessCopy = document.execCommand('copy');\n        if (isSuccessCopy) {\n          if (successCallback) successCallback.call(null, str);\n          return;\n        }\n\n        if (errorCallback)\n          errorCallback.call(\n            null,\n            new Error('clipboard.copyText() cannot copy string with using document.execCommand(\"copy\").')\n          );\n      } catch (error) {\n        if (errorCallback) errorCallback.call(null, error);\n      }\n\n      document.body.removeChild(textArea);\n    } else {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\n      navigator.clipboard.writeText(str).then(\n        function() {\n          if (successCallback) successCallback.call(null, str);\n        },\n        function(error) {\n          if (errorCallback) errorCallback.call(null, error);\n        }\n      );\n    }\n  };\n\n  /*\n   * export\n   */\n  aid.operator = operator;\n  aid.platform = platform;\n  aid.browser = browser;\n  aid.string = string;\n  aid.math = math;\n  aid.date = date;\n  aid.array = array;\n  aid.element = element;\n  aid.file = file;\n  aid.clipboard = clipboard;\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = aid;\n    }\n  } else if (typeof define === 'function' && define.amd) {\n    define('aid', [], function() {\n      return aid;\n    });\n  } else {\n    global.aid = aid;\n  }\n})();\n"]}