{"version":3,"sources":["aid.js"],"names":["global","self","this","aid","platform","browser","string","math","date","array","element","existy","obj","isDefined","isBoolean","constructor","Boolean","isNumber","Number","isInteger","isFinite","Math","floor","isString","String","isArray","Array","isObject","Object","isFunction","Function","isRegExp","RegExp","extend","destination","source","key","hasOwnProperty","inherit","F","ChildClass","ParentClass","prototype","super","Stack","_dataStore","_top","push","pop","peek","length","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","find","node","findPrevious","insert","prevNodeData","insertNode","prevNode","remove","getAllNodes","nodes","createLinkedList","isWindow","userAgent","test","isMac","isIOS","MSStream","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isSafari","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie8","regex_msie9","regex_msie10","regex_msie11","regex_trident","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","getCookie","cookieArr","cookie","split","splitArr","keyStr","valueStr","i","max","decodeURIComponent","setCookie","value","expireSecond","path","domain","expires","pathStr","domainStr","Date","setTime","getTime","toGMTString","encodeURIComponent","trim","str","TypeError","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","emailStr","exec","isIFrame","iframeStr","getUriParam","uri","parameterName","tmpArr","paramStr","params","keyValueArr","getUriParams","getUriCombinedParams","parameters","indexOf","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","v","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","slice","getElementPrefixedStyle","style","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","values","match","isPalindrome","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","min","getSizeWidthFit","isEpsilonEqual","number_a","number_b","EPSILON","Error","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","arguments","index","getLoopedLastIndex","getReverseLoopedFirstIndex","lastIndex","factorial","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","target","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","result","isEntirelyInViewport","ele","jQuery","get","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","vertInView","horInView","exports","module","define","amd"],"mappings":"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","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.26\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2017 Hyun-Seok.Kim, dragmove@gmail.com\n */\n;(function () {\n  \"use strict\";\n\n  // Establish the global object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var global = typeof self == 'object' && self.self === self && self ||\n    typeof global == 'object' && global.global === global && global ||\n    this ||\n    {};\n\n  var aid = {},\n    platform = {},\n    browser = {},\n    string = {},\n    math = {},\n    date = {},\n    array = {},\n    element = {};\n\n  /**\n   * get object is null/undefined or other\n   *\n   * @static\n   * @method existy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.existy(undefined) ); // false\n   * console.log( aid.existy(null) ); // false\n   * console.log( aid.existy('') ); // true\n   */\n  aid.existy = function (obj) {\n    return obj != null;\n  };\n\n  /**\n   * check object is defined\n   *\n   * @static\n   * @method isDefined\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isDefined(null) ); // false\n   */\n  aid.isDefined = function (obj) {\n    if (obj === null || typeof obj === 'undefined') return false;\n    return true;\n  };\n\n  /**\n   * check object type is Boolean\n   *\n   * @static\n   * @method isBoolean\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isBoolean(false) ); // true\n   */\n  aid.isBoolean = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Boolean);\n  };\n\n  /**\n   * check object type is Number\n   *\n   * @static\n   * @method isNumber\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isNumber(-1) ); // true\n   */\n  aid.isNumber = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Number);\n  };\n\n  /**\n   * check object type is Integer Number\n   *\n   * @static\n   * @method isInteger\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isInteger(-1) ); // true\n   */\n  aid.isInteger = function (obj) {\n    if (!aid.isNumber(obj)) return false;\n\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    return (isFinite(obj) && Math.floor(obj) === obj);\n  };\n\n  /**\n   * check object type is String\n   *\n   * @static\n   * @method isString\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isString('') ); // true\n   */\n  aid.isString = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === String);\n  };\n\n  /**\n   * check object type is Array\n   *\n   * @static\n   * @method isArray\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isArray([]) ); // true\n   */\n  aid.isArray = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Array);\n  };\n\n  /**\n   * check object type is Object\n   *\n   * @static\n   * @method isObject\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isObject({}) ); // true\n   */\n  aid.isObject = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Object);\n  };\n\n  /**\n   * check object type is Function\n   *\n   * @static\n   * @method isFunction\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isFunction(function(){}) ); // true\n   */\n  aid.isFunction = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Function);\n  };\n\n  /**\n   * check object type is RegExp\n   *\n   * @static\n   * @method isRegExp\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\n   * console.log( aid.isRegExp(/^aid/) ); // true\n   */\n  aid.isRegExp = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === RegExp);\n  };\n\n  /**\n   * extend function\n   *\n   * @static\n   * @method extend\n   * @param {Object} prototype of class function, or object has variables or methods.\n   * @param {Object} object has variables or methods\n   * @example\n   */\n  aid.extend = function (destination, source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n    return destination;\n  };\n\n  /**\n   * inherit Class function\n   *\n   * @static\n   * @method inherit\n   * @param {class} ChildClass - child class function\n   * @param {class} ParentClass - parent class function\n   * @example\n   */\n  aid.inherit = (function () {\n    // use closure, protect gabarge collection.\n    var F = function () {\n    };\n\n    return function (ChildClass, ParentClass) {\n      F.prototype = ParentClass.prototype;\n\n      ChildClass.prototype = new F();\n      ChildClass.prototype.constructor = ChildClass;\n      ChildClass.super = ParentClass.prototype;\n    };\n  }());\n\n  /*\n   * Data Structure\n   */\n  // Stack\n  var Stack = function () {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  Stack.prototype.push = function (element) {\n    if (this._top < 0) this._top = 0;\n    this._dataStore[this._top++] = element;\n  };\n\n  Stack.prototype.pop = function () {\n    return this._dataStore[--this._top];\n  };\n\n  Stack.prototype.peek = function () {\n    return this._dataStore[this._top - 1];\n  };\n\n  Stack.prototype.length = function () {\n    return (this._top > 0) ? this._top : 0;\n  };\n\n  Stack.prototype.clear = function () {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  aid.createStack = function () {\n    return new Stack();\n  };\n\n  // Queue\n  var Queue = function () {\n    this._dataStore = [];\n  };\n\n  Queue.prototype.enqueue = function (element) {\n    this._dataStore.push(element);\n  };\n\n  Queue.prototype.dequeue = function () {\n    return this._dataStore.shift();\n  };\n\n  Queue.prototype.front = function () {\n    return this._dataStore[0];\n  };\n\n  Queue.prototype.rear = function () {\n    return this._dataStore[this._dataStore.length - 1];\n  };\n\n  Queue.prototype.length = function () {\n    return this._dataStore.length;\n  };\n\n  Queue.prototype.isEmpty = function () {\n    if (this._dataStore.length <= 0) return true;\n    return false;\n  };\n\n  aid.createQueue = function () {\n    return new Queue();\n  };\n\n  // LinkedList node\n  var LinkedListNode = function (data) {\n    this.data = data;\n    this.next = null;\n  };\n\n  // LinkedList\n  var LinkedList = function () {\n    this.head = new LinkedListNode('head');\n  };\n\n  LinkedList.prototype.find = function (data) {\n    var node = this.head;\n    while (node.data !== data) {\n      node = node.next;\n      if (node === null) return node;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.findPrevious = function (data) {\n    if (this.head.data === data) return null;\n\n    var node = this.head;\n    while ((node.next !== null) && (node.next.data !== data)) {\n      node = node.next;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.insert = function (data, prevNodeData) {\n    var insertNode = new LinkedListNode(data),\n      prevNode = this.find(prevNodeData);\n    insertNode.next = prevNode.next;\n    prevNode.next = insertNode;\n  };\n\n  LinkedList.prototype.remove = function (data) {\n    var prevNode = this.findPrevious(data);\n    if (prevNode.next !== null) {\n      prevNode.next = prevNode.next.next;\n    }\n  };\n\n  LinkedList.prototype.getAllNodes = function () {\n    var nodes = [this.head],\n      node = this.head;\n\n    while (node.next !== null) {\n      nodes.push(node.next);\n      node = node.next;\n    }\n    return nodes;\n  };\n\n  aid.createLinkedList = function () {\n    return new LinkedList();\n  };\n\n  /**\n   * is window platform\n   *\n   * @static\n   * @method isWindow\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\n   */\n  platform.isWindow = function (userAgent) {\n    return /Windows/i.test(userAgent);\n  };\n\n  /**\n   * is Macintosh platform\n   *\n   * @static\n   * @method isMac\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\n   */\n  platform.isMac = function (userAgent) {\n    return /Macintosh/i.test(userAgent);\n  };\n\n  /**\n   * is iOS platform\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\n   *\n   * @static\n   * @method isIOS\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\n   */\n  platform.isIOS = function (userAgent) {\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\n  };\n\n  /**\n   * is Android platform\n   *\n   * @static\n   * @method isAndroid\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\n   */\n  platform.isAndroid = function (userAgent) {\n    return /android/i.test(userAgent);\n  };\n\n  /**\n   * is IE browser\n   *\n   * @static\n   * @method isIE\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\n   */\n  browser.isIE = function (userAgent) {\n    return /msie/i.test(userAgent) || /trident/i.test(userAgent);\n  };\n\n  /**\n   * is Edge browser\n   *\n   * @static\n   * @method isEdge\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\n   */\n  browser.isEdge = function (userAgent) {\n    return ( /Gecko/i.test(userAgent) && /Edge/i.test(userAgent) );\n  };\n\n  /**\n   * is Firefox browser\n   *\n   * @static\n   * @method isFF\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\n   */\n  browser.isFF = function (userAgent) {\n    return /Firefox/i.test(userAgent);\n  };\n\n  /**\n   * is Opera browser\n   *\n   * @static\n   * @method isOpera\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\n   */\n  browser.isOpera = function (userAgent) {\n    return ( /Opera/i.test(userAgent) || /OPR\\//i.test(userAgent) );\n  };\n\n  /**\n   * is Chrome browser\n   *\n   * @static\n   * @method isChrome\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\n   */\n  browser.isChrome = function (userAgent) {\n    return ( !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/i.test(userAgent) );\n  };\n\n  /**\n   * is Safari browser\n   *\n   * @static\n   * @method isSafari\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\n   */\n  browser.isSafari = function (userAgent) {\n    return ( !/Chrome/i.test(userAgent) && /Safari/i.test(userAgent) );\n  };\n\n  /**\n   * get IE version\n   *\n   * @static\n   * @method getIEVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\n   */\n  browser.getIEVersion = function (userAgent) {\n    if (browser.isIE(userAgent)) {\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Firefox version\n   *\n   * @static\n   * @method getFFVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\n   */\n  browser.getFFVersion = function (userAgent) {\n    if (browser.isFF(userAgent)) {\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Opera version\n   *\n   * @static\n   * @method getOperaVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\n   */\n  browser.getOperaVersion = function (userAgent) {\n    if (browser.isOpera(userAgent)) {\n      if (/Opera/i.test(userAgent)) {\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      }\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Chrome version\n   *\n   * @static\n   * @method getChromeVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\n   */\n  browser.getChromeVersion = function (userAgent) {\n    if (browser.isChrome(userAgent)) {\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Safari version\n   *\n   * @static\n   * @method getSafariVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\n   */\n  browser.getSafariVersion = function (userAgent) {\n    if (browser.isSafari(userAgent)) {\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get IE browser Compatibility info object.\n   *\n   * @static\n   * @method getIECompatibility\n   * @param {String} optionUserAgent\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\n   * @example\n   * console.log( aid.browser.getIECompatibility() );\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\n   */\n  browser.getIECompatibility = function (optionUserAgent) {\n    var ua = (optionUserAgent) ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\n      regex_msie = /msie/i,\n      regex_msie7 = /msie 7/i,\n      regex_msie8 = /msie 8/i,\n      regex_msie9 = /msie 9/i,\n      regex_msie10 = /msie 10/i,\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\n      regex_trident = /trident/i,\n      regex_trident7 = /trident\\/7/;\n\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\n      // not IE\n      return {\n        isIE: false,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\n      // IE11 standard\n      return {\n        isIE: true,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\n\n      // IE11 compatibility mode\n      if (regex_msie7.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 7\n        };\n\n      if (regex_msie8.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 8\n        };\n\n      if (regex_msie9.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 9\n        };\n\n      if (regex_msie10.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 10\n        };\n    }\n\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\n      // IE8 ~ 10 compatibility mode\n      return {\n        isIE: true,\n        isCompatibilityMode: true,\n        compatibilityVersion: 7\n      };\n    }\n\n    // IE8 ~ 10 standard\n    return {\n      isIE: true,\n      isCompatibilityMode: false,\n      compatibilityVersion: -1\n    };\n  };\n\n  /**\n   * is browser support draggable attribute of element.\n   *\n   * @static\n   * @method isSupportDraggable\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDraggable() );\n   */\n  browser.isSupportDraggable = function () {\n    var div = document.createElement('div');\n    return ('draggable' in div);\n  };\n\n  /**\n   * is browser support element methods related drag(ondragstart, ondrop, etc...).\n   *\n   * @static\n   * @method isSupportDragAndDrop\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDragAndDrop() );\n   */\n  browser.isSupportDragAndDrop = function () {\n    var div = document.createElement('div');\n    return ('ondragstart' in div && 'ondrop' in div);\n  };\n\n  /**\n   * is browser support html5 File API.\n   *\n   * @static\n   * @method isSupportFileApi\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportFileApi() );\n   */\n  browser.isSupportFileApi = function () {\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\n  };\n\n  /**\n   * is chrome extension.\n   *\n   * @static\n   * @method isChromeExtension\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\n   */\n  browser.isChromeExtension = function (userAgent) {\n    if (browser.isChrome(userAgent) && global.chrome) {\n      if (!global.chrome.cookies) {\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\n      }\n\n      if (global.chrome.cookies) return true;\n      return false;\n    }\n\n    return false;\n  };\n\n  /**\n   * get cookie\n   *\n   * @static\n   * @method getCookie\n   * @param {String} key\n   * @returns {String} return string\n   * @example\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\n   */\n  browser.getCookie = function (key) {\n    var cookieArr = document.cookie.split('; '),\n      splitArr = [],\n      keyStr = '',\n      valueStr = '';\n\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\n      splitArr = cookieArr[i].split('=');\n      keyStr = splitArr[0];\n      valueStr = global.decodeURIComponent(splitArr[1]);\n      if (keyStr === key) return valueStr;\n    }\n\n    return null;\n  };\n\n  /**\n   * set cookie\n   *\n   * @static\n   * @method setCookie\n   * @param {String} key\n   * @param {String} value\n   * @param {Number} expireSecond\n   * @param {String} path\n   * @param {String} domain\n   * @example\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\n   */\n  browser.setCookie = function (key, value, expireSecond, path, domain) {\n    var expires = '',\n      pathStr = '; path=' + ( (path) ? path : '/' ),\n      domainStr = (domain) ? '; domain=' + domain : '';\n\n    if (expireSecond) {\n      var date = new Date();\n      date.setTime(date.getTime() + (expireSecond * 1000));\n      expires = '; expires=' + date.toGMTString();\n    }\n\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\n  };\n\n  /**\n   * trim string\n   *\n   * @static\n   * @method trim\n   * @param {String} str\n   * @returns {String} return trimmed string\n   * @example\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\n   */\n  string.trim = function (str) {\n    if (!aid.isString(str)) throw new TypeError('string.trim() requires String parameter.');\n\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n\n  /**\n   * check string has unique characters\n   *\n   * @static\n   * @method hasUniqueChars\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\n   */\n  string.hasUniqueChars = function (str) {\n    if (!aid.isString(str)) throw new TypeError('string.hasUniqueChars() requires String parameter.');\n\n    if (!str.length) return true;\n\n    var obj = {}, char = '';\n    for (var i = 0, max = str.length; i < max; i++) {\n      char = str.charAt(i);\n\n      if (obj[char] === true) return false;\n      obj[char] = true;\n    }\n\n    return true;\n  };\n\n  /**\n   * get extension(png, jpg ...) string.\n   *\n   * @static\n   * @method getFileExtension\n   * @param {String} fileName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\n   */\n  string.getFileExtension = function (fileName) {\n    if (!aid.isString(fileName)) throw new TypeError('string.getFileExtension() requires String parameter.');\n\n    if (fileName.length <= 0) return '';\n\n    var lastDotIndex = fileName.lastIndexOf('.'),\n      extension = fileName.substr(lastDotIndex + 1);\n\n    return extension;\n  };\n\n  /**\n   * check email string.\n   *\n   * @static\n   * @method isEmail\n   * @param {String} emailStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\n   */\n  string.isEmail = function (emailStr) {\n    if (!aid.isString(emailStr)) throw new TypeError('string.isEmail() requires String parameter.');\n\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n    var emailRegex = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\");\n    return ( emailRegex.exec(emailStr) ? true : false );\n  };\n\n  /**\n   * check iframe string.\n   *\n   * @static\n   * @method isIFrame\n   * @param {String} iframeStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\n   */\n  string.isIFrame = function (iframeStr) {\n    if (!aid.isString(iframeStr)) throw new TypeError('string.isIFrame() requires String parameter.');\n\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeStr);\n  };\n\n  /**\n   * get param value from uri.\n   *\n   * @static\n   * @method getUriParam\n   * @param {String} uri\n   * @param {String} parameterName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\n   */\n  string.getUriParam = function (uri, parameterName) {\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\n      throw new TypeError('string.getUriParam() requires String parameters.');\n    }\n\n    var str = uri;\n    if (str.length < 1) return '';\n\n    var tmpArr = str.split('?');\n    if (tmpArr.length < 2) return '';\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    for (var i = 0, max = params.length; i < max; ++i) {\n      var keyValueArr = params[i].split('=');\n      if (keyValueArr.length <= 1) keyValueArr.push('');\n      if (keyValueArr[0] === parameterName) return global.decodeURIComponent(keyValueArr[1]);\n    }\n\n    return '';\n  };\n\n  /**\n   * get param values from uri.\n   *\n   * @static\n   * @method getUriParams\n   * @param {String} uri\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\n   */\n  string.getUriParams = function (uri) {\n    if (!aid.isString(uri)) throw new TypeError('string.getUriParams() requires String parameter.');\n\n    if (uri.length < 1) return null;\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return null;\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    var obj = {};\n    for (var i = 0, max = params.length; i < max; ++i) {\n      var keyValueArr = params[i].split('=');\n      if (keyValueArr.length <= 1) return null;\n\n      obj[keyValueArr[0]] = keyValueArr[1];\n    }\n    return obj;\n  };\n\n  /**\n   * get uri combined parameters\n   *\n   * @static\n   * @method getUriCombinedParams\n   * @param {String} uri\n   * @param {Object} parameters\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\n   */\n  string.getUriCombinedParams = function (uri, parameters) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getUriCombinedParams() must be String.');\n    if (!aid.isObject(parameters)) throw new TypeError('parameters parameter type of string.getUriCombinedParams() must be Object.');\n\n    if (!uri) return '';\n    if (!parameters) return uri;\n\n    var str = '';\n    for (var key in parameters) {\n      str += '&' + key + '=' + String(parameters[key]);\n    }\n    if (str === '') return uri;\n\n    uri = (uri.indexOf('?') >= 0) ? (uri + str) : (uri + '?' + str.substr(1));\n    return uri;\n  };\n\n  /**\n   * check youtube video id.\n   *\n   * @static\n   * @method isValidYoutubeVideoId\n   * @param {String} youtubeId\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\n   */\n  string.isValidYoutubeVideoId = function (youtubeId) {\n    if (!aid.isString(youtubeId)) throw new TypeError('youtubeId parameter type of string.isValidYoutubeVideoId() must be String.');\n\n    var regex = /^(\\w|-|_){11}$/;\n    return regex.exec(youtubeId) ? true : false;\n  };\n\n  /**\n   * check youtube uri is valid.\n   *\n   * @static\n   * @method getObjCheckYoutubeURI\n   * @param {String} uri\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\n   * @example\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   */\n  string.getObjCheckYoutubeURI = function (uri) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckYoutubeURI() must be String.');\n\n    var YOUTUBE_REGEXES = {\n      'watch': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\n      'embed': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\n      'v': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/\n    };\n\n    var uriType = null;\n    for (var key in YOUTUBE_REGEXES) {\n      var val = YOUTUBE_REGEXES[key];\n      if (!val) continue;\n\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        break;\n      }\n    }\n\n    var youtubeId = '',\n      tmpArr = [];\n    switch (uriType) {\n      case 'watch' :\n        youtubeId = string.getUriParam(uri, 'v') || '';\n        break;\n\n      case 'embed' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'v' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'youtu.be' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      default :\n    }\n\n    var isValidURI = ( youtubeId && string.isValidYoutubeVideoId(youtubeId) );\n    return {\n      type: 'youtube',\n      uri: uri,\n      youtubeId: youtubeId,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * check twitch uri is valid.\n   *\n   * @static\n   * @method getObjCheckTwitchURI\n   * @param {String} uri\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\n   * @example\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   */\n  string.getObjCheckTwitchURI = function (uri) {\n    /*\n     + Live Video\n     https://www.twitch.tv/surrenderhs // channel link\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\n\n     + Past Video\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\n\n     + URI TEST\n     https://www.twitch.tv/surrenderhs\n     www.twitch.tv/surrenderhs\n     twitch.tv/surrenderhs\n\n     https://player.twitch.tv/?channel=surrenderhs\n     player.twitch.tv/?channel=surrenderhs\n\n     https://www.twitch.tv/surrenderhs/v/56097351\n     www.twitch.tv/surrenderhs/v/56097351\n\n     https://player.twitch.tv/?video=v56097351\n     player.twitch.tv/?video=v56097351\n     */\n\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckTwitchURI() must be String.');\n\n    var TWITCH_REGEXES = {\n      'liveChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\n      'liveVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\n      'chatting': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\n      'pastChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\n      'pastVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/\n    };\n\n    var channelName = '',\n      videoId = '',\n      isChatting = false,\n      isValidURI = false;\n\n    var uriType = null;\n    for (var key in TWITCH_REGEXES) {\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\n      if (!val) continue;\n\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        isValidURI = true;\n        break;\n      }\n    }\n\n    var tmpArr = [];\n    switch (uriType) {\n      // https://www.twitch.tv/surrenderhs\n      case 'liveChannel' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://player.twitch.tv/?channel=surrenderhs\n      case 'liveVideo' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://www.twitch.tv/surrenderhs/chat?popout=\n      case 'chatting' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        isChatting = true;\n        break;\n\n      // https://www.twitch.tv/surrenderhs/v/56097351\n      case 'pastChannel' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        videoId = tmpArr[2];\n        break;\n\n      // https://player.twitch.tv/?video=v56097351\n      case 'pastVideo' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        videoId = tmpArr[1];\n        break;\n\n      default :\n    }\n\n    isValidURI = (channelName || videoId) ? true : false;\n    return {\n      type: 'twitch',\n      uri: uri,\n      channelName: channelName,\n      videoId: videoId,\n      isChatting: isChatting,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * get prefixed document property string\n   *\n   * @static\n   * @method getDocumentPrefixedProperty\n   * @param {String} propertyName\n   * @param {Boolean} isPropertyFirstCharToUpperCase\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\n   */\n  string.getDocumentPrefixedProperty = function (propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getDocumentPrefixedProperty() must be String.');\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getDocumentPrefixedProperty() must be Boolean.');\n\n    if (propertyName in global.document) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in document) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * get prefixed element style property string\n   *\n   * @static\n   * @method getElementPrefixedStyle\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\n   */\n  string.getElementPrefixedStyle = function (propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getElementPrefixedStyle() must be String.');\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getElementPrefixedStyle() must be Boolean.');\n\n    var style = global.document.createElement('div').style;\n    if (propertyName in style) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in style) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\n   *\n   * @static\n   * @method absentToEmpty\n   * @param {String} absentableStr\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\n   */\n  string.absentToEmpty = function (absentableStr) {\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\n\n    return absentableStr;\n  };\n\n  /**\n   * convert number to string type with commas.\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n   *\n   * @static\n   * @method numberWithCommas\n   * @param {Number} number\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.numberWithCommas(1000000) ); // 1000000 to '1,000,000'.\n   */\n  string.numberWithCommas = function (number) {\n    if (!aid.isInteger(number)) throw new TypeError('string.numberWithCommas() requires Integer Number parameter.');\n\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  /**\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }.\n   *\n   * @static\n   * @method getPositionFromTranslateStr\n   * @param {String} str\n   * @returns {Object} return object\n   * @example\n   * string.getPositionFromTranslateStr('translate(99px)'); // {x: 99, y: 0}\n   * string.getPositionFromTranslateStr('translate(99px, 999px)'); // {x: 99, y: 999}\n   * string.getPositionFromTranslateStr('translateX(99px)'); // {x: 99, y: 0}\n   * string.getPositionFromTranslateStr('translateY(99px)'); // {x: 0, y: 99}\n   */\n  string.getPositionFromTranslateStr = function (str) {\n    if (!aid.isString(str)) throw new TypeError('string.getPositionFromTranslateStr() requires String parameter.');\n\n    var obj = {x: 0, y: 0};\n    if (!aid.isDefined(str)) return obj;\n\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\n    if (values.length <= 0) return obj;\n\n    if (/translateX/g.test(str)) {\n      obj.x = parseFloat(values[0]);\n      return obj;\n    }\n\n    if (/translateY/g.test(str)) {\n      obj.y = parseFloat(values[0]);\n      return obj;\n    }\n\n    obj.x = parseFloat(values[0]);\n    if (values.length > 1) obj.y = parseFloat(values[1]);\n\n    return obj;\n  };\n\n  /**\n   * get flag string is palindrome.\n   *\n   * @static\n   * @method isPalindrome\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\n   * console.log( aid.string.isPalindrome('motor') ); // false\n   */\n  string.isPalindrome = function (str) {\n    if (!aid.isString(str)) throw new TypeError('string.isPalindrome() requires String parameter.');\n\n    if (str.length <= 1) return true;\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\n\n    return aid.string.isPalindrome(str.slice(-1, 1));\n  };\n\n  /**\n   * get aspectFill content size\n   *\n   * @static\n   * @method getSizeAspectFill\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fillWidth\n   * @param {Number} fillHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFill = function (srcWidth, srcHeight, fillWidth, fillHeight) {\n    if (!aid.isNumber(srcWidth) || !aid.isNumber(srcHeight) || !aid.isNumber(fillWidth) || !aid.isNumber(fillHeight)) {\n      throw new TypeError('math.getSizeAspectFill() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fillWidth,\n      modifiedSizeH = Math.ceil((fillWidth / srcWidth) * srcHeight);\n\n    if (modifiedSizeH < fillHeight) {\n      modifiedSizeW = Math.ceil((fillHeight / srcHeight) * srcWidth);\n      modifiedSizeH = fillHeight;\n    }\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get aspectFit content size\n   *\n   * @static\n   * @method getSizeAspectFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @param {Number} fitHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFit = function (srcWidth, srcHeight, fitWidth, fitHeight) {\n    if (!aid.isNumber(srcWidth) || !aid.isNumber(srcHeight) || !aid.isNumber(fitWidth) || !aid.isNumber(fitHeight)) {\n      throw new TypeError('math.getSizeAspectFit() requires Number parameters.');\n    }\n\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get widthFit content size\n   *\n   * @static\n   * @method getSizeWidthFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\n   */\n  math.getSizeWidthFit = function (srcWidth, srcHeight, fitWidth) {\n    if (!aid.isNumber(srcWidth) || !aid.isNumber(srcHeight) || !aid.isNumber(fitWidth)) {\n      throw new TypeError('math.getSizeWidthFit() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fitWidth,\n      modifiedSizeH = Math.ceil((fitWidth / srcWidth) * srcHeight);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get flag whether 2 numbers are equal by Number.EPSILON\n   *\n   * @static\n   * @method isEpsilonEqual\n   * @param {Number} number_a\n   * @param {Number} number_b\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\n   */\n  math.isEpsilonEqual = function (number_a, number_b) {\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\n      throw new TypeError('math.isEpsilonEqual() requires Number parameters.');\n    }\n\n    if (!Number.EPSILON) throw new Error('Number.EPSILON is not exist. math.isEpsilonEqual() can not use.');\n\n    return (Math.abs(number_a - number_b) < Number.EPSILON);\n  };\n\n  /**\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\n   * value increases from startIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1.\n   * if searchIndex in values, return true.\n   * otherwise, return false.\n   *\n   * @static\n   * @method isIndexInLoop\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @param {Number} searchIndex\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\n   */\n  math.isIndexInLoop = function (totalLength, loopGap, firstIndex, searchIndex) {\n    if (arguments.length < 4) throw new Error('math.isIndexInLoop() requires 4 parameters.');\n\n    if (!aid.isInteger(totalLength) || !aid.isInteger(loopGap) || !aid.isInteger(firstIndex) || !aid.isInteger(searchIndex)) {\n      throw new TypeError('math.isIndexInLoop() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.isIndexInLoop() can not smaller than 1.');\n    }\n    if (loopGap > totalLength) {\n      throw new Error('loopGap parameter of math.isIndexInLoop() can not bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap; i++) {\n      if (index === searchIndex) return true;\n      index = (index + 1 > totalLength) ? 1 : index + 1;\n    }\n\n    return false;\n  };\n\n  /**\n   * get looped index from firstIndex in 1 ~ totalLength.\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1. and, return value.\n   *\n   * @static\n   * @method getLoopedLastIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\n   */\n  math.getLoopedLastIndex = function (totalLength, loopGap, firstIndex) {\n    if (arguments.length < 3) throw new Error('math.getLoopedLastIndex() requires 3 parameters.');\n\n    if (!aid.isInteger(totalLength) || !aid.isInteger(loopGap) || !aid.isInteger(firstIndex)) {\n      throw new TypeError('math.getLoopedLastIndex() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.getLoopedLastIndex() can not smaller than 1.');\n    }\n    if (loopGap > totalLength || firstIndex > totalLength) {\n      throw new Error('loopGap, firstIndex parameter of math.getLoopedLastIndex() can not bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = (index + 1 > totalLength) ? 1 : index + 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\n   * if value is smaller than 0, change value to totalLength. and return value.\n   *\n   * @static\n   * @method getReverseLoopedFirstIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\n   */\n  math.getReverseLoopedFirstIndex = function (totalLength, loopGap, lastIndex) {\n    if (arguments.length < 3) throw new Error('math.getReverseLoopedFirstIndex() requires 3 parameters.');\n\n    if (!aid.isInteger(totalLength) || !aid.isInteger(loopGap) || !aid.isInteger(lastIndex)) {\n      throw new TypeError('math.getReverseLoopedFirstIndex() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || lastIndex < 1) {\n      throw new Error('totalLength, lastIndex parameter of math.getReverseLoopedFirstIndex can not smaller than 1.');\n    }\n    if (loopGap > totalLength || lastIndex > totalLength) {\n      throw new Error('loopGap, lastIndex parameter of math.getReverseLoopedFirstIndex can not bigger than totalLength parameter.');\n    }\n\n    var index = lastIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = (index - 1 < 1) ? totalLength : index - 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get factorial value\n   *\n   * @static\n   * @method factorial\n   * @param {Number} number\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.factorial(-99) ); // 1\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\n   */\n  math.factorial = function (number) {\n    if (!aid.isInteger(number)) throw new TypeError('math.factorial() requires Integer Number parameter.');\n\n    if (number < 1) return 1;\n    return number * aid.math.factorial(number - 1);\n  };\n\n  /**\n   * days name\n   *\n   * @static\n   * @property date.DAYS\n   * @returns {Array} return Array\n   * @example\n   */\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  /**\n   * months name\n   *\n   * @static\n   * @property date.MONTHS\n   * @returns {Array} return Array\n   * @example\n   */\n  date.MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  /**\n   * 1 minutes to second unit (60 sec)\n   *\n   * @static\n   * @property date.MIN_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.MIN_TO_SEC = 60;\n\n  /**\n   * 1 hour to second unit (60 * 60 = 3600 sec)\n   *\n   * @static\n   * @property date.HOUR_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.HOUR_TO_SEC = 3600;\n\n  /**\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\n   *\n   * @static\n   * @property date.DAY_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.DAY_TO_SEC = 86400;\n\n  /**\n   * equal to Array.indexOf\n   *\n   * @static\n   * @method indexOf\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\n   */\n  array.indexOf = function (arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('math.indexOf() requires Number parameter.');\n\n    for (var i = 0, max = arr.length; i < max; ++i) {\n      if (arr[i] === target) return i;\n    }\n\n    return -1;\n  };\n\n  /**\n   * get index of minimum number in Array.\n   *\n   * @static\n   * @method indexOfMin\n   * @param {Array} arr\n   * @param {Number} startSearchIndex\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\n   */\n  array.indexOfMin = function (arr, startSearchIndex) {\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\n\n    var startIndex = (startSearchIndex > 0) ? startSearchIndex : 0;\n    if (arr.length <= startIndex) return -1;\n\n    var minVal = arr[startIndex],\n      minIndex = startIndex;\n\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\n      if (arr[i] < minVal) {\n        minVal = arr[i];\n        minIndex = i;\n      }\n    }\n\n    return minIndex;\n  };\n\n  /**\n   * swap two elements in Array.\n   *\n   * @static\n   * @method swap\n   * @param {Array} arr\n   * @param {Number} firstIndex\n   * @param {Number} secondIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\n   */\n  array.swap = function (arr, firstIndex, secondIndex) {\n    if (arguments.length !== 3) return null;\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\n\n    var tmp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = tmp;\n\n    return arr;\n  };\n\n  /**\n   * apply selection sort in Array.\n   *\n   * @static\n   * @method selectionSort\n   * @param {Array} arr\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.selectionSort = function (arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var minIndex = 0;\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\n      minIndex = array.indexOfMin(arr, i);\n      array.swap(arr, i, minIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply insertion sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\n   *\n   * @static\n   * @method insertionSort\n   * @param {Array} arr\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.insertionSort = function (arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var value;\n    for (var i = 1, max = arr.length; i < max; i++) {\n      value = arr[i];\n\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\n        arr[j + 1] = arr[j];\n      }\n      arr[j + 1] = value;\n    }\n\n    return arr;\n  };\n\n  /**\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\n   * this function is only used by aid.array.mergeSort function.\n   *\n   * @static\n   * @method merge\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} middleIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   */\n  array.merge = function (arr, startIndex, middleIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\n\n    var i = startIndex,\n      j = middleIndex + 1,\n      k = startIndex,\n      tmpArr = [];\n\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\n    while (i <= middleIndex && j <= endIndex) {\n      if (arr[i] <= arr[j]) {\n        tmpArr[k++] = arr[i++];\n      } else {\n        tmpArr[k++] = arr[j++];\n      }\n    }\n\n    if (i > middleIndex) {\n      // set rest right array\n      for (var r = j; r <= endIndex; r++) {\n        tmpArr[k] = arr[r];\n        k++;\n      }\n\n    } else {\n      // set rest left array\n      for (var l = i; l <= middleIndex; l++) {\n        tmpArr[k] = arr[l];\n        k++;\n      }\n    }\n\n    // set sorted values to arr.\n    for (var n = startIndex; n <= endIndex; n++) {\n      arr[n] = tmpArr[n];\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply merge sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\n   *\n   * @static\n   * @method mergeSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.mergeSort = function (arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex + 1 === endIndex) {\n      if (arr[startIndex] > arr[endIndex]) {\n        aid.array.swap(arr, startIndex, endIndex);\n      }\n\n      return arr;\n    }\n\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\n\n    aid.array.mergeSort(arr, startIndex, middleIndex);\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\n\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\n\n    return arr;\n  };\n\n  /**\n   * quick sort with use pivot value.\n   * this function is only used by aid.array.quickSort function.\n   *\n   * @static\n   * @method getPivotIndexAfterPartition\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\n   */\n  array.getPivotIndexAfterPartition = function (arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\n    if (startIndex > endIndex) return -1;\n\n    if (arr.length <= 1) return 0;\n\n    var pivot = arr[endIndex],\n      swapIndex = startIndex;\n\n    for (var i = startIndex; i < endIndex; i++) {\n      if (arr[i] <= pivot) {\n        aid.array.swap(arr, i, swapIndex);\n        swapIndex++;\n      }\n    }\n\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\n\n    return swapIndex;\n  };\n\n  /**\n   * apply quick sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\n   *\n   * @static\n   * @method quickSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.quickSort = function (arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex < endIndex) {\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\n\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * remove element in Array, and return cloned Array.\n   *\n   * @static\n   * @method remove\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Array} return Array\n   * @example\n   * var arr = [1, 2, 3, 4, 5, 99];\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\n   */\n  array.remove = function (arr, target) {\n    if (!aid.isArray(arr)) {\n      throw new TypeError('arr parameter type of array.remove() must be Array.');\n    }\n\n    var clonedArr = arr.slice(0),\n      index = array.indexOf(clonedArr, target);\n    if (index >= 0) clonedArr.splice(index, 1);\n\n    return clonedArr;\n  };\n\n  /**\n   * get 2 x 2 Matrix Array\n   *\n   * @static\n   * @method getMatrixArr\n   * @param {Number} rowNum\n   * @param {Number} columnNum\n   * @param {Object} initialVal\n   * @returns {Array} return array\n   * @example\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\n   */\n  array.getMatrixArr = function (rowNum, columnNum, initialVal) {\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\n      throw new TypeError('rowNum, columnNum parameter of array.getMatrixArr() must be Integer Number.');\n    }\n    if (arguments.length !== 3) {\n      throw Error('array.getMatrixArr() requires 3 parameters.');\n    }\n\n    var arr = [];\n    for (var i = 0; i < rowNum; ++i) {\n      var columns = [];\n\n      for (var j = 0; j < columnNum; ++j) {\n        columns[j] = initialVal;\n      }\n      arr[i] = columns;\n    }\n\n    return arr;\n  };\n\n  /**\n   * binary search version of Array.indexOf\n   *\n   * @static\n   * @method binaryIndexOf\n   * @param {Array} sortedArray\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\n   */\n  array.binaryIndexOf = function (sortedArray, target) {\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\n\n    var first = 0,\n      last = sortedArray.length - 1,\n      middle;\n\n    while (first <= last) {\n      middle = Math.floor((first + last) / 2);\n\n      if (target === sortedArray[middle]) {\n        return middle;\n      } else {\n        if (target < sortedArray[middle]) {\n          last = middle - 1;\n        } else {\n          first = middle + 1;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * get object has property in array.\n   * this object is first matched element in array by value or regex.\n   *\n   * @static\n   * @method getFirstObjectHasProperty\n   * @param {Array} arrayHasObjects\n   * @param {String} propertyKey\n   * @param {Object} findPropertyValueOrRegex\n   * @returns {Object} return object\n   * @example\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\n   * console.log( array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\n   * console.log( array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\n   * console.log( array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\n   * console.log( array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\n   */\n  array.getFirstObjectHasProperty = function (arrayHasObjects, propertyKey, findPropertyValueOrRegex) {\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\n    if (!aid.isString(propertyKey)) return null;\n\n    var obj, result = null;\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\n      obj = arrayHasObjects[i];\n      if (!obj.hasOwnProperty(propertyKey)) continue;\n\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\n          result = obj;\n          break;\n        }\n      } else {\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\n          result = obj;\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * check element is in viewport entirely.\n   *\n   * @static\n   * @method isEntirelyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isEntirelyInViewport = function (ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  };\n\n  /**\n   * check element is in viewport partially.\n   *\n   * @static\n   * @method isPartiallyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isPartiallyInViewport = function (ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect(),\n      windowHeight = (window.innerHeight || document.documentElement.clientHeight),\n      windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\n    var vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n    var horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n\n    return (vertInView && horInView);\n  };\n\n  /*\n   * export\n   */\n  aid.platform = platform;\n  aid.browser = browser;\n  aid.string = string;\n  aid.math = math;\n  aid.date = date;\n  aid.array = array;\n  aid.element = element;\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = aid;\n    }\n  } else if (typeof define === 'function' && define.amd) {\n    define('aid', function () {\n      return aid;\n    });\n  } else {\n    global.aid = aid;\n  }\n}());"]}