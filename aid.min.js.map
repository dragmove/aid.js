{"version":3,"sources":["aid.js"],"names":["global","self","this","aid","operator","platform","browser","string","math","date","array","element","file","existy","obj","isDefined","isBoolean","constructor","Boolean","isNumber","Number","isInteger","isFinite","Math","floor","isString","String","isArray","Array","isObject","Object","isFunction","Function","isRegExp","RegExp","extend","destination","source","TypeError","key","hasOwnProperty","inherit","F","ChildClass","ParentClass","prototype","super","namespace","parent","ns","parts","split","i","max","length","borrow","borrower","donor","functionName","Error","args","slice","call","arguments","apply","bind","func","context","compose","func_a","func_b","not","object","each","dataCanLoop","_context","truthy","falsy","nth","index","constant","plucker","field","best","conditionFunc","reduce","previousValue","currentValue","iterateUntil","calculateFunc","initialValue","result","push","curry","arg","curry2","secondArg","firstArg","curryAll","curryArgsNum","arity","curried","rest","concat","beginIndex","begin","pipeline","seed","prev","current","lazyChain","calls","invoke","methodName","target","method","name","force","ret","thunk","Stack","_dataStore","_top","pop","peek","clear","createStack","Queue","enqueue","dequeue","shift","front","rear","isEmpty","createQueue","LinkedListNode","data","next","LinkedList","head","find","node","findPrevious","insert","prevNodeData","insertNode","prevNode","remove","getAllNodes","nodes","createLinkedList","number_a","number_b","object_a","object_b","isWindow","userAgent","test","isMac","isIOS","MSStream","isAndroid","isIE","isEdge","isFF","isOpera","isChrome","isSafari","getIEVersion","parseFloat","$1","getFFVersion","getOperaVersion","getChromeVersion","getSafariVersion","getIECompatibility","optionUserAgent","ua","navigator","toLowerCase","regex_msie","regex_msie7","regex_msie8","regex_msie9","regex_msie10","regex_msie11","regex_trident","regex_trident7","isCompatibilityMode","compatibilityVersion","isSupportDraggable","document","createElement","isSupportDragAndDrop","div","isSupportFileApi","File","FileReader","FileList","Blob","isChromeExtension","chrome","cookies","experimental","getCookie","cookieArr","cookie","splitArr","keyStr","valueStr","decodeURIComponent","setCookie","value","expireSecond","path","domain","expires","pathStr","domainStr","Date","setTime","getTime","toGMTString","encodeURIComponent","trim","str","replace","hasUniqueChars","char","charAt","getFileExtension","fileName","lastDotIndex","lastIndexOf","substr","isEmail","emailStr","exec","isIFrame","iframeStr","getUriParam","uri","parameterName","tmpArr","keyValueArr","paramStr","params","getUriParams","getUriCombinedParams","parameters","hashStr","indexOf","isValidYoutubeVideoId","youtubeId","getObjCheckYoutubeURI","YOUTUBE_REGEXES","watch","embed","v","youtu.be","uriType","type","isValidURI","getObjCheckTwitchURI","TWITCH_REGEXES","liveChannel","liveVideo","chatting","pastChannel","pastVideo","channelName","videoId","isChatting","getDocumentPrefixedProperty","propertyName","isPropertyFirstCharToUpperCase","PREFIXES","isPropFirstCharUppercase","prop","toUpperCase","getElementPrefixedStyle","style","absentToEmpty","absentableStr","numberWithCommas","number","toString","getPositionFromTranslateStr","x","y","values","match","isPalindrome","getSizeAspectFill","srcWidth","srcHeight","fillWidth","fillHeight","modifiedSizeW","modifiedSizeH","ceil","width","height","getSizeAspectFit","fitWidth","fitHeight","ratio","min","getSizeWidthFit","isEpsilonEqual","EPSILON","abs","isIndexInLoop","totalLength","loopGap","firstIndex","searchIndex","getLoopedLastIndex","getReverseLoopedFirstIndex","lastIndex","factorial","getObjForPagination","totalPostNum","displayPostNumPerPage","displayPaginationBtnNum","pageIndex","totalPageNum","paginationBtnGroupIndex","prevPageIndex","firstPageIndex","lastPageIndex","nextPageIndex","degreeToRadian","degree","PI","radianToDegree","radian","DAYS","MONTHS","MIN_TO_SEC","HOUR_TO_SEC","DAY_TO_SEC","arr","indexOfMin","startSearchIndex","startIndex","minVal","minIndex","swap","secondIndex","tmp","selectionSort","insertionSort","j","merge","middleIndex","endIndex","k","r","l","n","mergeSort","getPivotIndexAfterPartition","pivot","swapIndex","quickSort","pivotIndex","clonedArr","splice","getMatrixArr","rowNum","columnNum","initialVal","columns","binaryIndexOf","sortedArray","middle","first","last","getFirstObjectHasProperty","arrayHasObjects","propertyKey","findPropertyValueOrRegex","isEntirelyInViewport","ele","jQuery","get","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","isPartiallyInViewport","windowHeight","windowWidth","verticallyInView","horizontallyInView","appendScriptFile","fileUrl","targetElementToAppend","loadCompleteCallback","script","onreadystatechange","onload","readyState","src","appendChild","firstScript","getElementsByTagName","parentNode","insertBefore","exports","module","define","amd"],"mappings":";;;;;;;CAAA,WACA,YAKA,IAAAA,GAAA,gBAAAC,OAAAA,KAAAA,OAAAA,MAAAA,MANA,gBAAAD,IAAAA,EAAAA,SAAAA,GAAAA,GACAE,SAGAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,IAcAT,GAAAU,OAAA,SAAAC,GACA,MAAA,OAAAA,GAaAX,EAAAY,UAAA,SAAAD,GACA,MAAA,QAAAA,OAAA,KAAAA,GAcAX,EAAAa,UAAA,SAAAF,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAC,SAaAf,EAAAgB,SAAA,SAAAL,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAG,QAaAjB,EAAAkB,UAAA,SAAAP,GACA,QAAAX,EAAAgB,SAAAL,KAGAQ,SAAAR,IAAAS,KAAAC,MAAAV,KAAAA,IAaAX,EAAAsB,SAAA,SAAAX,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAS,QAaAvB,EAAAwB,QAAA,SAAAb,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAW,OAaAzB,EAAA0B,SAAA,SAAAf,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAa,QAaA3B,EAAA4B,WAAA,SAAAjB,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAe,UAcA7B,EAAA8B,SAAA,SAAAnB,GACA,QAAAX,EAAAY,UAAAD,IACAA,EAAAG,cAAAiB,QA2BA/B,EAAAgC,OAAA,SAAAC,EAAAC,GACA,KAAAD,YAAAN,UAAA,gBAAAM,GACA,KAAAE,WAAA,0FAEA,IAAA,gBAAAD,GACA,KAAAC,WAAA,6DAGA,KAAA,GAAAC,KAAAF,GACAA,EAAAG,eAAAD,KACAH,EAAAG,GAAAF,EAAAE,GAIA,OAAAH,IAYAjC,EAAAsC,QAAA,WAEA,GAAAC,GAAA,YAGA,OAAA,UAAAC,EAAAC,GACAF,EAAAG,UAAAD,EAAAC,UAEAF,EAAAE,UAAA,GAAAH,GACAC,EAAAE,UAAA5B,YAAA0B,EACAA,EAAAG,MAAAF,EAAAC,cAeA1C,EAAA4C,UAAA,SAAAA,EAAAC,GACA,IAAA7C,EAAAsB,SAAAsB,GAAA,KAAA,IAAAT,WAAA,8DACA,KAAAnC,EAAA0B,SAAAmB,IAAA7C,EAAAY,UAAAiC,GAAA,KAAA,IAAAV,WAAA,gFAEA,IAAAW,GAAAD,GAAAhD,CAEA,IAAA+C,EAGA,IAAA,GAFAG,GAAAH,EAAAI,MAAA,KAEAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IACAH,EAAAC,EAAAE,MAAAH,EAAAC,EAAAE,QACAH,EAAAA,EAAAC,EAAAE,GAIA,OAAAH,IAgBA9C,EAAAoD,OAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAvD,EAAA0B,SAAA2B,KAAArD,EAAA0B,SAAA4B,GAAA,KAAA,IAAAnB,WAAA,iEACA,KAAAnC,EAAAsB,SAAAiC,GAAA,KAAA,IAAApB,WAAA,8DACA,KAAAnC,EAAAY,UAAA0C,EAAAC,IAAA,KAAA,IAAAC,OAAA,6EACA,IAAAxD,EAAAY,UAAAyC,EAAAE,IAAA,KAAA,IAAAC,OAAA,oFAEAH,GAAAE,GAAA,WACA,GAAAE,GAAAhC,MAAAiB,UAAAgB,MAAAC,KAAAC,UACA,OAAAN,GAAAC,GAAAM,MAAA9D,KAAA0D,KAcAzD,EAAA8D,KAAA,SAAAC,EAAAC,GACA,MAAA,YACA,MAAAD,GAAAF,MAAAG,EAAAJ,aAgBA5D,EAAAiE,QAAA,SAAAC,EAAAC,GACA,IAAAnE,EAAA4B,WAAAsC,KAAAlE,EAAA4B,WAAAuC,GAAA,KAAA,IAAAhC,WAAA,mEAEA,OAAA,YACA,MAAA+B,GAAAC,EAAAN,MAAA,KAAAD,cAeA5D,EAAAoE,IAAA,SAAAL,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,qDAEA,OAAA,UAAAkC,GACA,OAAAN,EAAAM,KAcArE,EAAAsE,KAAA,SAAAC,EAAAR,EAAAC,GACA,IAAAhE,EAAAwB,QAAA+C,KAAAvE,EAAAsB,SAAAiD,GAAA,KAAA,IAAApC,WAAA,oEAIA,KAAA,GAFAqC,GAAAxE,EAAAU,OAAAsD,GAAAA,EAAA,KAEAf,EAAA,EAAAC,EAAAqB,EAAApB,OAAAF,EAAAC,EAAAD,IACAc,EAAAJ,KAAAa,EAAAD,EAAAtB,KAaAjD,EAAAyE,OAAA,SAAAJ,GACA,QAAAA,GAYArE,EAAA0E,MAAA,SAAAL,GACA,OAAAA,GAgBArE,EAAA2E,IAAA,SAAAJ,EAAAK,GACA,IAAA5E,EAAAwB,QAAA+C,KAAAvE,EAAAsB,SAAAiD,GAAA,KAAA,IAAApC,WAAA,mEACA,KAAAnC,EAAAkB,UAAA0D,GAAA,KAAA,IAAAzC,WAAA,4DAEA,OAAAyC,GAAA,GAAAA,EAAAL,EAAApB,OAAA,EAAA,KAAAoB,EAAAK,IAeA5E,EAAA6E,SAAA,SAAAR,GACA,MAAA,YACA,MAAAA,KAwBArE,EAAA8E,QAAA,SAAAC,GACA,IAAA/E,EAAAsB,SAAAyD,KAAA/E,EAAAgB,SAAA+D,GAAA,KAAA,IAAA5C,WAAA,kEAEA,OAAA,UAAAxB,GACA,KAAAX,EAAA0B,SAAAf,IAAAX,EAAAwB,QAAAb,IAAAX,EAAAsB,SAAAX,IAAA,KAAA,IAAAwB,WAAA,6FACA,OAAAxB,GAAAoE,KAcA/E,EAAAgF,KAAA,SAAAC,EAAA1E,GACA,IAAAP,EAAA4B,WAAAqD,GAAA,KAAA,IAAA9C,WAAA,+DACA,KAAAnC,EAAAwB,QAAAjB,GAAA,KAAA,IAAA4B,WAAA,oDAEA,OAAA5B,GAAA2E,OAAA,SAAAC,EAAAC,GACA,MAAAH,GAAAE,EAAAC,GAAAD,EAAAC,KAgBApF,EAAAqF,aAAA,SAAAC,EAAAL,EAAAM,GACA,IAAAvF,EAAA4B,WAAA0D,GAAA,KAAA,IAAAnD,WAAA,uEACA,KAAAnC,EAAA4B,WAAAqD,GAAA,KAAA,IAAA9C,WAAA,uEAKA,KAHA,GAAA5B,MACAiF,EAAAF,EAAAC,GAEAN,EAAAO,IACAjF,EAAAkF,KAAAD,GACAA,EAAAF,EAAAE,EAGA,OAAAjF,IAYAP,EAAA0F,MAAA,SAAA3B,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,uDAEA,OAAA,UAAAwD,GACA,MAAA5B,GAAA4B,KAeA3F,EAAA4F,OAAA,SAAA7B,GACA,IAAA/D,EAAA4B,WAAAmC,GAAA,KAAA,IAAA5B,WAAA,wDAEA,OAAA,UAAA0D,GACA,MAAA,UAAAC,GACA,MAAA/B,GAAA+B,EAAAD,MAgBA7F,EAAA+F,SAAA,SAAAhC,EAAAiC,GACA,GAAAC,GAAAD,GAAAjC,EAAAZ,MAEA,OAAA,SAAA+C,KACA,GAAAzC,GAAAhC,MAAAiB,UAAAgB,MAAAC,KAAAC,WACAI,EAAAjE,IAEA,OAAA0D,GAAAN,QAAA8C,EACAlC,EAAAF,MAAAG,EAAAP,GACA,WACA,GAAA0C,GAAA1E,MAAAiB,UAAAgB,MAAAC,KAAAC,UACA,OAAAsC,GAAArC,MAAAG,EAAAP,EAAA2C,OAAAD,OAmBAnG,EAAAmG,KAAA,SAAA5F,EAAA8F,GACA,IAAArG,EAAAwB,QAAAjB,GAAA,KAAA,IAAA4B,WAAA,oDAEA,IAAAmE,GAAAtG,EAAAU,OAAA2F,GAAAA,EAAA,CACA,OAAA5E,OAAAiB,UAAAgB,MAAAC,KAAApD,EAAA+F,IAiBAtG,EAAAuG,SAAA,SAAAC,GAGA,MAFAxG,GAAAmG,KAAA1E,MAAAiB,UAAAgB,MAAAC,KAAAC,YAEAsB,OAAA,SAAAuB,EAAAC,GACA,MAAAA,GAAAD,IACAD,IAmBAxG,EAAA2G,UAAA,SAAAhG,GACA,GAAAiG,KAEA,QACAC,OAAA,SAAAC,GACA,GAAArD,GAAAzD,EAAAmG,KAAA1E,MAAAiB,UAAAgB,MAAAC,KAAAC,WAYA,OAVAgD,GAAAnB,KAAA,SAAAsB,GACA,GAAAC,GAAAD,EAAAD,EAEA,KAAA9G,EAAAY,UAAAoG,GACA,KAAAxD,OAAAuD,EAAAjG,YAAAmG,KAAA,YAAAH,EAAA,UAGA,OAAAE,GAAAnD,MAAAkD,EAAAtD,KAGA1D,MAGAmH,MAAA,WACA,MAAAN,GAAA1B,OAAA,SAAAiC,EAAAC,GACA,MAAAA,GAAAD,IACAxG,KASA,IAAA0G,GAAA,WACAtH,KAAAuH,cACAvH,KAAAwH,KAAA,EAGAF,GAAA3E,UAAA+C,KAAA,SAAAjF,GACAT,KAAAwH,KAAA,IAAAxH,KAAAwH,KAAA,GACAxH,KAAAuH,WAAAvH,KAAAwH,QAAA/G,GAGA6G,EAAA3E,UAAA8E,IAAA,WACA,MAAAzH,MAAAuH,aAAAvH,KAAAwH,OAGAF,EAAA3E,UAAA+E,KAAA,WACA,MAAA1H,MAAAuH,WAAAvH,KAAAwH,KAAA,IAGAF,EAAA3E,UAAAS,OAAA,WACA,MAAApD,MAAAwH,KAAA,EAAAxH,KAAAwH,KAAA,GAGAF,EAAA3E,UAAAgF,MAAA,WACA3H,KAAAuH,cACAvH,KAAAwH,KAAA,GAGAvH,EAAA2H,YAAA,WACA,MAAA,IAAAN,GAIA,IAAAO,GAAA,WACA7H,KAAAuH,cAGAM,GAAAlF,UAAAmF,QAAA,SAAArH,GACAT,KAAAuH,WAAA7B,KAAAjF,IAGAoH,EAAAlF,UAAAoF,QAAA,WACA,MAAA/H,MAAAuH,WAAAS,SAGAH,EAAAlF,UAAAsF,MAAA,WACA,MAAAjI,MAAAuH,WAAA,IAGAM,EAAAlF,UAAAuF,KAAA,WACA,MAAAlI,MAAAuH,WAAAvH,KAAAuH,WAAAnE,OAAA,IAGAyE,EAAAlF,UAAAS,OAAA,WACA,MAAApD,MAAAuH,WAAAnE,QAGAyE,EAAAlF,UAAAwF,QAAA,WACA,MAAAnI,MAAAuH,WAAAnE,QAAA,GAIAnD,EAAAmI,YAAA,WACA,MAAA,IAAAP,GAIA,IAAAQ,GAAA,SAAAC,GACAtI,KAAAsI,KAAAA,EACAtI,KAAAuI,KAAA,MAIAC,EAAA,WACAxI,KAAAyI,KAAA,GAAAJ,GAAA,QAGAG,GAAA7F,UAAA+F,KAAA,SAAAJ,GAEA,IADA,GAAAK,GAAA3I,KAAAyI,KACAE,EAAAL,OAAAA,GAEA,GAAA,QADAK,EAAAA,EAAAJ,MACA,MAAAI,EAEA,OAAAA,IAGAH,EAAA7F,UAAAiG,aAAA,SAAAN,GACA,GAAAtI,KAAAyI,KAAAH,OAAAA,EAAA,MAAA,KAGA,KADA,GAAAK,GAAA3I,KAAAyI,KACA,OAAAE,EAAAJ,MAAAI,EAAAJ,KAAAD,OAAAA,GACAK,EAAAA,EAAAJ,IAEA,OAAAI,IAGAH,EAAA7F,UAAAkG,OAAA,SAAAP,EAAAQ,GACA,GAAAC,GAAA,GAAAV,GAAAC,GACAU,EAAAhJ,KAAA0I,KAAAI,EACAC,GAAAR,KAAAS,EAAAT,KACAS,EAAAT,KAAAQ,GAGAP,EAAA7F,UAAAsG,OAAA,SAAAX,GACA,GAAAU,GAAAhJ,KAAA4I,aAAAN,EACA,QAAAU,EAAAT,OACAS,EAAAT,KAAAS,EAAAT,KAAAA,OAIAC,EAAA7F,UAAAuG,YAAA,WAIA,IAHA,GAAAC,IAAAnJ,KAAAyI,MACAE,EAAA3I,KAAAyI,KAEA,OAAAE,EAAAJ,MACAY,EAAAzD,KAAAiD,EAAAJ,MACAI,EAAAA,EAAAJ,IAEA,OAAAY,IAGAlJ,EAAAmJ,iBAAA,WACA,MAAA,IAAAZ,IAaAtI,EAAA,KAAA,SAAAmJ,EAAAC,GACA,IAAArJ,EAAAgB,SAAAoI,KAAApJ,EAAAgB,SAAAqI,GACA,KAAA,IAAAlH,WAAA,4CAGA,OAAAiH,GAAAC,GAaApJ,EAAA,OAAA,SAAAqJ,EAAAC,GACA,MAAAD,KAAAC,GAcAtJ,EAAA,KAAA,SAAAoE,GACA,OAAAA,GAaAnE,EAAAsJ,SAAA,SAAAC,GACA,MAAA,WAAAC,KAAAD,IAaAvJ,EAAAyJ,MAAA,SAAAF,GACA,MAAA,aAAAC,KAAAD,IAcAvJ,EAAA0J,MAAA,SAAAH,GACA,MAAA,mBAAAC,KAAAD,KAAA5J,EAAAgK,UAaA3J,EAAA4J,UAAA,SAAAL,GACA,MAAA,WAAAC,KAAAD,IAaAtJ,EAAA4J,KAAA,SAAAN,GACA,MAAA,QAAAC,KAAAD,IAAA,WAAAC,KAAAD,IAaAtJ,EAAA6J,OAAA,SAAAP,GACA,MAAA,SAAAC,KAAAD,IAAA,QAAAC,KAAAD,IAaAtJ,EAAA8J,KAAA,SAAAR,GACA,MAAA,WAAAC,KAAAD,IAaAtJ,EAAA+J,QAAA,SAAAT,GACA,MAAA,SAAAC,KAAAD,IAAA,SAAAC,KAAAD,IAaAtJ,EAAAgK,SAAA,SAAAV,GACA,OAAAtJ,EAAA6J,OAAAP,KAAAtJ,EAAA+J,QAAAT,IAAA,UAAAC,KAAAD,IAaAtJ,EAAAiK,SAAA,SAAAX,GACA,OAAA,UAAAC,KAAAD,IAAA,UAAAC,KAAAD,IAaAtJ,EAAAkK,aAAA,SAAAZ,GACA,GAAAtJ,EAAA4J,KAAAN,GAAA,CACA,GAAA,oBAAAC,KAAAD,GAAA,MAAAa,YAAAvI,OAAAwI,GAAA,GACA,IAAA,4BAAAb,KAAAD,GAAA,MAAAa,YAAAvI,OAAAwI,GAAA,IAEA,OAAA,GAaApK,EAAAqK,aAAA,SAAAf,GACA,MAAAtJ,GAAA8J,KAAAR,IACA,2BAAAC,KAAAD,GAAAa,WAAAvI,OAAAwI,GAAA,KAEA,GAaApK,EAAAsK,gBAAA,SAAAhB,GACA,GAAAtJ,EAAA+J,QAAAT,GAAA,CACA,GAAA,SAAAC,KAAAD,GAAA,CACA,GAAA,2BAAAC,KAAAD,GAAA,MAAAa,YAAAvI,OAAAwI,GAAA,GACA,IAAA,yBAAAb,KAAAD,GAAA,MAAAa,YAAAvI,OAAAwI,GAAA,IAEA,GAAA,uBAAAb,KAAAD,GAAA,MAAAa,YAAAvI,OAAAwI,GAAA,IAEA,OAAA,GAaApK,EAAAuK,iBAAA,SAAAjB,GACA,MAAAtJ,GAAAgK,SAAAV,IACA,0BAAAC,KAAAD,GAAAa,WAAAvI,OAAAwI,GAAA,KAEA,GAaApK,EAAAwK,iBAAA,SAAAlB,GACA,MAAAtJ,GAAAiK,SAAAX,IACA,2BAAAC,KAAAD,GAAAa,WAAAvI,OAAAwI,GAAA,KAEA,GAcApK,EAAAyK,mBAAA,SAAAC,GACA,GAAAC,GAAA,GAAAjL,EAAAkL,UAAAtB,UAAAuB,cACAC,EAAA,QACAC,EAAA,UACAC,EAAA,UACAC,EAAA,UACAC,EAAA,WACAC,EAAA,mBACAC,EAAA,WACAC,EAAA,YAEA,KAAAP,EAAAvB,KAAAoB,KAAAQ,EAAA5B,KAAAoB,GAEA,OACAf,MAAA,EACA0B,qBAAA,EACAC,sBAAA,EAIA,IAAAJ,EAAA5B,KAAAoB,IAAAU,EAAA9B,KAAAoB,GAEA,OACAf,MAAA,EACA0B,qBAAA,EACAC,sBAAA,EAIA,IAAAT,EAAAvB,KAAAoB,IAAAU,EAAA9B,KAAAoB,GAAA,CAGA,GAAAI,EAAAxB,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAP,EAAAzB,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAN,EAAA1B,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,EAGA,IAAAL,EAAA3B,KAAAoB,GACA,OACAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,IAIA,MAAAR,GAAAxB,KAAAoB,IAAAS,EAAA7B,KAAAoB,IAGAf,MAAA,EACA0B,qBAAA,EACAC,qBAAA,IAMA3B,MAAA,EACA0B,qBAAA,EACAC,sBAAA,IAaAvL,EAAAwL,mBAAA,WAEA,MAAA,aADAC,UAAAC,cAAA,QAaA1L,EAAA2L,qBAAA,WACA,GAAAC,GAAAH,SAAAC,cAAA,MACA,OAAA,eAAAE,IAAA,UAAAA,IAYA5L,EAAA6L,iBAAA,WACA,SAAAnM,EAAAoM,MAAApM,EAAAqM,YAAArM,EAAAsM,UAAAtM,EAAAuM,OAaAjM,EAAAkM,kBAAA,SAAA5C,GACA,SAAAtJ,EAAAgK,SAAAV,KAAA5J,EAAAyM,UACAzM,EAAAyM,OAAAC,SACA1M,EAAAyM,OAAAE,eAAA3M,EAAAyM,OAAAC,QAAA1M,EAAAyM,OAAAE,aAAAD,WAGA1M,EAAAyM,OAAAC,UAiBApM,EAAAsM,UAAA,SAAArK,GAMA,IAAA,GALAsK,GAAAd,SAAAe,OAAA3J,MAAA,MACA4J,KACAC,EAAA,GACAC,EAAA,GAEA7J,EAAA,EAAAC,EAAAwJ,EAAAvJ,OAAAF,EAAAC,IAAAD,EAIA,GAHA2J,EAAAF,EAAAzJ,GAAAD,MAAA,KACA6J,EAAAD,EAAA,GACAE,EAAAjN,EAAAkN,mBAAAH,EAAA,IACAC,IAAAzK,EAAA,MAAA0K,EAGA,OAAA,OAgBA3M,EAAA6M,UAAA,SAAA5K,EAAA6K,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,GACAC,EAAA,WAAA,GAAA,KACAC,EAAA,EAAA,YAAAH,EAAA,EAEA,IAAAF,EAAA,CACA,GAAA5M,GAAA,GAAAkN,KACAlN,GAAAmN,QAAAnN,EAAAoN,UAAA,IAAAR,GACAG,EAAA,aAAA/M,EAAAqN,cAGA/B,SAAAe,OAAAvK,EAAA,IAAAvC,EAAA+N,mBAAAX,GAAAK,EAAAC,EAAAF,GAaAjN,EAAAyN,KAAA,SAAAC,GACA,IAAA9N,EAAAsB,SAAAwM,GAAA,KAAA,IAAA3L,WAAA,2CAEA,OAAA2L,GAAAC,QAAA,OAAA,IAAAA,QAAA,OAAA,KAaA3N,EAAA4N,eAAA,SAAAF,GACA,IAAA9N,EAAAsB,SAAAwM,GAAA,KAAA,IAAA3L,WAAA,qDAEA,KAAA2L,EAAA3K,OAAA,OAAA,CAGA,KAAA,GADAxC,MAAAsN,EAAA,GACAhL,EAAA,EAAAC,EAAA4K,EAAA3K,OAAAF,EAAAC,EAAAD,IAAA,CAGA,GAFAgL,EAAAH,EAAAI,OAAAjL,IAEA,IAAAtC,EAAAsN,GAAA,OAAA,CACAtN,GAAAsN,IAAA,EAGA,OAAA,GAaA7N,EAAA+N,iBAAA,SAAAC,GACA,IAAApO,EAAAsB,SAAA8M,GAAA,KAAA,IAAAjM,WAAA,uDAEA,IAAAiM,EAAAjL,QAAA,EAAA,MAAA,EAEA,IAAAkL,GAAAD,EAAAE,YAAA,IAGA,OAFAF,GAAAG,OAAAF,EAAA,IAeAjO,EAAAoO,QAAA,SAAAC,GACA,IAAAzO,EAAAsB,SAAAmN,GAAA,KAAA,IAAAtM,WAAA,8CAIA,SADA,GAAAJ,QAAA,uIACA2M,KAAAD,IAaArO,EAAAuO,SAAA,SAAAC,GACA,IAAA5O,EAAAsB,SAAAsN,GAAA,KAAA,IAAAzM,WAAA,+CAEA,OAAA,gCAAAuH,KAAAkF,IAcAxO,EAAAyO,YAAA,SAAAC,EAAAC,GACA,IAAA/O,EAAAsB,SAAAwN,KAAA9O,EAAAsB,SAAAyN,GACA,KAAA,IAAA5M,WAAA,mDAGA,IAAA2M,EAAA3L,OAAA,EAAA,MAAA,EACA2L,GAAAA,EAAA9L,MAAA,KAAA,EAEA,IAAAgM,GAAAF,EAAA9L,MAAA,IACA,IAAAgM,EAAA7L,OAAA,EAAA,MAAA,EAMA,KAAA,GADA8L,GAHAC,EAAAF,EAAA,GACAG,EAAAD,EAAAlM,MAAA,KAGAC,EAAA,EAAAC,EAAAiM,EAAAhM,OAAAF,EAAAC,IAAAD,EAGA,GAFAgM,EAAAE,EAAAlM,GAAAD,MAAA,KACAiM,EAAA9L,QAAA,GAAA8L,EAAAxJ,KAAA,IACAwJ,EAAA,KAAAF,EAAA,MAAAlP,GAAAkN,mBAAAkC,EAAA,GAGA,OAAA,IAaA7O,EAAAgP,aAAA,SAAAN,GACA,IAAA9O,EAAAsB,SAAAwN,GAAA,KAAA,IAAA3M,WAAA,mDAEA,IAAA2M,EAAA3L,OAAA,EAAA,MAAA,KACA2L,GAAAA,EAAA9L,MAAA,KAAA,EAEA,IAAAgM,GAAAF,EAAA9L,MAAA,IACA,IAAAgM,EAAA7L,OAAA,EAAA,MAAA,KAMA,KAAA,GADA8L,GAHAC,EAAAF,EAAA,GACAG,EAAAD,EAAAlM,MAAA,KAEArC,KACAsC,EAAA,EAAAC,EAAAiM,EAAAhM,OAAAF,EAAAC,IAAAD,EAAA,CAEA,GADAgM,EAAAE,EAAAlM,GAAAD,MAAA,KACAiM,EAAA9L,QAAA,EAAA,MAAA,KAEAxC,GAAAsO,EAAA,IAAAA,EAAA,GAGA,MAAAtO,IAcAP,EAAAiP,qBAAA,SAAAP,EAAAQ,GACA,IAAAtP,EAAAsB,SAAAwN,GAAA,KAAA,IAAA3M,WAAA,sEACA,KAAAnC,EAAA0B,SAAA4N,GAAA,KAAA,IAAAnN,WAAA,6EAEA,KAAA2M,EAAA,MAAA,EACA,KAAAQ,EAAA,MAAAR,EAEA,IAAAhB,GAAA,EACA,KAAA,GAAA1L,KAAAkN,GACAxB,GAAA,IAAA1L,EAAA,IAAAb,OAAA+N,EAAAlN,GAEA,IAAA,KAAA0L,EAAA,MAAAgB,EAEA,IAAAE,GAAAF,EAAA9L,MAAA,KACAuM,EAAAvP,EAAAY,UAAAoO,EAAA,IAAA,IAAAA,EAAA,GAAA,EAKA,OAHAF,GAAAE,EAAA,GACAF,GAAAA,EAAAU,QAAA,MAAA,EAAAV,EAAAhB,EAAAgB,EAAA,IAAAhB,EAAAS,OAAA,IAAAgB,GAeAnP,EAAAqP,sBAAA,SAAAC,GACA,IAAA1P,EAAAsB,SAAAoO,GAAA,KAAA,IAAAvN,WAAA,6EAGA,SADA,iBACAuM,KAAAgB,IAeAtP,EAAAuP,sBAAA,SAAAb,GACA,IAAA9O,EAAAsB,SAAAwN,GAAA,KAAA,IAAA3M,WAAA,uEAEA,IAAAyN,IACAC,MAAA,sDACAC,MAAA,4EACAC,EAAA,wEACAC,WAAA,+DAGAC,EAAA,IACA,KAAA,GAAA7N,KAAAwN,GAAA,CAEA,GADAA,EAAAxN,GACA,CAGA,KADAwN,EAAAxN,GAAAsM,KAAAI,GACA,CACAmB,EAAA7N,CACA,SAIA,GAAAsN,GAAA,GACAV,IACA,QAAAiB,GACA,IAAA,QACAP,EAAAtP,EAAAyO,YAAAC,EAAA,MAAA,EACA,MAEA,KAAA,QAKA,IAAA,IAKA,IAAA,WACAE,EAAAF,EAAA9L,MAAA,KAAA,GAAAA,MAAA,KACA0M,EAAAV,EAAAA,EAAA7L,OAAA,IAAA,GAOA,OACA+M,KAAA,UACApB,IAAAA,EACAY,UAAAA,EACAS,WALAT,GAAAtP,EAAAqP,sBAAAC,KA4BAtP,EAAAgQ,qBAAA,SAAAtB,GA0BA,IAAA9O,EAAAsB,SAAAwN,GAAA,KAAA,IAAA3M,WAAA,sEAEA,IAAAkO,IACAC,YAAA,uEACAC,UAAA,gFACAC,SAAA,4EACAC,YAAA,gFACAC,UAAA,6DAGAC,EAAA,GACAC,EAAA,GACAC,GAAA,EACAV,GAAA,EAEAF,EAAA,IACA,KAAA,GAAA7N,KAAAiO,GAAA,CAEA,GADAA,EAAAhO,eAAAD,GACA,CAGA,KADAiO,EAAAjO,GAAAsM,KAAAI,GACA,CACAmB,EAAA7N,EACA+N,GAAA,CACA,SAIA,GAAAnB,KACA,QAAAiB,GAEA,IAAA,cAMA,IAAA,YACAjB,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,EACA,MAGA,KAAA,WACAA,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,GACA6B,GAAA,CACA,MAGA,KAAA,cACA7B,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA6B,EAAA3B,EAAA,GACA4B,EAAA5B,EAAA,EACA,MAGA,KAAA,YACAA,EAAAqB,EAAAJ,GAAAvB,KAAAI,GACA8B,EAAA5B,EAAA,GAOA,MADAmB,MAAAQ,IAAAC,IAEAV,KAAA,SACApB,IAAAA,EACA6B,YAAAA,EACAC,QAAAA,EACAC,WAAAA,EACAV,WAAAA,IAgBA/P,EAAA0Q,4BAAA,SAAAC,EAAAC,GACA,IAAAhR,EAAAsB,SAAAyP,GAAA,KAAA,IAAA5O,WAAA,sFACA,KAAAnC,EAAAa,UAAAmQ,GAAA,KAAA,IAAA7O,WAAA,yGAEA,IAAA4O,IAAAlR,GAAA+L,SAAA,MAAAmF,EAMA,KAAA,GAJAE,IAAA,SAAA,MAAA,KAAA,KACAC,GAAA,IAAAF,EAEAG,EAAA,GACAlO,EAAA,EAAAC,EAAA+N,EAAA9N,OAAAF,EAAAC,EAAAD,IAIA,GAHAkO,EAAA,EAAAJ,EAAA7C,OAAA,GAAAkD,cAAAL,EAAArN,MAAA,GAAAqN,GAEAI,EAAAF,EAAAhO,GAAAkO,IACAvF,UAAA,MAAAuF,EAGA,OAAA,IAaA/Q,EAAAiR,wBAAA,SAAAN,EAAAC,GACA,IAAAhR,EAAAsB,SAAAyP,GAAA,KAAA,IAAA5O,WAAA,kFACA,KAAAnC,EAAAa,UAAAmQ,GAAA,KAAA,IAAA7O,WAAA,qGAEA,IAAAmP,GAAAzR,EAAA+L,SAAAC,cAAA,OAAAyF,KACA,IAAAP,IAAAO,GAAA,MAAAP,EAMA,KAAA,GAJAE,IAAA,SAAA,MAAA,KAAA,KACAC,GAAA,IAAAF,EAEAG,EAAA,GACAlO,EAAA,EAAAC,EAAA+N,EAAA9N,OAAAF,EAAAC,EAAAD,IAIA,GAHAkO,EAAA,EAAAJ,EAAA7C,OAAA,GAAAkD,cAAAL,EAAArN,MAAA,GAAAqN,GAEAI,EAAAF,EAAAhO,GAAAkO,IACAG,GAAA,MAAAH,EAGA,OAAA,IAeA/Q,EAAAmR,cAAA,SAAAC,GACA,MAAAxR,GAAAU,OAAA8Q,IAAAxR,EAAAsB,SAAAkQ,GAEAA,EAFA,IAgBApR,EAAAqR,iBAAA,SAAAC,GACA,IAAA1R,EAAAkB,UAAAwQ,GAAA,KAAA,IAAAvP,WAAA,+DAEA,OAAAuP,GAAAC,WAAA5D,QAAA,wBAAA,MAgBA3N,EAAAwR,4BAAA,SAAA9D,GACA,IAAA9N,EAAAsB,SAAAwM,GAAA,KAAA,IAAA3L,WAAA,kEAEA,IAAAxB,IAAAkR,EAAA,EAAAC,EAAA,EACA,KAAA9R,EAAAY,UAAAkN,GAAA,MAAAnN,EAEA,IAAAoR,GAAAjE,EAAAkE,MAAA,oBACA,OAAAD,GAAA5O,QAAA,EAAAxC,EAEA,cAAA+I,KAAAoE,IACAnN,EAAAkR,EAAAvH,WAAAyH,EAAA,GAAA,IACApR,GAGA,cAAA+I,KAAAoE,IACAnN,EAAAmR,EAAAxH,WAAAyH,EAAA,GAAA,IACApR,IAGAA,EAAAkR,EAAAvH,WAAAyH,EAAA,GAAA,IACAA,EAAA5O,OAAA,IAAAxC,EAAAmR,EAAAxH,WAAAyH,EAAA,GAAA,KAEApR,IAcAP,EAAA6R,aAAA,SAAAnE,GACA,IAAA9N,EAAAsB,SAAAwM,GAAA,KAAA,IAAA3L,WAAA,mDAEA,OAAA2L,GAAA3K,QAAA,GACA2K,EAAApK,MAAA,EAAA,KAAAoK,EAAApK,OAAA,IAEA1D,EAAAI,OAAA6R,aAAAnE,EAAApK,OAAA,EAAA,KAgBArD,EAAA6R,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtR,GAAAhB,EAAAgB,QACA,MAAAA,EAAAmR,IAAAnR,EAAAoR,IAAApR,EAAAqR,IAAArR,EAAAsR,IACA,KAAA,IAAAnQ,WAAA,uDAGA,IAAAoQ,GAAAF,EACAG,EAAApR,KAAAqR,KAAAJ,EAAAF,EAAAC,EAOA,OALAI,GAAAF,IACAC,EAAAnR,KAAAqR,KAAAH,EAAAF,EAAAD,GACAK,EAAAF,IAIAI,MAAAH,EACAI,OAAAH,IAiBAnS,EAAAuS,iBAAA,SAAAT,EAAAC,EAAAS,EAAAC,GACA,GAAA9R,GAAAhB,EAAAgB,QACA,MAAAA,EAAAmR,IAAAnR,EAAAoR,IAAApR,EAAA6R,IAAA7R,EAAA8R,IACA,KAAA,IAAA3Q,WAAA,sDAGA,IAAA4Q,GAAA3R,KAAA4R,IAAAH,EAAAV,EAAAW,EAAAV,EAIA,QACAM,MAJAtR,KAAAqR,KAAAN,EAAAY,GAKAJ,OAJAvR,KAAAqR,KAAAL,EAAAW,KAoBA1S,EAAA4S,gBAAA,SAAAd,EAAAC,EAAAS,GACA,GAAA7R,GAAAhB,EAAAgB,QACA,KAAAA,EAAAmR,KAAAnR,EAAAoR,KAAApR,EAAA6R,GACA,KAAA,IAAA1Q,WAAA,qDAMA,QACAuQ,MAJAG,EAKAF,OAJAvR,KAAAqR,KAAAI,EAAAV,EAAAC,KAmBA/R,EAAA6S,eAAA,SAAA9J,EAAAC,GACA,IAAArJ,EAAAgB,SAAAoI,KAAApJ,EAAAgB,SAAAqI,GACA,KAAA,IAAAlH,WAAA,oDAGA,KAAAlB,OAAAkS,QAAA,KAAA,IAAA3P,OAAA,kEAEA,OAAApC,MAAAgS,IAAAhK,EAAAC,GAAApI,OAAAkS,SAqBA9S,EAAAgT,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA7P,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,8CAEA,IAAAtC,GAAAlB,EAAAkB,SACA,MAAAA,EAAAoS,IAAApS,EAAAqS,IAAArS,EAAAsS,IAAAtS,EAAAuS,IACA,KAAA,IAAAtR,WAAA,2DAEA,IAAAmR,EAAA,GAAAE,EAAA,EACA,KAAA,IAAAhQ,OAAA,oFAEA,IAAA+P,EAAAD,EACA,KAAA,IAAA9P,OAAA,uFAIA,KAAA,GADAoB,GAAA4O,EACAvQ,EAAA,EAAAA,EAAAsQ,EAAAtQ,IAAA,CACA,GAAA2B,IAAA6O,EAAA,OAAA,CACA7O,GAAAA,EAAA,EAAA0O,EAAA,EAAA1O,EAAA,EAGA,OAAA,GAkBAvE,EAAAqT,mBAAA,SAAAJ,EAAAC,EAAAC,GACA,GAAA5P,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,mDAEA,IAAAtC,GAAAlB,EAAAkB,SACA,KAAAA,EAAAoS,KAAApS,EAAAqS,KAAArS,EAAAsS,GACA,KAAA,IAAArR,WAAA,gEAEA,IAAAmR,EAAA,GAAAE,EAAA,EACA,KAAA,IAAAhQ,OAAA,yFAEA,IAAA+P,EAAAD,GAAAE,EAAAF,EACA,KAAA,IAAA9P,OAAA,wGAIA,KAAA,GADAoB,GAAA4O,EACAvQ,EAAA,EAAAA,EAAAsQ,EAAA,EAAAtQ,IACA2B,EAAAA,EAAA,EAAA0O,EAAA,EAAA1O,EAAA,CAGA,OAAAA,IAkBAvE,EAAAsT,2BAAA,SAAAL,EAAAC,EAAAK,GACA,GAAAhQ,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,2DAEA,IAAAtC,GAAAlB,EAAAkB,SACA,KAAAA,EAAAoS,KAAApS,EAAAqS,KAAArS,EAAA0S,GACA,KAAA,IAAAzR,WAAA,wEAEA,IAAAmR,EAAA,GAAAM,EAAA,EACA,KAAA,IAAApQ,OAAA,8FAEA,IAAA+P,EAAAD,GAAAM,EAAAN,EACA,KAAA,IAAA9P,OAAA,6GAIA,KAAA,GADAoB,GAAAgP,EACA3Q,EAAA,EAAAA,EAAAsQ,EAAA,EAAAtQ,IACA2B,EAAAA,EAAA,EAAA,EAAA0O,EAAA1O,EAAA,CAGA,OAAAA,IAcAvE,EAAAwT,UAAA,SAAAnC,GACA,IAAA1R,EAAAkB,UAAAwQ,GAAA,KAAA,IAAAvP,WAAA,sDAEA,OAAAuP,GAAA,EAAA,EACAA,EAAA1R,EAAAK,KAAAwT,UAAAnC,EAAA,IAgBArR,EAAAyT,oBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAtQ,UAAAT,OAAA,EAAA,KAAA,IAAAK,OAAA,oDAEA,IAAAtC,GAAAlB,EAAAkB,SACA,MAAAA,EAAA6S,IAAA7S,EAAA8S,IAAA9S,EAAA+S,IAAA/S,EAAAgT,IACA,KAAA,IAAA/R,WAAA,iEAEA,IAAA4R,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,EACA,KAAA,IAAA/R,WAAA,0EAGA,IAAAgS,GAAA/S,KAAAqR,KAAAsB,EAAAC,EACAE,GAAA,IAAAA,EAAA,GACAA,EAAAC,IAAAD,EAAAC,EAEA,IAAAC,GAAAhT,KAAAC,OAAA6S,EAAA,GAAAD,GACAI,EAAAD,EAAAH,EACAK,EAAAF,EAAAH,EAAA,EACAM,EAAAD,EAAAL,EAAA,EACAO,EAAAD,EAAA,CAKA,OAHAA,GAAAJ,IAAAI,EAAAJ,GACAK,EAAAL,IAAAK,EAAA,IAGAT,aAAAA,EACAC,sBAAAA,EACAC,wBAAAA,EACAC,UAAAA,EAEAC,aAAAA,EACAE,cAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,cAAAA,IAcAnU,EAAAoU,eAAA,SAAAC,GACA,IAAA1U,EAAAgB,SAAA0T,GACA,KAAA,IAAAvS,WAAA,mDAGA,OAAAuS,GAAAtT,KAAAuT,GAAA,KAaAtU,EAAAuU,eAAA,SAAAC,GACA,IAAA7U,EAAAgB,SAAA6T,GACA,KAAA,IAAA1S,WAAA,mDAGA,OAAA,KAAA0S,EAAAzT,KAAAuT,IAWArU,EAAAwU,MAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YAUAxU,EAAAyU,QAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YAUAzU,EAAA0U,WAAA,GAUA1U,EAAA2U,YAAA,KAUA3U,EAAA4U,WAAA,MAeA3U,EAAAiP,QAAA,SAAA2F,EAAApO,GACA,IAAA/G,EAAAwB,QAAA2T,GAAA,KAAA,IAAAhT,WAAA,4CAEA,KAAA,GAAAc,GAAA,EAAAC,EAAAiS,EAAAhS,OAAAF,EAAAC,IAAAD,EACA,GAAAkS,EAAAlS,KAAA8D,EAAA,MAAA9D,EAGA,QAAA,GAqBA1C,EAAA6U,WAAA,SAAAD,EAAAE,GACA,IAAArV,EAAAwB,QAAA2T,KAAAnV,EAAAkB,UAAAmU,GAAA,OAAA,CAEA,IAAAC,GAAAD,EAAA,EAAAA,EAAA,CACA,IAAAF,EAAAhS,QAAAmS,EAAA,OAAA,CAKA,KAAA,GAHAC,GAAAJ,EAAAG,GACAE,EAAAF,EAEArS,EAAAuS,EAAA,EAAAtS,EAAAiS,EAAAhS,OAAAF,EAAAC,EAAAD,IACAkS,EAAAlS,GAAAsS,IACAA,EAAAJ,EAAAlS,GACAuS,EAAAvS,EAIA,OAAAuS,IAgBAjV,EAAAkV,KAAA,SAAAN,EAAA3B,EAAAkC,GACA,GAAA,IAAA9R,UAAAT,OAAA,MAAA,KACA,KAAAnD,EAAAwB,QAAA2T,KAAAnV,EAAAkB,UAAAsS,KAAAxT,EAAAkB,UAAAwU,GAAA,MAAA,KACA,IAAAlC,EAAA,GAAAA,GAAA2B,EAAAhS,QAAAuS,EAAA,GAAAA,GAAAP,EAAAhS,OAAA,MAAA,KAEA,IAAAwS,GAAAR,EAAA3B,EAIA,OAHA2B,GAAA3B,GAAA2B,EAAAO,GACAP,EAAAO,GAAAC,EAEAR,GAcA5U,EAAAqV,cAAA,SAAAT,GACA,IAAAnV,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,MAAA,KAGA,KAAA,GADAqS,GAAA,EACAvS,EAAA,EAAAC,EAAAiS,EAAAhS,OAAA,EAAAF,EAAAC,EAAAD,IACAuS,EAAAjV,EAAA6U,WAAAD,EAAAlS,GACA1C,EAAAkV,KAAAN,EAAAlS,EAAAuS,EAGA,OAAAL,IAeA5U,EAAAsV,cAAA,SAAAV,GACA,IAAAnV,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,MAAA,KAGA,KAAA,GADA8J,GACAhK,EAAA,EAAAC,EAAAiS,EAAAhS,OAAAF,EAAAC,EAAAD,IAAA,CACAgK,EAAAkI,EAAAlS,EAEA,KAAA,GAAA6S,GAAA7S,EAAA,EAAA6S,GAAA,GAAAX,EAAAW,GAAA7I,EAAA6I,IACAX,EAAAW,EAAA,GAAAX,EAAAW,EAEAX,GAAAW,EAAA,GAAA7I,EAGA,MAAAkI,IAgBA5U,EAAAwV,MAAA,SAAAZ,EAAAG,EAAAU,EAAAC,GACA,IAAAjW,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,MAAA,KACA,IAAAmS,EAAAU,GAAAA,EAAAC,EAAA,MAAA,KAQA,KANA,GAAAhT,GAAAqS,EACAQ,EAAAE,EAAA,EACAE,EAAAZ,EACAtG,KAGA/L,GAAA+S,GAAAF,GAAAG,GACAd,EAAAlS,IAAAkS,EAAAW,GACA9G,EAAAkH,KAAAf,EAAAlS,KAEA+L,EAAAkH,KAAAf,EAAAW,IAIA,IAAA7S,EAAA+S,EAEA,IAAA,GAAAG,GAAAL,EAAAK,GAAAF,EAAAE,IACAnH,EAAAkH,GAAAf,EAAAgB,GACAD,QAKA,KAAA,GAAAE,GAAAnT,EAAAmT,GAAAJ,EAAAI,IACApH,EAAAkH,GAAAf,EAAAiB,GACAF,GAKA,KAAA,GAAAG,GAAAf,EAAAe,GAAAJ,EAAAI,IACAlB,EAAAkB,GAAArH,EAAAqH,EAGA,OAAAlB,IAiBA5U,EAAA+V,UAAA,SAAAnB,EAAAG,EAAAW,GACA,IAAAjW,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,MAAA,KAEA,IAAAgS,EAAAhS,QAAA,GAAAmS,IAAAW,EAAA,MAAA,KAEA,IAAAX,EAAA,IAAAW,EAKA,MAJAd,GAAAG,GAAAH,EAAAc,IACAjW,EAAAO,MAAAkV,KAAAN,EAAAG,EAAAW,GAGAd,CAGA,IAAAa,GAAA5U,KAAAC,OAAAiU,EAAAW,GAAA,EAOA,OALAjW,GAAAO,MAAA+V,UAAAnB,EAAAG,EAAAU,GACAhW,EAAAO,MAAA+V,UAAAnB,EAAAa,EAAA,EAAAC,GAEAjW,EAAAO,MAAAwV,MAAAZ,EAAAG,EAAAU,EAAAC,GAEAd,GAiBA5U,EAAAgW,4BAAA,SAAApB,EAAAG,EAAAW,GACA,IAAAjW,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,OAAA,CACA,IAAAmS,EAAAW,EAAA,OAAA,CAEA,IAAAd,EAAAhS,QAAA,EAAA,MAAA,EAKA,KAAA,GAHAqT,GAAArB,EAAAc,GACAQ,EAAAnB,EAEArS,EAAAqS,EAAArS,EAAAgT,EAAAhT,IACAkS,EAAAlS,IAAAuT,IACAxW,EAAAO,MAAAkV,KAAAN,EAAAlS,EAAAwT,GACAA,IAMA,OAFAR,KAAAQ,GAAAzW,EAAAO,MAAAkV,KAAAN,EAAAc,EAAAQ,GAEAA,GAiBAlW,EAAAmW,UAAA,SAAAvB,EAAAG,EAAAW,GACA,IAAAjW,EAAAwB,QAAA2T,IAAAA,EAAAhS,QAAA,EAAA,MAAA,KAEA,IAAAgS,EAAAhS,QAAA,GAAAmS,IAAAW,EAAA,MAAA,KAEA,IAAAX,EAAAW,EAAA,CACA,GAAAU,GAAA3W,EAAAO,MAAAgW,4BAAApB,EAAAG,EAAAW,EAEAjW,GAAAO,MAAAmW,UAAAvB,EAAAG,EAAAqB,EAAA,GACA3W,EAAAO,MAAAmW,UAAAvB,EAAAwB,EAAA,EAAAV,GAGA,MAAAd,IAeA5U,EAAAyI,OAAA,SAAAmM,EAAApO,GACA,IAAA/G,EAAAwB,QAAA2T,GACA,KAAA,IAAAhT,WAAA,sDAGA,IAAAyU,GAAAzB,EAAAzR,MAAA,GACAkB,EAAArE,EAAAiP,QAAAoH,EAAA7P,EAGA,OAFAnC,IAAA,GAAAgS,EAAAC,OAAAjS,EAAA,GAEAgS,GAeArW,EAAAuW,aAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAjX,EAAAkB,UAAA6V,KAAA/W,EAAAkB,UAAA8V,GACA,KAAA,IAAA7U,WAAA,8EAEA,IAAA,IAAAyB,UAAAT,OACA,KAAAK,OAAA,8CAIA,KAAA,GADA2R,MACAlS,EAAA,EAAAA,EAAA8T,IAAA9T,EAAA,CAGA,IAAA,GAFAiU,MAEApB,EAAA,EAAAA,EAAAkB,IAAAlB,EACAoB,EAAApB,GAAAmB,CAEA9B,GAAAlS,GAAAiU,EAGA,MAAA/B,IAeA5U,EAAA4W,cAAA,SAAAC,EAAArQ,GACA,IAAA/G,EAAAwB,QAAA4V,IAAAA,EAAAjU,QAAA,EAAA,OAAA,CAMA,KAJA,GAEAkU,GAFAC,EAAA,EACAC,EAAAH,EAAAjU,OAAA,EAGAmU,GAAAC,GAAA,CAGA,GAFAF,EAAAjW,KAAAC,OAAAiW,EAAAC,GAAA,GAEAxQ,IAAAqQ,EAAAC,GACA,MAAAA,EAEAtQ,GAAAqQ,EAAAC,GACAE,EAAAF,EAAA,EAEAC,EAAAD,EAAA,EAKA,OAAA,GAoBA9W,EAAAiX,0BAAA,SAAAC,EAAAC,EAAAC,GACA,IAAA3X,EAAAwB,QAAAiW,IAAAA,EAAAtU,QAAA,EAAA,MAAA,KACA,KAAAnD,EAAAsB,SAAAoW,GAAA,MAAA,KAGA,KAAA,GADA/W,GAAA6E,EAAA,KACAvC,EAAA,EAAAC,EAAAuU,EAAAtU,OAAAF,EAAAC,IAAAD,EAEA,GADAtC,EAAA8W,EAAAxU,GACAtC,EAAA0B,eAAAqV,GAEA,GAAA1X,EAAA8B,SAAA6V,IACA,GAAAA,EAAAjO,KAAA/I,EAAA+W,IAAA,CACAlS,EAAA7E,CACA,YAGA,IAAAA,EAAA+W,KAAAC,EAAA,CACAnS,EAAA7E,CACA,OAKA,MAAA6E,IAYAhF,EAAAoX,qBAAA,SAAAC,GAEA,GADA,kBAAAC,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,KACAF,EAAA,OAAA,CAEA,IAAAG,GAAAH,EAAAI,uBACA,OACAD,GAAAE,KAAA,GACAF,EAAAG,MAAA,GACAH,EAAAI,SAAAvY,EAAAwY,aAAAzM,SAAA0M,gBAAAC,eACAP,EAAAQ,QAAA3Y,EAAA4Y,YAAA7M,SAAA0M,gBAAAI,cAaAlY,EAAAmY,sBAAA,SAAAd,GAEA,GADA,kBAAAC,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,KACAF,EAAA,OAAA,CAEA,IAAAG,GAAAH,EAAAI,wBACAW,EAAA/Y,EAAAwY,aAAAzM,SAAA0M,gBAAAC,aACAM,EAAAhZ,EAAA4Y,YAAA7M,SAAA0M,gBAAAI,YAGAI,EAAAd,EAAAE,KAAAU,GAAAZ,EAAAE,IAAAF,EAAArF,QAAA,EACAoG,EAAAf,EAAAG,MAAAU,GAAAb,EAAAG,KAAAH,EAAAtF,OAAA,CAEA,OAAAoG,IAAAC,GAcAtY,EAAAuY,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAxN,SAAAC,cAAA,SACAuN,GAAAlJ,KAAA,kBAEA,kBAAAiJ,SACA,KAAAC,EAAAC,mBACAD,EAAAE,OAAAH,EAGAC,EAAAC,mBAAA,WACA,WAAAD,EAAAG,YAAA,aAAAH,EAAAG,aACAH,EAAAC,mBAAA,KACAF,OAMAC,EAAAI,IAAAP,CAEA,IAAApB,GAAAqB,CAGA,IAFA,kBAAApB,SAAAD,YAAAC,UAAAD,EAAAA,EAAAE,IAAA,IAEAF,EACAA,EAAA4B,YAAAL,OAEA,CACA,GAAAM,GAAA9N,SAAA+N,qBAAA,UAAA,EACAD,GAAAE,WAAAC,aAAAT,EAAAM,KAOA1Z,EAAAE,SAAAA,EACAF,EAAAC,SAAAA,EACAD,EAAAG,QAAAA,EACAH,EAAAI,OAAAA,EACAJ,EAAAK,KAAAA,EACAL,EAAAM,KAAAA,EACAN,EAAAO,MAAAA,EACAP,EAAAQ,QAAAA,EACAR,EAAAS,KAAAA,EAEA,mBAAAqZ,SACA,mBAAAC,SAAAA,OAAAD,UACAA,QAAAC,OAAAD,QAAA9Z,GAEA,kBAAAga,SAAAA,OAAAC,IACAD,OAAA,SAAA,WACA,MAAAha,KAGAH,EAAAG,IAAAA","file":"aid.min.js","sourcesContent":["/*\n * aid.js 0.1.46\n * https://www.npmjs.com/package/aid.js\n *\n * The MIT License (MIT)\n * Copyright (c) 2016-2017 Hyun-Seok.Kim, dragmove@gmail.com\n */\n(function () {\n  'use strict';\n\n  // Establish the global object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var global = typeof self == 'object' && self.self === self && self ||\n    typeof global == 'object' && global.global === global && global ||\n    this ||\n    {};\n\n  var aid = {},\n    operator = {},\n    platform = {},\n    browser = {},\n    string = {},\n    math = {},\n    date = {},\n    array = {},\n    element = {},\n    file = {};\n\n  /**\n   * get object is null/undefined or other\n   *\n   * @static\n   * @method existy\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.existy(undefined) ); // false\n   * console.log( aid.existy(null) ); // false\n   * console.log( aid.existy('') ); // true\n   */\n  aid.existy = function existy(obj) {\n    return obj != null;\n  };\n\n  /**\n   * check object is defined\n   *\n   * @static\n   * @method isDefined\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isDefined(null) ); // false\n   */\n  aid.isDefined = function isDefined(obj) {\n    if (obj === null || typeof obj === 'undefined') return false;\n    return true;\n  };\n\n  /**\n   * check object type is Boolean\n   *\n   * @static\n   * @method isBoolean\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isBoolean(false) ); // true\n   */\n  aid.isBoolean = function (obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Boolean);\n  };\n\n  /**\n   * check object type is Number\n   *\n   * @static\n   * @method isNumber\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isNumber(-1) ); // true\n   */\n  aid.isNumber = function isNumber(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Number);\n  };\n\n  /**\n   * check object type is Integer Number\n   *\n   * @static\n   * @method isInteger\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isInteger(-1) ); // true\n   */\n  aid.isInteger = function (obj) {\n    if (!aid.isNumber(obj)) return false;\n\n    // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    return (isFinite(obj) && Math.floor(obj) === obj);\n  };\n\n  /**\n   * check object type is String\n   *\n   * @static\n   * @method isString\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isString('') ); // true\n   */\n  aid.isString = function isString(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === String);\n  };\n\n  /**\n   * check object type is Array\n   *\n   * @static\n   * @method isArray\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isArray([]) ); // true\n   */\n  aid.isArray = function isArray(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Array);\n  };\n\n  /**\n   * check object type is Object\n   *\n   * @static\n   * @method isObject\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isObject({}) ); // true\n   */\n  aid.isObject = function isObject(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Object);\n  };\n\n  /**\n   * check object type is Function\n   *\n   * @static\n   * @method isFunction\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isFunction(function(){}) ); // true\n   */\n  aid.isFunction = function isFunction(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === Function);\n  };\n\n  /**\n   * check object type is RegExp\n   *\n   * @static\n   * @method isRegExp\n   * @param {Object} obj\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.isRegExp(new RegExp('^aid')) ); // true\n   * console.log( aid.isRegExp(/^aid/) ); // true\n   */\n  aid.isRegExp = function isRegExp(obj) {\n    if (!aid.isDefined(obj)) return false;\n    return (obj.constructor === RegExp);\n  };\n\n  /**\n   * extend function\n   *\n   * @static\n   * @method extend\n   * @param {Object} prototype of class function, or object has variables or methods.\n   * @param {Object} object has variables or methods\n   * @example\n   * function Destination() {\n   *   this.name = 'destination';\n   *   this.type = 'json';\n   * };\n   *\n   * var source = {\n   *   getName: function() { return this.name; },\n   *   getType: function() { return this.type; }\n   * };\n   *\n   * aid.extend(Destination.prototype, source);\n   *\n   * var destination = new Destination();\n   * console.log( destination.getName() ); // 'destination'\n   * console.log( destination.getType() ); // 'json'\n   */\n  aid.extend = function extend(destination, source) {\n    if (!(destination instanceof Object) || !(typeof destination === 'object')) {\n      throw TypeError('destination parameter type of aid.extend() must be instance of Object, and object type.');\n    }\n    if (!(typeof source === 'object')) {\n      throw TypeError('source parameter type of aid.extend() must be object type.');\n    }\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n\n    return destination;\n  };\n\n  /**\n   * inherit Class function\n   *\n   * @static\n   * @method inherit\n   * @param {class} ChildClass - child class function\n   * @param {class} ParentClass - parent class function\n   * @example\n   */\n  aid.inherit = (function () {\n    // use closure, protect gabarge collection.\n    var F = function () {\n    };\n\n    return function inherit(ChildClass, ParentClass) {\n      F.prototype = ParentClass.prototype;\n\n      ChildClass.prototype = new F();\n      ChildClass.prototype.constructor = ChildClass;\n      ChildClass.super = ParentClass.prototype;\n    };\n  }());\n\n  /**\n   * create namespace\n   *\n   * @static\n   * @method namespace\n   * @param {String} namespace\n   * @param {Object} parent\n   * @returns {Object} return object\n   * @example\n   * aid.namespace('first.second.third'); // create first.second.third object\n   */\n  aid.namespace = function (namespace, parent) {\n    if (!aid.isString(namespace)) throw new TypeError('namespace parameter type of aid.namespace() must be String.');\n    if (!(aid.isObject(parent) || !aid.isDefined(parent))) throw new TypeError('parent parameter type of aid.namespace() must be Object or null or undefined.');\n\n    var ns = parent || global;\n\n    if (namespace) {\n      var parts = namespace.split('.');\n\n      for (var i = 0, max = parts.length; i < max; i++) {\n        if (!ns[parts[i]]) ns[parts[i]] = {};\n        ns = ns[parts[i]];\n      }\n    }\n\n    return ns;\n  };\n\n  /**\n   * borrow method from donor object\n   *\n   * @static\n   * @method borrow\n   * @param {Object} borrower\n   * @param {Object} donor\n   * @param {String} functionName\n   * @example\n   * var borrower = {}, donor = { say: function() { return 'hello, world'; } };\n   * aid.borrow(borrower, donor, 'say');\n   * console.log( borrower.say() ); // 'hello, world'\n   */\n  aid.borrow = function borrow(borrower, donor, functionName) {\n    if (!aid.isObject(borrower) || !aid.isObject(donor)) throw new TypeError('borrower, donor parameter type of aid.borrow() must be Object.');\n    if (!aid.isString(functionName)) throw new TypeError('functionName parameter type of aid.borrow() must be String.');\n    if (!aid.isDefined(donor[functionName])) throw new Error('donor object parameter of aid.borrow() has not function with functionName.');\n    if (aid.isDefined(borrower[functionName])) throw new Error('borrower object parameter of aid.borrow() already has function with functionName.');\n\n    borrower[functionName] = function () {\n      var args = Array.prototype.slice.call(arguments);\n      return donor[functionName].apply(this, args);\n    };\n  };\n\n  /**\n   * return function bind context and parameters\n   *\n   * @static\n   * @method bind\n   * @param {Function} func\n   * @param {Object} context\n   * @returns {Function} return function\n   * @example\n   */\n  aid.bind = function bind(func, context) {\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  /**\n   * return function composed function_a and function_b\n   *\n   * @static\n   * @method compose\n   * @param {Function} function\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.compose = function compose(func_a, func_b) {\n    if (!aid.isFunction(func_a) || !aid.isFunction(func_b)) throw new TypeError('func_a, func_b parameter type of aid.compose() must be Function.');\n\n    return function () {\n      return func_a(func_b.apply(null, arguments));\n    };\n  };\n\n  /**\n   * return function negate object parameter\n   *\n   * @static\n   * @method not\n   * @param {Function} func\n   * @returns {Function} return function\n   * @example\n   * var isNotNaN = aid.not(isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  aid.not = function not(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.not() must be Function.');\n\n    return function (object) {\n      return !func(object);\n    };\n  };\n\n  /**\n   * each method for data can loop\n   *\n   * @static\n   * @method each\n   * @param {Array or String} data can loop\n   * @param {Function} func\n   * @param {Object} context\n   * @example\n   */\n  aid.each = function each(dataCanLoop, func, context) {\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) throw new TypeError('dataCanLoop parameter type of aid.each() must be Array or String.');\n\n    var _context = (aid.existy(context)) ? context : null;\n\n    for (var i = 0, max = dataCanLoop.length; i < max; i++) {\n      func.call(_context, dataCanLoop[i]);\n    }\n  };\n\n  /**\n   * check object is truthy\n   *\n   * @static\n   * @method truthy\n   * @param {Object} object\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  aid.truthy = function truthy(object) {\n    return !!object;\n  };\n\n  /**\n   * check object is falsy\n   *\n   * @static\n   * @method falsy\n   * @param {Object} object\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  aid.falsy = function falsy(object) {\n    return !!!object;\n  };\n\n  /**\n   * get indexed value of array or string\n   *\n   * @static\n   * @method nth\n   * @param {Array or String} data can loop\n   * @param {Number} index\n   * @example\n   * console.log( aid.nth('string', 1) ); // 't'\n   * console.log( aid.nth('string', -1) ); // null\n   * console.log( aid.nth([0, 'str', true], 2) ); // true\n   * console.log( aid.nth([0, 'str', true], 99) ); // null\n   */\n  aid.nth = function nth(dataCanLoop, index) {\n    if (!(aid.isArray(dataCanLoop) || aid.isString(dataCanLoop))) throw new TypeError('dataCanLoop parameter type of aid.nth() must be Array or String.');\n    if (!aid.isInteger(index)) throw new TypeError('index parameter type of aid.nth() must be Integer Number.');\n\n    return (index < 0 || index > dataCanLoop.length - 1) ? null : dataCanLoop[index];\n  };\n\n  /**\n   * return function always return constant value\n   * http://underscorejs.org/#constant\n   *\n   * @static\n   * @method constant\n   * @param {Object} object\n   * @returns {Function} return function\n   * @example\n   * var obj = {name: 'aid.js'};\n   * console.log( aid.constant(obj)() === obj ); // true\n   */\n  aid.constant = function constant(object) {\n    return function () {\n      return object;\n    };\n  };\n\n  /**\n   * return function pluck field of object, array, string\n   *\n   * @static\n   * @method plucker\n   * @param {String or Number} field of object, array, string\n   * @returns {Function} return function\n   * @example\n   * var getTitle = aid.plucker('title');\n   * var obj = {title: 'aid.js', description: 'A bundle of Javascript util Library for help developers. No dependency to other Libraries.'};\n   * console.log( getTitle(obj) ); // 'aid.js'\n   *\n   * var getFirst = aid.plucker(0);\n   * var str = 'aid.js';\n   * console.log( getFirst(str) ); // 'a'\n   *\n   * var getLength = aid.plucker('length');\n   * var arr = [1, 2, 3, 4, 5];\n   * console.log( getLength(arr) ); // 5\n   */\n  aid.plucker = function plucker(field) {\n    if (!(aid.isString(field) || aid.isNumber(field))) throw new TypeError('field parameter type of aid.plucker() must be String or Number.');\n\n    return function (obj) {\n      if (!(aid.isObject(obj) || aid.isArray(obj) || aid.isString(obj))) throw new TypeError('obj parameter type of function (get from aid.plucker()) must be Object or Array or String.');\n      return obj[field];\n    };\n  };\n\n  /**\n   * return best(optimized by condition function) value.\n   *\n   * @static\n   * @method best\n   * @param {Function} condition function to find best value.\n   * @param {Array} array\n   * @example\n   * console.log( aid.best(function(x, y) { return x > y; }, [1, 2, 3, 4, 5]) ); // 5\n   */\n  aid.best = function best(conditionFunc, array) {\n    if (!aid.isFunction(conditionFunc)) throw new TypeError('conditionFunc parameter type of aid.best() must be Function.');\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.best() must be Array.');\n\n    return array.reduce(function (previousValue, currentValue) {\n      return conditionFunc(previousValue, currentValue) ? previousValue : currentValue;\n    });\n  };\n\n  /**\n   * return array has values filtered\n   *\n   * @static\n   * @method iterateUntil\n   * @param {Function} function return value\n   * @param {Function} function has condition\n   * @param {Object} initial value\n   * @returns {Array} return array has values filtered.\n   * @example\n   * console.log( aid.iterateUntil(function(n) { return n + n; }, function(n) { return n <= 1042 }, 1) ); // [2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\n   */\n  aid.iterateUntil = function iterateUntil(calculateFunc, conditionFunc, initialValue) {\n    if (!aid.isFunction(calculateFunc)) throw new TypeError('calculateFunc parameter type of aid.iterateUntil() must be Function.');\n    if (!aid.isFunction(conditionFunc)) throw new TypeError('conditionFunc parameter type of aid.iterateUntil() must be Function.');\n\n    var array = [],\n      result = calculateFunc(initialValue);\n\n    while (conditionFunc(result)) {\n      array.push(result);\n      result = calculateFunc(result);\n    }\n\n    return array;\n  };\n\n  /**\n   * curry function can use one parameter\n   *\n   * @static\n   * @method curry\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   */\n  aid.curry = function curry(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry() must be Function.');\n\n    return function (arg) {\n      return func(arg);\n    };\n  };\n\n  /**\n   * curry function can use two parameter\n   *\n   * @static\n   * @method curry2\n   * @param {Function} function\n   * @returns {Function} return function\n   * @example\n   * var parseBinaryStr = aid.curry2(parseInt)(2);\n   * console.log( parseBinaryStr('111') ); // 7\n   */\n  aid.curry2 = function curry2(func) {\n    if (!aid.isFunction(func)) throw new TypeError('func parameter type of aid.curry2() must be Function.');\n\n    return function (secondArg) {\n      return function (firstArg) {\n        return func(firstArg, secondArg);\n      };\n    };\n  };\n\n  /**\n   * curry function for variadic functions.\n   *\n   * @static\n   * @method curryAll\n   * @param {Function} function\n   * @param {Number} minimum number of arguments to curry\n   * @returns {Function} return function\n   * @example\n   * console.log( curryAll(Math.max, 2)(1, 99) ); // 99\n   */\n  aid.curryAll = function curryAll(func, curryArgsNum) {\n    var arity = curryArgsNum || func.length;\n\n    return function curried() {\n      var args = Array.prototype.slice.call(arguments),\n        context = this;\n\n      return args.length >= arity ?\n        func.apply(context, args) :\n        function () {\n          var rest = Array.prototype.slice.call(arguments);\n          return curried.apply(context, args.concat(rest));\n        };\n    };\n  };\n\n  /**\n   * rest\n   * // refer to _.rest function of underscore.js - https://github.com/jashkenas/underscore/blob/master/underscore.js\n   *\n   * @static\n   * @method rest\n   * @param {Array} array\n   * @param {Number} begin index to slice arguments.\n   * @returns {Array} return array\n   * @example\n   * var array = [1, 2, 3, 4, 5];\n   * console.log( aid.rest(array) ); // [2, 3, 4, 5]\n   * console.log( aid.rest(array, 2) ); // [3, 4, 5]\n   */\n  aid.rest = function rest(array, beginIndex) {\n    if (!aid.isArray(array)) throw new TypeError('array parameter type of aid.rest() must be Array.');\n\n    var begin = (!aid.existy(beginIndex)) ? 1 : beginIndex;\n    return Array.prototype.slice.call(array, begin);\n  };\n\n  /**\n   * pipeline\n   *\n   * @static\n   * @method pipeline\n   * @param {Object} seed\n   * @returns {Object} return value\n   * @example\n   * function negative(n) { return n * -1; }\n   * function half(n) { return n / 2; }\n   * function negativeHalf(n) { return aid.pipeline(n, negative, half); }\n   * console.log( aid.pipeline(80, negative) ); // -80\n   * console.log( negativeHalf(80) ); // 80 * -1 / 2\n   */\n  aid.pipeline = function pipeline(seed /* args */) {\n    var restArgs = aid.rest(Array.prototype.slice.call(arguments));\n\n    return restArgs.reduce(function (prev, current) {\n      return current(prev);\n    }, seed);\n  };\n\n  /**\n   * lazyChain\n   *\n   * @static\n   * @method lazyChain\n   * @param {Object} object\n   * @returns {Object} return {invoke, force}\n   * @example\n   * var lazy = aid.lazyChange([2, 1, 3]).invoke('concat', [7, 7, 8, 9, 0]).invoke('sort');\n   * console.log( lazy.force() ); // [0, 1, 2, 3, 7, 7, 8, 9]\n   *\n   * // with aid.pipeline\n   * function double(array) { return array.map(function(v) { return v * 2; }); }\n   * function lazyReverseAndNegative(array) { return aid.lazyChain(array).invoke('reverse').invoke('map', function(v) { return v * -1; }); }\n   * console.log( aid.pipeline([1, 2, 3], double, lazyReverseAndNegative).force() ); // [-6, -4, -2]\n   */\n  aid.lazyChain = function lazyChain(obj) {\n    var calls = [];\n\n    return {\n      invoke: function (methodName /*, args */) {\n        var args = aid.rest(Array.prototype.slice.call(arguments));\n\n        calls.push(function (target) {\n          var method = target[methodName];\n\n          if (!aid.isDefined(method)) {\n            throw Error(target.constructor.name + ' has not ' + methodName + ' method');\n          }\n\n          return method.apply(target, args);\n        });\n\n        return this;\n      },\n\n      force: function () {\n        return calls.reduce(function (ret, thunk) {\n          return thunk(ret);\n        }, obj);\n      }\n    };\n  };\n\n  /*\n   * Data Structure\n   */\n  // Stack\n  var Stack = function () {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  Stack.prototype.push = function push(element) {\n    if (this._top < 0) this._top = 0;\n    this._dataStore[this._top++] = element;\n  };\n\n  Stack.prototype.pop = function pop() {\n    return this._dataStore[--this._top];\n  };\n\n  Stack.prototype.peek = function peek() {\n    return this._dataStore[this._top - 1];\n  };\n\n  Stack.prototype.length = function length() {\n    return (this._top > 0) ? this._top : 0;\n  };\n\n  Stack.prototype.clear = function clear() {\n    this._dataStore = [];\n    this._top = 0;\n  };\n\n  aid.createStack = function () {\n    return new Stack();\n  };\n\n  // Queue\n  var Queue = function () {\n    this._dataStore = [];\n  };\n\n  Queue.prototype.enqueue = function enqueue(element) {\n    this._dataStore.push(element);\n  };\n\n  Queue.prototype.dequeue = function dequeue() {\n    return this._dataStore.shift();\n  };\n\n  Queue.prototype.front = function front() {\n    return this._dataStore[0];\n  };\n\n  Queue.prototype.rear = function rear() {\n    return this._dataStore[this._dataStore.length - 1];\n  };\n\n  Queue.prototype.length = function length() {\n    return this._dataStore.length;\n  };\n\n  Queue.prototype.isEmpty = function isEmpty() {\n    if (this._dataStore.length <= 0) return true;\n    return false;\n  };\n\n  aid.createQueue = function createQueue() {\n    return new Queue();\n  };\n\n  // LinkedList node\n  var LinkedListNode = function (data) {\n    this.data = data;\n    this.next = null;\n  };\n\n  // LinkedList\n  var LinkedList = function () {\n    this.head = new LinkedListNode('head');\n  };\n\n  LinkedList.prototype.find = function find(data) {\n    var node = this.head;\n    while (node.data !== data) {\n      node = node.next;\n      if (node === null) return node;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.findPrevious = function findPrevious(data) {\n    if (this.head.data === data) return null;\n\n    var node = this.head;\n    while ((node.next !== null) && (node.next.data !== data)) {\n      node = node.next;\n    }\n    return node;\n  };\n\n  LinkedList.prototype.insert = function insert(data, prevNodeData) {\n    var insertNode = new LinkedListNode(data),\n      prevNode = this.find(prevNodeData);\n    insertNode.next = prevNode.next;\n    prevNode.next = insertNode;\n  };\n\n  LinkedList.prototype.remove = function remove(data) {\n    var prevNode = this.findPrevious(data);\n    if (prevNode.next !== null) {\n      prevNode.next = prevNode.next.next;\n    }\n  };\n\n  LinkedList.prototype.getAllNodes = function getAllNodes() {\n    var nodes = [this.head],\n      node = this.head;\n\n    while (node.next !== null) {\n      nodes.push(node.next);\n      node = node.next;\n    }\n    return nodes;\n  };\n\n  aid.createLinkedList = function createLinkedList() {\n    return new LinkedList();\n  };\n\n  /**\n   * plus(+) operator\n   *\n   * @static\n   * @method +\n   * @param {Number} number_a\n   * @param {Number} number_b\n   * @returns {Number} return number\n   * @example\n   */\n  operator['+'] = function plus(number_a, number_b) {\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\n      throw new TypeError('operator[\"+\"] requires Number parameters.');\n    }\n\n    return number_a + number_b;\n  };\n\n  /**\n   * identity(===) operator\n   *\n   * @static\n   * @method ===\n   * @param {Object} object_a\n   * @param {Object} object_b\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  operator['==='] = function identity(object_a, object_b) {\n    return object_a === object_b;\n  };\n\n  /**\n   * logical not(!) operator\n   *\n   * @static\n   * @method !\n   * @param {Object} object\n   * @returns {Boolean} return boolean\n   * @example\n   * var isNotNaN = aid.compose(aid.operator['!'], isNaN);\n   * console.log( isNotNaN(0) ); // true\n   */\n  operator['!'] = function not(object) {\n    return !object;\n  };\n\n  /**\n   * is window platform\n   *\n   * @static\n   * @method isWindow\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isWindow(window.navigator.userAgent) );\n   */\n  platform.isWindow = function isWindow(userAgent) {\n    return /Windows/i.test(userAgent);\n  };\n\n  /**\n   * is Macintosh platform\n   *\n   * @static\n   * @method isMac\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isMac(window.navigator.userAgent) );\n   */\n  platform.isMac = function isMac(userAgent) {\n    return /Macintosh/i.test(userAgent);\n  };\n\n  /**\n   * is iOS platform\n   * http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#9039885\n   *\n   * @static\n   * @method isIOS\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isIOS(window.navigator.userAgent) );\n   */\n  platform.isIOS = function isIOS(userAgent) {\n    return /iPad|iPhone|iPod/.test(userAgent) && !global.MSStream;\n  };\n\n  /**\n   * is Android platform\n   *\n   * @static\n   * @method isAndroid\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.platform.isAndroid(window.navigator.userAgent) );\n   */\n  platform.isAndroid = function (userAgent) {\n    return /android/i.test(userAgent);\n  };\n\n  /**\n   * is IE browser\n   *\n   * @static\n   * @method isIE\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isIE(window.navigator.userAgent) );\n   */\n  browser.isIE = function (userAgent) {\n    return /msie/i.test(userAgent) || /trident/i.test(userAgent);\n  };\n\n  /**\n   * is Edge browser\n   *\n   * @static\n   * @method isEdge\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isEdge(window.navigator.userAgent) );\n   */\n  browser.isEdge = function isEdge(userAgent) {\n    return ( /Gecko/i.test(userAgent) && /Edge/i.test(userAgent) );\n  };\n\n  /**\n   * is Firefox browser\n   *\n   * @static\n   * @method isFF\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isFF(window.navigator.userAgent) );\n   */\n  browser.isFF = function isFF(userAgent) {\n    return /Firefox/i.test(userAgent);\n  };\n\n  /**\n   * is Opera browser\n   *\n   * @static\n   * @method isOpera\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isOpera(window.navigator.userAgent) );\n   */\n  browser.isOpera = function isOpera(userAgent) {\n    return ( /Opera/i.test(userAgent) || /OPR\\//i.test(userAgent) );\n  };\n\n  /**\n   * is Chrome browser\n   *\n   * @static\n   * @method isChrome\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChrome(window.navigator.userAgent) );\n   */\n  browser.isChrome = function isChrome(userAgent) {\n    return ( !browser.isEdge(userAgent) && !browser.isOpera(userAgent) && /Chrome/i.test(userAgent) );\n  };\n\n  /**\n   * is Safari browser\n   *\n   * @static\n   * @method isSafari\n   * @param {String} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSafari(window.navigator.userAgent) );\n   */\n  browser.isSafari = function isSafari(userAgent) {\n    return ( !/Chrome/i.test(userAgent) && /Safari/i.test(userAgent) );\n  };\n\n  /**\n   * get IE version\n   *\n   * @static\n   * @method getIEVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getIEVersion(window.navigator.userAgent) );\n   */\n  browser.getIEVersion = function getIEVersion(userAgent) {\n    if (browser.isIE(userAgent)) {\n      if (/msie (\\d+\\.\\d+);/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      if (/trident.*rv:(\\d+)\\.(\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Firefox version\n   *\n   * @static\n   * @method getFFVersion\n   * @param {string} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getFFVersion(window.navigator.userAgent) );\n   */\n  browser.getFFVersion = function getFFVersion(userAgent) {\n    if (browser.isFF(userAgent)) {\n      if (/Firefox[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Opera version\n   *\n   * @static\n   * @method getOperaVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getOperaVersion(window.navigator.userAgent) );\n   */\n  browser.getOperaVersion = function (userAgent) {\n    if (browser.isOpera(userAgent)) {\n      if (/Opera/i.test(userAgent)) {\n        if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n        if (/Opera[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n      }\n      if (/OPR[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Chrome version\n   *\n   * @static\n   * @method getChromeVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getChromeVersion(window.navigator.userAgent) );\n   */\n  browser.getChromeVersion = function getChromeVersion(userAgent) {\n    if (browser.isChrome(userAgent)) {\n      if (/Chrome[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get Safari version\n   *\n   * @static\n   * @method getSafariVersion\n   * @param {String} userAgent\n   * @returns {Number} return version float number\n   * @example\n   * console.log( aid.browser.getSafariVersion(window.navigator.userAgent) );\n   */\n  browser.getSafariVersion = function getSafariVersion(userAgent) {\n    if (browser.isSafari(userAgent)) {\n      if (/Version[\\/\\s](\\d+\\.\\d+)/i.test(userAgent)) return parseFloat(RegExp.$1, 10);\n    }\n    return -1;\n  };\n\n  /**\n   * get IE browser Compatibility info object.\n   *\n   * @static\n   * @method getIECompatibility\n   * @param {String} optionUserAgent\n   * @returns {Object} return { isIE: Boolean, isCompatibilityMode: Boolean, compatibilityVersion: Number }\n   * @example\n   * console.log( aid.browser.getIECompatibility() );\n   * console.log( aid.browser.getIECompatibility('mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) hrome/39.0.2171.65 safari/537.36') );\n   */\n  browser.getIECompatibility = function getIECompatibility(optionUserAgent) {\n    var ua = (optionUserAgent) ? optionUserAgent : global.navigator.userAgent.toLowerCase(),\n      regex_msie = /msie/i,\n      regex_msie7 = /msie 7/i,\n      regex_msie8 = /msie 8/i,\n      regex_msie9 = /msie 9/i,\n      regex_msie10 = /msie 10/i,\n      regex_msie11 = /rv:11[\\.0-9]{0,}/,\n      regex_trident = /trident/i,\n      regex_trident7 = /trident\\/7/;\n\n    if (!regex_msie.test(ua) && !regex_msie11.test(ua)) {\n      // not IE\n      return {\n        isIE: false,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie11.test(ua) && regex_trident7.test(ua)) {\n      // IE11 standard\n      return {\n        isIE: true,\n        isCompatibilityMode: false,\n        compatibilityVersion: -1\n      };\n    }\n\n    if (regex_msie.test(ua) && regex_trident7.test(ua)) {\n\n      // IE11 compatibility mode\n      if (regex_msie7.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 7\n        };\n\n      if (regex_msie8.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 8\n        };\n\n      if (regex_msie9.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 9\n        };\n\n      if (regex_msie10.test(ua))\n        return {\n          isIE: true,\n          isCompatibilityMode: true,\n          compatibilityVersion: 10\n        };\n    }\n\n    if (regex_msie7.test(ua) && regex_trident.test(ua)) {\n      // IE8 ~ 10 compatibility mode\n      return {\n        isIE: true,\n        isCompatibilityMode: true,\n        compatibilityVersion: 7\n      };\n    }\n\n    // IE8 ~ 10 standard\n    return {\n      isIE: true,\n      isCompatibilityMode: false,\n      compatibilityVersion: -1\n    };\n  };\n\n  /**\n   * is browser support draggable attribute of element.\n   *\n   * @static\n   * @method isSupportDraggable\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDraggable() );\n   */\n  browser.isSupportDraggable = function isSupportDraggable() {\n    var div = document.createElement('div');\n    return ('draggable' in div);\n  };\n\n  /**\n   * is browser support element methods related drag(ondragstart, ondrop, etc...).\n   *\n   * @static\n   * @method isSupportDragAndDrop\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportDragAndDrop() );\n   */\n  browser.isSupportDragAndDrop = function isSupportDragAndDrop() {\n    var div = document.createElement('div');\n    return ('ondragstart' in div && 'ondrop' in div);\n  };\n\n  /**\n   * is browser support html5 File API.\n   *\n   * @static\n   * @method isSupportFileApi\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isSupportFileApi() );\n   */\n  browser.isSupportFileApi = function isSupportFileApi() {\n    return !!(global.File && global.FileReader && global.FileList && global.Blob);\n  };\n\n  /**\n   * is chrome extension.\n   *\n   * @static\n   * @method isChromeExtension\n   * @param {string} userAgent\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.browser.isChromeExtension(window.navigator.userAgent) );\n   */\n  browser.isChromeExtension = function isChromeExtension(userAgent) {\n    if (browser.isChrome(userAgent) && global.chrome) {\n      if (!global.chrome.cookies) {\n        if (global.chrome.experimental) global.chrome.cookies = global.chrome.experimental.cookies;\n      }\n\n      if (global.chrome.cookies) return true;\n      return false;\n    }\n\n    return false;\n  };\n\n  /**\n   * get cookie\n   *\n   * @static\n   * @method getCookie\n   * @param {String} key\n   * @returns {String} return string\n   * @example\n   * console.log( aid.browser.getCookie('sampleCookieKey') );\n   */\n  browser.getCookie = function getCookie(key) {\n    var cookieArr = document.cookie.split('; '),\n      splitArr = [],\n      keyStr = '',\n      valueStr = '';\n\n    for (var i = 0, max = cookieArr.length; i < max; ++i) {\n      splitArr = cookieArr[i].split('=');\n      keyStr = splitArr[0];\n      valueStr = global.decodeURIComponent(splitArr[1]);\n      if (keyStr === key) return valueStr;\n    }\n\n    return null;\n  };\n\n  /**\n   * set cookie\n   *\n   * @static\n   * @method setCookie\n   * @param {String} key\n   * @param {String} value\n   * @param {Number} expireSecond\n   * @param {String} path\n   * @param {String} domain\n   * @example\n   * aid.browser.setCookie('sampleCookieKey', 'sampleValue', 3600, '/samplePath', 'sample.com');\n   */\n  browser.setCookie = function setCookie(key, value, expireSecond, path, domain) {\n    var expires = '',\n      pathStr = '; path=' + ( (path) ? path : '/' ),\n      domainStr = (domain) ? '; domain=' + domain : '';\n\n    if (expireSecond) {\n      var date = new Date();\n      date.setTime(date.getTime() + (expireSecond * 1000));\n      expires = '; expires=' + date.toGMTString();\n    }\n\n    document.cookie = key + '=' + global.encodeURIComponent(value) + pathStr + domainStr + expires;\n  };\n\n  /**\n   * trim string\n   *\n   * @static\n   * @method trim\n   * @param {String} str\n   * @returns {String} return trimmed string\n   * @example\n   * console.log( aid.string.trim('   foo   ') ); // 'foo'\n   */\n  string.trim = function trim(str) {\n    if (!aid.isString(str)) throw new TypeError('string.trim() requires String parameter.');\n\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  };\n\n  /**\n   * check string has unique characters\n   *\n   * @static\n   * @method hasUniqueChars\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.hasUniqueChars('abcdea') ); // false\n   */\n  string.hasUniqueChars = function hasUniqueChars(str) {\n    if (!aid.isString(str)) throw new TypeError('string.hasUniqueChars() requires String parameter.');\n\n    if (!str.length) return true;\n\n    var obj = {}, char = '';\n    for (var i = 0, max = str.length; i < max; i++) {\n      char = str.charAt(i);\n\n      if (obj[char] === true) return false;\n      obj[char] = true;\n    }\n\n    return true;\n  };\n\n  /**\n   * get extension(png, jpg ...) string.\n   *\n   * @static\n   * @method getFileExtension\n   * @param {String} fileName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getFileExtension('aid.png') ); // png\n   */\n  string.getFileExtension = function getFileExtension(fileName) {\n    if (!aid.isString(fileName)) throw new TypeError('string.getFileExtension() requires String parameter.');\n\n    if (fileName.length <= 0) return '';\n\n    var lastDotIndex = fileName.lastIndexOf('.'),\n      extension = fileName.substr(lastDotIndex + 1);\n\n    return extension;\n  };\n\n  /**\n   * check email string.\n   *\n   * @static\n   * @method isEmail\n   * @param {String} emailStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isEmail('dragmove@gmail.com') ); // true\n   */\n  string.isEmail = function isEmail(emailStr) {\n    if (!aid.isString(emailStr)) throw new TypeError('string.isEmail() requires String parameter.');\n\n    // html5 form email check regex - https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n    var emailRegex = new RegExp(\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\");\n    return ( emailRegex.exec(emailStr) ? true : false );\n  };\n\n  /**\n   * check iframe string.\n   *\n   * @static\n   * @method isIFrame\n   * @param {String} iframeStr\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isIFrame('<iframe src=\"\"></iframe>') ); // true\n   */\n  string.isIFrame = function (iframeStr) {\n    if (!aid.isString(iframeStr)) throw new TypeError('string.isIFrame() requires String parameter.');\n\n    return /^(<iframe).*(<\\/iframe>|\\/>)$/.test(iframeStr);\n  };\n\n  /**\n   * get param value from uri.\n   *\n   * @static\n   * @method getUriParam\n   * @param {String} uri\n   * @param {String} parameterName\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriParam('http://www.google.com?name=foo&age=99&address=seoul', 'name') ); // 'foo'\n   */\n  string.getUriParam = function getUriParam(uri, parameterName) {\n    if (!aid.isString(uri) || !aid.isString(parameterName)) {\n      throw new TypeError('string.getUriParam() requires String parameters.');\n    }\n\n    if (uri.length < 1) return '';\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return '';\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    var keyValueArr;\n    for (var i = 0, max = params.length; i < max; ++i) {\n      keyValueArr = params[i].split('=');\n      if (keyValueArr.length <= 1) keyValueArr.push('');\n      if (keyValueArr[0] === parameterName) return global.decodeURIComponent(keyValueArr[1]);\n    }\n\n    return '';\n  };\n\n  /**\n   * get param values from uri.\n   *\n   * @static\n   * @method getUriParams\n   * @param {String} uri\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.string.getUriParams('http://www.google.com?name=foo&age=99&address=seoul') ); // {name: 'foo', age: '99', address: 'seoul'}\n   */\n  string.getUriParams = function getUriParams(uri) {\n    if (!aid.isString(uri)) throw new TypeError('string.getUriParams() requires String parameter.');\n\n    if (uri.length < 1) return null;\n    uri = uri.split('#')[0];\n\n    var tmpArr = uri.split('?');\n    if (tmpArr.length < 2) return null;\n\n    var paramStr = tmpArr[1],\n      params = paramStr.split('&');\n\n    var keyValueArr, obj = {};\n    for (var i = 0, max = params.length; i < max; ++i) {\n      keyValueArr = params[i].split('=');\n      if (keyValueArr.length <= 1) return null;\n\n      obj[keyValueArr[0]] = keyValueArr[1];\n    }\n\n    return obj;\n  };\n\n  /**\n   * get uri combined parameters\n   *\n   * @static\n   * @method getUriCombinedParams\n   * @param {String} uri\n   * @param {Object} parameters\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getUriCombinedParams('http://www.google.com', {name: \"foo\", age: \"99\", address: \"seoul\"}) ) // http://www.google.com?name=foo&age=99&address=seoul\n   */\n  string.getUriCombinedParams = function getUriCombinedParams(uri, parameters) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getUriCombinedParams() must be String.');\n    if (!aid.isObject(parameters)) throw new TypeError('parameters parameter type of string.getUriCombinedParams() must be Object.');\n\n    if (!uri) return '';\n    if (!parameters) return uri;\n\n    var str = '';\n    for (var key in parameters) {\n      str += '&' + key + '=' + String(parameters[key]);\n    }\n    if (str === '') return uri;\n\n    var tmpArr = uri.split('#'),\n      hashStr = (aid.isDefined(tmpArr[1])) ? '#' + tmpArr[1] : '';\n\n    uri = tmpArr[0];\n    uri = ((uri.indexOf('?') >= 0) ? (uri + str) : (uri + '?' + str.substr(1))) + hashStr;\n\n    return uri;\n  };\n\n  /**\n   * check youtube video id.\n   *\n   * @static\n   * @method isValidYoutubeVideoId\n   * @param {String} youtubeId\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isValidYoutubeVideoId('mYIfiQlfaas') ); // true\n   */\n  string.isValidYoutubeVideoId = function isValidYoutubeVideoId(youtubeId) {\n    if (!aid.isString(youtubeId)) throw new TypeError('youtubeId parameter type of string.isValidYoutubeVideoId() must be String.');\n\n    var regex = /^(\\w|-|_){11}$/;\n    return regex.exec(youtubeId) ? true : false;\n  };\n\n  /**\n   * check youtube uri is valid.\n   *\n   * @static\n   * @method getObjCheckYoutubeURI\n   * @param {String} uri\n   * @returns {Object} return { type:'youtube', uri: String, youtubeId: String, isValidURI: Boolean }\n   * @example\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/watch?v=mYIfiQlfaas') ); // // {type: \"youtube\", uri: \"https://www.youtube.com/watch?v=mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://youtu.be/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://youtu.be/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   * console.log( aid.string.getObjCheckYoutubeURI('https://www.youtube.com/embed/mYIfiQlfaas') ); // {type: \"youtube\", uri: \"https://www.youtube.com/embed/mYIfiQlfaas\", youtubeId: \"mYIfiQlfaas\", isValidURI: true}\n   */\n  string.getObjCheckYoutubeURI = function getObjCheckYoutubeURI(uri) {\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckYoutubeURI() must be String.');\n\n    var YOUTUBE_REGEXES = {\n      'watch': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/watch/,\n      'embed': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:embed\\/((?:\\w|-|_){11}))/,\n      'v': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtube\\.com\\/(?:v\\/((?:\\w|-|_){11}))/,\n      'youtu.be': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?youtu\\.be\\/((?:\\w|-|_){11})/\n    };\n\n    var uriType = null;\n    for (var key in YOUTUBE_REGEXES) {\n      var val = YOUTUBE_REGEXES[key];\n      if (!val) continue;\n\n      var flag = YOUTUBE_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        break;\n      }\n    }\n\n    var youtubeId = '',\n      tmpArr = [];\n    switch (uriType) {\n      case 'watch' :\n        youtubeId = string.getUriParam(uri, 'v') || '';\n        break;\n\n      case 'embed' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'v' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      case 'youtu.be' :\n        tmpArr = uri.split('?')[0].split('/');\n        youtubeId = tmpArr[tmpArr.length - 1] || '';\n        break;\n\n      default :\n    }\n\n    var isValidURI = ( youtubeId && string.isValidYoutubeVideoId(youtubeId) );\n    return {\n      type: 'youtube',\n      uri: uri,\n      youtubeId: youtubeId,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * check twitch uri is valid.\n   *\n   * @static\n   * @method getObjCheckTwitchURI\n   * @param {String} uri\n   * @returns {Object} return { type:'twitch', uri: String, channelName: String, videoId: Boolean, isChatting: Boolean, isValidURI: Boolean }\n   * @example\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/chat?popout=')); // {channelName: \"surrenderhs\", isChatting: true, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/chat?popout=\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('twitch.tv/surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"twitch.tv/surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?channel=surrenderhs')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?channel=surrenderhs\", videoId: \"\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('www.twitch.tv/surrenderhs/v/56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"www.twitch.tv/surrenderhs/v/56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('https://player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"https://player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   * console.log(aid.string.getObjCheckTwitchURI('player.twitch.tv/?video=v56097351')); // {channelName: \"surrenderhs\", isChatting: false, isValidURI: true, type: \"twitch\", uri: \"player.twitch.tv/?video=v56097351\", videoId: \"56097351\"}\n   */\n  string.getObjCheckTwitchURI = function getObjCheckTwitchURI(uri) {\n    /*\n     + Live Video\n     https://www.twitch.tv/surrenderhs // channel link\n     https://player.twitch.tv/?channel=surrenderhs // iframe, Flash player\n     https://www.twitch.tv/surrenderhs/chat?popout= // iframe chatting\n\n     + Past Video\n     https://www.twitch.tv/surrenderhs/v/56097351 // channel link\n     https://player.twitch.tv/?video=v56097351 // iframe, Flash player\n\n     + URI TEST\n     https://www.twitch.tv/surrenderhs\n     www.twitch.tv/surrenderhs\n     twitch.tv/surrenderhs\n\n     https://player.twitch.tv/?channel=surrenderhs\n     player.twitch.tv/?channel=surrenderhs\n\n     https://www.twitch.tv/surrenderhs/v/56097351\n     www.twitch.tv/surrenderhs/v/56097351\n\n     https://player.twitch.tv/?video=v56097351\n     player.twitch.tv/?video=v56097351\n     */\n\n    if (!aid.isString(uri)) throw new TypeError('uri parameter type of string.getObjCheckTwitchURI() must be String.');\n\n    var TWITCH_REGEXES = {\n      'liveChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})$/,\n      'liveVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?channel\\=([a-zA-Z0-9][\\w]{2,24})$/,\n      'chatting': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/chat/,\n      'pastChannel': /^(?:(?:https?:)?\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-zA-Z0-9][\\w]{2,24})\\/v\\/(\\d+)/,\n      'pastVideo': /^(?:(?:https?:)?\\/\\/)?player\\.twitch\\.tv\\/\\?video\\=v(\\d+)/\n    };\n\n    var channelName = '',\n      videoId = '',\n      isChatting = false,\n      isValidURI = false;\n\n    var uriType = null;\n    for (var key in TWITCH_REGEXES) {\n      var val = TWITCH_REGEXES.hasOwnProperty(key);\n      if (!val) continue;\n\n      var flag = TWITCH_REGEXES[key].exec(uri) ? true : false;\n      if (flag) {\n        uriType = key;\n        isValidURI = true;\n        break;\n      }\n    }\n\n    var tmpArr = [];\n    switch (uriType) {\n      // https://www.twitch.tv/surrenderhs\n      case 'liveChannel' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://player.twitch.tv/?channel=surrenderhs\n      case 'liveVideo' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        break;\n\n      // https://www.twitch.tv/surrenderhs/chat?popout=\n      case 'chatting' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        isChatting = true;\n        break;\n\n      // https://www.twitch.tv/surrenderhs/v/56097351\n      case 'pastChannel' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        channelName = tmpArr[1];\n        videoId = tmpArr[2];\n        break;\n\n      // https://player.twitch.tv/?video=v56097351\n      case 'pastVideo' :\n        tmpArr = TWITCH_REGEXES[uriType].exec(uri);\n        videoId = tmpArr[1];\n        break;\n\n      default :\n    }\n\n    isValidURI = (channelName || videoId) ? true : false;\n    return {\n      type: 'twitch',\n      uri: uri,\n      channelName: channelName,\n      videoId: videoId,\n      isChatting: isChatting,\n      isValidURI: isValidURI\n    };\n  };\n\n  /**\n   * get prefixed document property string\n   *\n   * @static\n   * @method getDocumentPrefixedProperty\n   * @param {String} propertyName\n   * @param {Boolean} isPropertyFirstCharToUpperCase\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getDocumentPrefixedProperty('visibilityState', true) ); // return 'visibilityState' or 'webkitVisibilityState' or 'mozVisibilityState' or 'msVisibilityState' or 'oVisibilityState'.\n   * console.log( aid.string.getDocumentPrefixedProperty('12345', false) ); // if browser doesn't have property, return ''.\n   */\n  string.getDocumentPrefixedProperty = function getDocumentPrefixedProperty(propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getDocumentPrefixedProperty() must be String.');\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getDocumentPrefixedProperty() must be Boolean.');\n\n    if (propertyName in global.document) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in document) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * get prefixed element style property string\n   *\n   * @static\n   * @method getElementPrefixedStyle\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.getElementPrefixedStyle('transform', true) ); // return 'transform' or 'wekitTransform' or 'mozTransform' or 'msTransform' or 'oTransform'.\n   * console.log( aid.string.getElementPrefixedStyle('12345', false) ); // if browser doesn't have style property, return ''.\n   */\n  string.getElementPrefixedStyle = function getElementPrefixedStyle(propertyName, isPropertyFirstCharToUpperCase) {\n    if (!aid.isString(propertyName)) throw new TypeError('propertyName parameter type of string.getElementPrefixedStyle() must be String.');\n    if (!aid.isBoolean(isPropertyFirstCharToUpperCase)) throw new TypeError('isPropertyFirstCharToUpperCase parameter type of string.getElementPrefixedStyle() must be Boolean.');\n\n    var style = global.document.createElement('div').style;\n    if (propertyName in style) return propertyName;\n\n    var PREFIXES = ['webkit', 'moz', 'ms', 'o'],\n      isPropFirstCharUppercase = (isPropertyFirstCharToUpperCase === true) ? true : false;\n\n    var prop = '';\n    for (var i = 0, max = PREFIXES.length; i < max; i++) {\n      prop = (isPropFirstCharUppercase) ? propertyName.charAt(0).toUpperCase() + propertyName.slice(1) : propertyName;\n\n      prop = PREFIXES[i] + prop;\n      if (prop in style) return prop;\n    }\n\n    return '';\n  };\n\n  /**\n   * null, undefined to empty string. if parameter is not null or undefined, return parameter.\n   *\n   * @static\n   * @method absentToEmpty\n   * @param {String} absentableStr\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.absentToEmpty(null) ); // null to ''.\n   * console.log( aid.string.absentToEmpty(undefined) ); // undefined to ''.\n   * console.log( aid.string.absentToEmpty('javascript') ); // if parameter is exist, return parameter.\n   */\n  string.absentToEmpty = function absentToEmpty(absentableStr) {\n    if (!aid.existy(absentableStr) || !aid.isString(absentableStr)) return '';\n\n    return absentableStr;\n  };\n\n  /**\n   * convert number to string type with commas.\n   * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n   *\n   * @static\n   * @method numberWithCommas\n   * @param {Number} number\n   * @returns {String} return string\n   * @example\n   * console.log( aid.string.numberWithCommas(1000000) ); // 1000000 to '1,000,000'.\n   */\n  string.numberWithCommas = function numberWithCommas(number) {\n    if (!aid.isInteger(number)) throw new TypeError('string.numberWithCommas() requires Integer Number parameter.');\n\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  /**\n   * convert 'translate(0px, 0px)' or 'translateX(0px)' or 'translateY(0px)' format string to { x: 0, y: 0 }.\n   *\n   * @static\n   * @method getPositionFromTranslateStr\n   * @param {String} str\n   * @returns {Object} return object\n   * @example\n   * string.getPositionFromTranslateStr('translate(99px)'); // {x: 99, y: 0}\n   * string.getPositionFromTranslateStr('translate(99px, 999px)'); // {x: 99, y: 999}\n   * string.getPositionFromTranslateStr('translateX(99px)'); // {x: 99, y: 0}\n   * string.getPositionFromTranslateStr('translateY(99px)'); // {x: 0, y: 99}\n   */\n  string.getPositionFromTranslateStr = function getPositionFromTranslateStr(str) {\n    if (!aid.isString(str)) throw new TypeError('string.getPositionFromTranslateStr() requires String parameter.');\n\n    var obj = {x: 0, y: 0};\n    if (!aid.isDefined(str)) return obj;\n\n    var values = str.match(/[+-]?(\\d*\\.)?\\d+/g);\n    if (values.length <= 0) return obj;\n\n    if (/translateX/g.test(str)) {\n      obj.x = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    if (/translateY/g.test(str)) {\n      obj.y = parseFloat(values[0], 10);\n      return obj;\n    }\n\n    obj.x = parseFloat(values[0], 10);\n    if (values.length > 1) obj.y = parseFloat(values[1], 10);\n\n    return obj;\n  };\n\n  /**\n   * get flag string is palindrome.\n   *\n   * @static\n   * @method isPalindrome\n   * @param {String} str\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.string.isPalindrome('abcdeedcba') ); // true\n   * console.log( aid.string.isPalindrome('motor') ); // false\n   */\n  string.isPalindrome = function isPalindrome(str) {\n    if (!aid.isString(str)) throw new TypeError('string.isPalindrome() requires String parameter.');\n\n    if (str.length <= 1) return true;\n    if (str.slice(0, 1) !== str.slice(-1)) return false;\n\n    return aid.string.isPalindrome(str.slice(-1, 1));\n  };\n\n  /**\n   * get aspectFill content size\n   *\n   * @static\n   * @method getSizeAspectFill\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fillWidth\n   * @param {Number} fillHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFill(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFill = function getSizeAspectFill(srcWidth, srcHeight, fillWidth, fillHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fillWidth) || !isNumber(fillHeight)) {\n      throw new TypeError('math.getSizeAspectFill() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fillWidth,\n      modifiedSizeH = Math.ceil((fillWidth / srcWidth) * srcHeight);\n\n    if (modifiedSizeH < fillHeight) {\n      modifiedSizeW = Math.ceil((fillHeight / srcHeight) * srcWidth);\n      modifiedSizeH = fillHeight;\n    }\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get aspectFit content size\n   *\n   * @static\n   * @method getSizeAspectFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @param {Number} fitHeight\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeAspectFit(960, 640, window.innerWidth, window.innerHeight) );\n   */\n  math.getSizeAspectFit = function getSizeAspectFit(srcWidth, srcHeight, fitWidth, fitHeight) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth) || !isNumber(fitHeight)) {\n      throw new TypeError('math.getSizeAspectFit() requires Number parameters.');\n    }\n\n    var ratio = Math.min(fitWidth / srcWidth, fitHeight / srcHeight),\n      modifiedSizeW = Math.ceil(srcWidth * ratio),\n      modifiedSizeH = Math.ceil(srcHeight * ratio);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get widthFit content size\n   *\n   * @static\n   * @method getSizeWidthFit\n   * @param {Number} srcWidth\n   * @param {Number} srcHeight\n   * @param {Number} fitWidth\n   * @returns {Object} return { width: Number, height: Number }\n   * @example\n   * console.log( aid.math.getSizeWidthFit(960, 640, window.innerWidth) );\n   */\n  math.getSizeWidthFit = function getSizeWidthFit(srcWidth, srcHeight, fitWidth) {\n    var isNumber = aid.isNumber;\n    if (!isNumber(srcWidth) || !isNumber(srcHeight) || !isNumber(fitWidth)) {\n      throw new TypeError('math.getSizeWidthFit() requires Number parameters.');\n    }\n\n    var modifiedSizeW = fitWidth,\n      modifiedSizeH = Math.ceil((fitWidth / srcWidth) * srcHeight);\n\n    return {\n      width: modifiedSizeW,\n      height: modifiedSizeH\n    };\n  };\n\n  /**\n   * get flag whether 2 numbers are equal by Number.EPSILON\n   *\n   * @static\n   * @method isEpsilonEqual\n   * @param {Number} number_a\n   * @param {Number} number_b\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isEpsilonEqual(0.1 + 0.2, 0.3) );\n   */\n  math.isEpsilonEqual = function isEpsilonEqual(number_a, number_b) {\n    if (!aid.isNumber(number_a) || !aid.isNumber(number_b)) {\n      throw new TypeError('math.isEpsilonEqual() requires Number parameters.');\n    }\n\n    if (!Number.EPSILON) throw new Error('Number.EPSILON is not exist. math.isEpsilonEqual() can not use.');\n\n    return (Math.abs(number_a - number_b) < Number.EPSILON);\n  };\n\n  /**\n   * get flag that looped values in 1 ~ totalLength has searchIndex.\n   * value increases from startIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1.\n   * if searchIndex in values, return true.\n   * otherwise, return false.\n   *\n   * @static\n   * @method isIndexInLoop\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @param {Number} searchIndex\n   * @returns {Boolean} return boolean\n   * @example\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 3) ); // false\n   * console.log( aid.math.isIndexInLoop(8, 5, 6, 6) ); // true\n   */\n  math.isIndexInLoop = function isIndexInLoop(totalLength, loopGap, firstIndex, searchIndex) {\n    if (arguments.length < 4) throw new Error('math.isIndexInLoop() requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex) || !isInteger(searchIndex)) {\n      throw new TypeError('math.isIndexInLoop() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.isIndexInLoop() can not smaller than 1.');\n    }\n    if (loopGap > totalLength) {\n      throw new Error('loopGap parameter of math.isIndexInLoop() can not bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap; i++) {\n      if (index === searchIndex) return true;\n      index = (index + 1 > totalLength) ? 1 : index + 1;\n    }\n\n    return false;\n  };\n\n  /**\n   * get looped index from firstIndex in 1 ~ totalLength.\n   * value increases from firstIndex to (firstIndex + loopGap - 1).\n   * if value is bigger than totalLength, change value to 1. and, return value.\n   *\n   * @static\n   * @method getLoopedLastIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getLoopedLastIndex(8, 1, 7) ); // 7\n   * console.log( aid.math.getLoopedLastIndex(8, 4, 7) ); // 2\n   */\n  math.getLoopedLastIndex = function getLoopedLastIndex(totalLength, loopGap, firstIndex) {\n    if (arguments.length < 3) throw new Error('math.getLoopedLastIndex() requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(firstIndex)) {\n      throw new TypeError('math.getLoopedLastIndex() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || firstIndex < 1) {\n      throw new Error('totalLength, firstIndex parameter of math.getLoopedLastIndex() can not smaller than 1.');\n    }\n    if (loopGap > totalLength || firstIndex > totalLength) {\n      throw new Error('loopGap, firstIndex parameter of math.getLoopedLastIndex() can not bigger than totalLength parameter.');\n    }\n\n    var index = firstIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = (index + 1 > totalLength) ? 1 : index + 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get reverse looped index from lastIndex in 1 ~ totalLength.\n   * value decreases from lastIndex to (lastIndex - loopGap - 1).\n   * if value is smaller than 0, change value to totalLength. and return value.\n   *\n   * @static\n   * @method getReverseLoopedFirstIndex\n   * @param {Number} totalLength\n   * @param {Number} loopGap\n   * @param {Number} firstIndex\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 4, 2) ); // 7\n   * console.log( aid.math.getReverseLoopedFirstIndex(8, 8, 2) ); // 3\n   */\n  math.getReverseLoopedFirstIndex = function getReverseLoopedFirstIndex(totalLength, loopGap, lastIndex) {\n    if (arguments.length < 3) throw new Error('math.getReverseLoopedFirstIndex() requires 3 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalLength) || !isInteger(loopGap) || !isInteger(lastIndex)) {\n      throw new TypeError('math.getReverseLoopedFirstIndex() requires Integer Number parameters.');\n    }\n    if (totalLength < 1 || lastIndex < 1) {\n      throw new Error('totalLength, lastIndex parameter of math.getReverseLoopedFirstIndex can not smaller than 1.');\n    }\n    if (loopGap > totalLength || lastIndex > totalLength) {\n      throw new Error('loopGap, lastIndex parameter of math.getReverseLoopedFirstIndex can not bigger than totalLength parameter.');\n    }\n\n    var index = lastIndex;\n    for (var i = 0; i < loopGap - 1; i++) {\n      index = (index - 1 < 1) ? totalLength : index - 1;\n    }\n\n    return index;\n  };\n\n  /**\n   * get factorial value\n   *\n   * @static\n   * @method factorial\n   * @param {Number} Int number\n   * @returns {Number} return Int Number\n   * @example\n   * console.log( aid.math.factorial(-99) ); // 1\n   * console.log( aid.math.factorial(5) ); // 5 * 4 * 3 * 2 * 1 = 120\n   */\n  math.factorial = function factorial(number) {\n    if (!aid.isInteger(number)) throw new TypeError('math.factorial() requires Integer Number parameter.');\n\n    if (number < 1) return 1;\n    return number * aid.math.factorial(number - 1);\n  };\n\n  /**\n   * get board pagination info object.\n   *\n   * @static\n   * @method getObjForPagination\n   * @param {Number} totalPostNum\n   * @param {Number} displayPostNumPerPage\n   * @param {Number} displayPaginationBtnNum\n   * @param {Number} pageIndex\n   * @returns {Object} return object\n   * @example\n   * console.log( aid.math.getObjForPagination(39, 10, 5, 1) ); // {totalPostNum: 39, displayPostNumPerPage: 10, displayPaginationBtnNum: 5, pageIndex: 1, totalPageNum: 4, prevPageIndex: 0, firstPageIndex: 1, lastPageIndex: 4, nextPageIndex: 0}\n   */\n  math.getObjForPagination = function getObjForPagination(totalPostNum, displayPostNumPerPage, displayPaginationBtnNum, pageIndex) {\n    if (arguments.length < 4) throw new Error('math.getObjForPagination() requires 4 parameters.');\n\n    var isInteger = aid.isInteger;\n    if (!isInteger(totalPostNum) || !isInteger(displayPostNumPerPage) || !isInteger(displayPaginationBtnNum) || !isInteger(pageIndex)) {\n      throw new TypeError('math.getObjForPagination() requires Integer Number parameters.');\n    }\n    if (totalPostNum <= 0 || displayPostNumPerPage <= 0 || displayPaginationBtnNum <= 0 || pageIndex <= 0) {\n      throw new TypeError('math.getObjForPagination() requires positive Integer Number parameters.');\n    }\n\n    var totalPageNum = Math.ceil(totalPostNum / displayPostNumPerPage);\n    if (pageIndex < 1) pageIndex = 1;\n    if (pageIndex > totalPageNum) pageIndex = totalPageNum;\n\n    var paginationBtnGroupIndex = Math.floor((pageIndex - 1) / displayPaginationBtnNum),\n      prevPageIndex = paginationBtnGroupIndex * displayPaginationBtnNum,\n      firstPageIndex = (paginationBtnGroupIndex * displayPaginationBtnNum) + 1,\n      lastPageIndex = firstPageIndex + displayPaginationBtnNum - 1,\n      nextPageIndex = lastPageIndex + 1;\n\n    if (lastPageIndex > totalPageNum) lastPageIndex = totalPageNum;\n    if (nextPageIndex > totalPageNum) nextPageIndex = 0;\n\n    return {\n      totalPostNum: totalPostNum,\n      displayPostNumPerPage: displayPostNumPerPage,\n      displayPaginationBtnNum: displayPaginationBtnNum,\n      pageIndex: pageIndex,\n\n      totalPageNum: totalPageNum,\n      prevPageIndex: prevPageIndex,\n      firstPageIndex: firstPageIndex,\n      lastPageIndex: lastPageIndex,\n      nextPageIndex: nextPageIndex\n    };\n  };\n\n  /**\n   * convert degree to radian.\n   *\n   * @static\n   * @method degreeToRadian\n   * @param {Number} number\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.degreeToRadian(90) ); // 1.5707963267948966\n   */\n  math.degreeToRadian = function (degree) {\n    if (!aid.isNumber(degree)) {\n      throw new TypeError('math.degreeToRadian() requires Number parameter.');\n    }\n\n    return degree * Math.PI / 180;\n  };\n\n  /**\n   * convert radian to radian.\n   *\n   * @static\n   * @method radianToDegree\n   * @param {Number} number\n   * @returns {Number} return number\n   * @example\n   * console.log( aid.math.radianToDegree(1.5707963267948966) ); // 90\n   */\n  math.radianToDegree = function (radian) {\n    if (!aid.isNumber(radian)) {\n      throw new TypeError('math.radianToDegree() requires Number parameter.');\n    }\n\n    return radian * 180 / Math.PI;\n  };\n\n  /**\n   * days name\n   *\n   * @static\n   * @property date.DAYS\n   * @returns {Array} return Array\n   * @example\n   */\n  date.DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  /**\n   * months name\n   *\n   * @static\n   * @property date.MONTHS\n   * @returns {Array} return Array\n   * @example\n   */\n  date.MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  /**\n   * 1 minutes to second unit (60 sec)\n   *\n   * @static\n   * @property date.MIN_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.MIN_TO_SEC = 60;\n\n  /**\n   * 1 hour to second unit (60 * 60 = 3600 sec)\n   *\n   * @static\n   * @property date.HOUR_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.HOUR_TO_SEC = 3600;\n\n  /**\n   * 1 day to second unit (60 * 60 * 24 = 86400 sec)\n   *\n   * @static\n   * @property date.DAY_TO_SEC\n   * @returns {Number} return Int number\n   * @example\n   */\n  date.DAY_TO_SEC = 86400;\n\n  /**\n   * equal to Array.indexOf\n   *\n   * @static\n   * @method indexOf\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = ['foo', 1, 'bar', 2, null, 99];\n   * console.log( aid.array.indexOf(arr, undefined) ); // -1\n   * console.log( aid.array.indexOf(arr, 99) ); // 5\n   */\n  array.indexOf = function indexOf(arr, target) {\n    if (!aid.isArray(arr)) throw new TypeError('math.indexOf() requires Number parameter.');\n\n    for (var i = 0, max = arr.length; i < max; ++i) {\n      if (arr[i] === target) return i;\n    }\n\n    return -1;\n  };\n\n  /**\n   * get index of minimum number in Array.\n   *\n   * @static\n   * @method indexOfMin\n   * @param {Array} arr\n   * @param {Number} startSearchIndex\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.indexOfMin(arr, 0) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 1) ); // 1\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 2) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 4) ); // 4\n   * console.log( aid.array.indexOfMin(arr, 5) ); // 6\n   * console.log( aid.array.indexOfMin(arr, 6) ); // 6\n   */\n  array.indexOfMin = function indexOfMin(arr, startSearchIndex) {\n    if (!aid.isArray(arr) || !aid.isInteger(startSearchIndex)) return -1;\n\n    var startIndex = (startSearchIndex > 0) ? startSearchIndex : 0;\n    if (arr.length <= startIndex) return -1;\n\n    var minVal = arr[startIndex],\n      minIndex = startIndex;\n\n    for (var i = minIndex + 1, max = arr.length; i < max; i++) {\n      if (arr[i] < minVal) {\n        minVal = arr[i];\n        minIndex = i;\n      }\n    }\n\n    return minIndex;\n  };\n\n  /**\n   * swap two elements in Array.\n   *\n   * @static\n   * @method swap\n   * @param {Array} arr\n   * @param {Number} firstIndex\n   * @param {Number} secondIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.swap(arr, 0, 1) ); // [6, 18, 66, 44, 9, 22, 14]\n   */\n  array.swap = function swap(arr, firstIndex, secondIndex) {\n    if (arguments.length !== 3) return null;\n    if (!aid.isArray(arr) || !aid.isInteger(firstIndex) || !aid.isInteger(secondIndex)) return null;\n    if (firstIndex < 0 || firstIndex >= arr.length || secondIndex < 0 || secondIndex >= arr.length) return null;\n\n    var tmp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = tmp;\n\n    return arr;\n  };\n\n  /**\n   * apply selection sort in Array.\n   *\n   * @static\n   * @method selectionSort\n   * @param {Array} arr\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.selectionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.selectionSort = function selectionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var minIndex = 0;\n    for (var i = 0, max = arr.length - 1; i < max; i++) {\n      minIndex = array.indexOfMin(arr, i);\n      array.swap(arr, i, minIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply insertion sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/insertion-sort/a/insertion-sort\n   *\n   * @static\n   * @method insertionSort\n   * @param {Array} arr\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.insertionSort(arr) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.insertionSort = function insertionSort(arr) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    var value;\n    for (var i = 1, max = arr.length; i < max; i++) {\n      value = arr[i];\n\n      for (var j = i - 1; j >= 0 && arr[j] > value; j--) {\n        arr[j + 1] = arr[j];\n      }\n      arr[j + 1] = value;\n    }\n\n    return arr;\n  };\n\n  /**\n   * merge sort to startIndex ~ middleIndex elements, and middleIndex ~ endIndex elements.\n   * this function is only used by aid.array.mergeSort function.\n   *\n   * @static\n   * @method merge\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} middleIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   */\n  array.merge = function merge(arr, startIndex, middleIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n    if (startIndex > middleIndex || middleIndex > endIndex) return null;\n\n    var i = startIndex,\n      j = middleIndex + 1,\n      k = startIndex,\n      tmpArr = [];\n\n    // compare startIndex ~ middleIndex datas, and middleIndex + 1 ~ endIndex datas.\n    while (i <= middleIndex && j <= endIndex) {\n      if (arr[i] <= arr[j]) {\n        tmpArr[k++] = arr[i++];\n      } else {\n        tmpArr[k++] = arr[j++];\n      }\n    }\n\n    if (i > middleIndex) {\n      // set rest right array\n      for (var r = j; r <= endIndex; r++) {\n        tmpArr[k] = arr[r];\n        k++;\n      }\n\n    } else {\n      // set rest left array\n      for (var l = i; l <= middleIndex; l++) {\n        tmpArr[k] = arr[l];\n        k++;\n      }\n    }\n\n    // set sorted values to arr.\n    for (var n = startIndex; n <= endIndex; n++) {\n      arr[n] = tmpArr[n];\n    }\n\n    return arr;\n  };\n\n  /**\n   * apply merge sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/analysis-of-merge-sort\n   *\n   * @static\n   * @method mergeSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.mergeSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.mergeSort = function mergeSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex + 1 === endIndex) {\n      if (arr[startIndex] > arr[endIndex]) {\n        aid.array.swap(arr, startIndex, endIndex);\n      }\n\n      return arr;\n    }\n\n    var middleIndex = Math.floor((startIndex + endIndex) / 2);\n\n    aid.array.mergeSort(arr, startIndex, middleIndex);\n    aid.array.mergeSort(arr, middleIndex + 1, endIndex);\n\n    aid.array.merge(arr, startIndex, middleIndex, endIndex);\n\n    return arr;\n  };\n\n  /**\n   * quick sort with use pivot value.\n   * this function is only used by aid.array.quickSort function.\n   *\n   * @static\n   * @method getPivotIndexAfterPartition\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Number} return index of pivot (between group that less or equal to the pivot, and group that greater than the pivot). Int Number.\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.getPivotIndexAfterPartition(arr, 0, arr.length - 1) ); // [6, 9, 14, 44, 18, 22, 66]\n   */\n  array.getPivotIndexAfterPartition = function getPivotIndexAfterPartition(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return -1;\n    if (startIndex > endIndex) return -1;\n\n    if (arr.length <= 1) return 0;\n\n    var pivot = arr[endIndex],\n      swapIndex = startIndex;\n\n    for (var i = startIndex; i < endIndex; i++) {\n      if (arr[i] <= pivot) {\n        aid.array.swap(arr, i, swapIndex);\n        swapIndex++;\n      }\n    }\n\n    if (endIndex !== swapIndex) aid.array.swap(arr, endIndex, swapIndex);\n\n    return swapIndex;\n  };\n\n  /**\n   * apply quick sort in Array.\n   * https://ko.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\n   *\n   * @static\n   * @method quickSort\n   * @param {Array} arr\n   * @param {Number} startIndex\n   * @param {Number} endIndex\n   * @returns {Array} return Array or null\n   * @example\n   * var arr = [18, 6, 66, 44, 9, 22, 14];\n   * console.log( aid.array.quickSort(arr, 0, arr.length - 1) ); // [6, 9, 14, 18, 22, 44, 66]\n   */\n  array.quickSort = function quickSort(arr, startIndex, endIndex) {\n    if (!aid.isArray(arr) || arr.length <= 0) return null;\n\n    if (arr.length <= 1 || startIndex === endIndex) return null;\n\n    if (startIndex < endIndex) {\n      var pivotIndex = aid.array.getPivotIndexAfterPartition(arr, startIndex, endIndex);\n\n      aid.array.quickSort(arr, startIndex, pivotIndex - 1);\n      aid.array.quickSort(arr, pivotIndex + 1, endIndex);\n    }\n\n    return arr;\n  };\n\n  /**\n   * remove element in Array, and return cloned Array.\n   *\n   * @static\n   * @method remove\n   * @param {Array} arr\n   * @param {Object} target\n   * @returns {Array} return Array\n   * @example\n   * var arr = [1, 2, 3, 4, 5, 99];\n   * console.log( aid.array.remove(arr, 99) ); // [1, 2, 3, 4, 5]\n   */\n  array.remove = function remove(arr, target) {\n    if (!aid.isArray(arr)) {\n      throw new TypeError('arr parameter type of array.remove() must be Array.');\n    }\n\n    var clonedArr = arr.slice(0),\n      index = array.indexOf(clonedArr, target);\n    if (index >= 0) clonedArr.splice(index, 1);\n\n    return clonedArr;\n  };\n\n  /**\n   * get 2 x 2 Matrix Array\n   *\n   * @static\n   * @method getMatrixArr\n   * @param {Number} rowNum\n   * @param {Number} columnNum\n   * @param {Object} initialVal\n   * @returns {Array} return array\n   * @example\n   * console.log( aid.array.getMatrixArr(2, 2, 0) ); // [ [0, 0], [0, 0] ]\n   */\n  array.getMatrixArr = function getMatrixArr(rowNum, columnNum, initialVal) {\n    if (!aid.isInteger(rowNum) || !aid.isInteger(columnNum)) {\n      throw new TypeError('rowNum, columnNum parameter of array.getMatrixArr() must be Integer Number.');\n    }\n    if (arguments.length !== 3) {\n      throw Error('array.getMatrixArr() requires 3 parameters.');\n    }\n\n    var arr = [];\n    for (var i = 0; i < rowNum; ++i) {\n      var columns = [];\n\n      for (var j = 0; j < columnNum; ++j) {\n        columns[j] = initialVal;\n      }\n      arr[i] = columns;\n    }\n\n    return arr;\n  };\n\n  /**\n   * binary search version of Array.indexOf\n   *\n   * @static\n   * @method binaryIndexOf\n   * @param {Array} sortedArray\n   * @param {Object} target\n   * @returns {Number} return Int number\n   * @example\n   * var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n   * console.log( aid.array.binaryIndexOf(arr, 7) ); // 7\n   */\n  array.binaryIndexOf = function binaryIndexOf(sortedArray, target) {\n    if (!aid.isArray(sortedArray) || sortedArray.length <= 0) return -1;\n\n    var first = 0,\n      last = sortedArray.length - 1,\n      middle;\n\n    while (first <= last) {\n      middle = Math.floor((first + last) / 2);\n\n      if (target === sortedArray[middle]) {\n        return middle;\n      } else {\n        if (target < sortedArray[middle]) {\n          last = middle - 1;\n        } else {\n          first = middle + 1;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  /**\n   * get object has property in array.\n   * this object is first matched element in array by value or regex.\n   *\n   * @static\n   * @method getFirstObjectHasProperty\n   * @param {Array} arrayHasObjects\n   * @param {String} propertyKey\n   * @param {Object} findPropertyValueOrRegex\n   * @returns {Object} return object\n   * @example\n   * var arrayHasObjects = [{ no: 11 }, { no: 22 }];\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'index', 11) ); // null\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', 11) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', new RegExp('^1')) ); // {no: 11}\n   * console.log( aid.array.getFirstObjectHasProperty(arrayHasObjects, 'no', /^(1)\\d/) ); // {no: 11}\n   */\n  array.getFirstObjectHasProperty = function getFirstObjectHasProperty(arrayHasObjects, propertyKey, findPropertyValueOrRegex) {\n    if (!aid.isArray(arrayHasObjects) || arrayHasObjects.length <= 0) return null;\n    if (!aid.isString(propertyKey)) return null;\n\n    var obj, result = null;\n    for (var i = 0, max = arrayHasObjects.length; i < max; ++i) {\n      obj = arrayHasObjects[i];\n      if (!obj.hasOwnProperty(propertyKey)) continue;\n\n      if (aid.isRegExp(findPropertyValueOrRegex)) {\n        if (findPropertyValueOrRegex.test(obj[propertyKey])) {\n          result = obj;\n          break;\n        }\n      } else {\n        if (obj[propertyKey] === findPropertyValueOrRegex) {\n          result = obj;\n          break;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * check element is in viewport entirely.\n   *\n   * @static\n   * @method isEntirelyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isEntirelyInViewport = function isEntirelyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (global.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (global.innerWidth || document.documentElement.clientWidth)\n    );\n  };\n\n  /**\n   * check element is in viewport partially.\n   *\n   * @static\n   * @method isPartiallyInViewport\n   * @param {Element} ele\n   * @returns {Boolean} return boolean\n   * @example\n   */\n  element.isPartiallyInViewport = function isPartiallyInViewport(ele) {\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n    if (!ele) return false;\n\n    var rect = ele.getBoundingClientRect(),\n      windowHeight = (global.innerHeight || document.documentElement.clientHeight),\n      windowWidth = (global.innerWidth || document.documentElement.clientWidth);\n\n    // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap\n    var verticallyInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0),\n      horizontallyInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n\n    return (verticallyInView && horizontallyInView);\n  };\n\n  /**\n   * create script file, and append to target element.\n   *\n   * @static\n   * @method appendScriptFile\n   * @param {String} fileUrl\n   * @param {Element} targetElementToAppendFile\n   * @param {Function} loadCompleteCallback\n   * @example\n   * aid.file.appendScriptFile('https://apis.google.com/js/client.js', document.head, function() { console.log('load script file completely'); });\n   */\n  file.appendScriptFile = function appendScriptFile(fileUrl, targetElementToAppend, loadCompleteCallback) { // document.head, document.body\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n\n    if (typeof loadCompleteCallback === 'function') {\n      if (typeof script.onreadystatechange === 'undefined') {\n        script.onload = loadCompleteCallback;\n\n      } else {\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            loadCompleteCallback();\n          }\n        };\n      }\n    }\n\n    script.src = fileUrl;\n\n    var ele = targetElementToAppend;\n    if (typeof jQuery === 'function' && ele instanceof jQuery) ele = ele.get(0);\n\n    if (ele) {\n      ele.appendChild(script);\n\n    } else {\n      var firstScript = document.getElementsByTagName('script')[0];\n      firstScript.parentNode.insertBefore(script, firstScript);\n    }\n  };\n\n  /*\n   * export\n   */\n  aid.platform = platform;\n  aid.operator = operator;\n  aid.browser = browser;\n  aid.string = string;\n  aid.math = math;\n  aid.date = date;\n  aid.array = array;\n  aid.element = element;\n  aid.file = file;\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = aid;\n    }\n  } else if (typeof define === 'function' && define.amd) {\n    define('aid', [], function () {\n      return aid;\n    });\n  } else {\n    global.aid = aid;\n  }\n}());"]}